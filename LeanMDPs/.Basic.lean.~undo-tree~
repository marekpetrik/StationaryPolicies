(undo-tree-save-format-version . 1)
"4ba279673b4bd6aecac048a10bf1a36110d88de4"
[nil nil nil nil (26409 32863 654845 12000) 0 nil]
([nil nil ((1 . 2) (t 26409 32516 579707 274000)) nil (26409 32863 654844 24000) 0 nil])
([nil nil ((1 . 7)) nil (26409 32863 654843 40000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("r" 0 1 (fontified t)) . -6) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 7) nil (26409 32863 654841 371000) 0 nil])
([nil nil ((5 . 15)) nil (26409 32863 654818 167000) 0 nil])
([nil nil ((15 . 16)) nil (26409 32863 654816 947000) 0 nil])
([nil nil ((37 . 38) 16) nil (26409 32863 654812 757000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -100) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -101) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (#("n" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -102) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -103) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -104) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -105) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -106) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) 107 (99 . 107) (97 . 99) (96 . 97) (93 . 96) (86 . 93) (#("History" 0 7 (fontified nil)) . -86) (86 . 93) (#("History" 0 7 (face font-lock-function-name-face fontified t)) . -86) (undo-tree-id1150 . -7) (undo-tree-id1151 . -7) (undo-tree-id1152 . -7) (undo-tree-id1153 . -7) 93 (76 . 93) (74 . 76) (66 . 74) (65 . 66) (53 . 65) (51 . 53) (29 . 30) (29 . 30) (16 . 29) (#("Data.Nat.Defs

" 0 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified t)) . 16) (16 . 29) (#("Nat" 0 3 (fontified t)) . -16) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) 19 (#("u" 0 1 (fontified t)) . -19) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (#("r" 0 1 (fontified t)) . -20) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (#("a" 0 1 (fontified t)) . -21) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) 22 (20 . 22) (16 . 20) (#("N" 0 1 (fontified t)) . -16) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (#("O" 0 1 (fontified t)) . -17) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) 18 (18 . 20) (#("
" 0 1 (fontified t)) . 18) (#("
" 0 1 (fontified t)) . 18) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (16 . 18) ("no" . -16) (nil fontified t 16 . 18) (#("NOT'" 0 4 (fontified t)) . -16) (20 . 22) 20 (nil fontified t 17 . 20) (#("NOT" 0 3 (fontified t)) . -16) (19 . 23) 19 (nil fontified t 16 . 19) (#("NOT" 0 3 (fontified t)) . -16) (19 . 22) 19 (16 . 19) ("not" . -16) (nil fontified nil 18 . 19) (#("N" 0 1 (fontified nil)) . -16) (17 . 20) 17 (#("NO" 0 2 (fontified nil)) . 17) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (16 . 17) 18 (16 . 18) ("no" . -16) (nil fontified t 16 . 18) (#("NOT'" 0 4 (fontified t)) . -16) (20 . 22) 20 (nil fontified t 17 . 20) (#("NOT" 0 3 (fontified t)) . -16) (19 . 23) 19 (nil fontified t 16 . 19) (#("NOT" 0 3 (fontified t)) . -16) (19 . 22) 19 (16 . 19) ("not" . -16) (nil fontified nil 18 . 19) (#("N" 0 1 (fontified nil)) . -16) (17 . 20) 17 (#("NOT'" 0 4 (fontified nil)) . 17) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (16 . 17) 20 (nil fontified t 17 . 20) (#("NOT" 0 3 (fontified t)) . -16) (19 . 23) 19 (nil fontified t 17 . 19) (#("NO" 0 2 (fontified t)) . -16) (18 . 21) 18 (16 . 18) ("no" . -16) (nil fontified t 16 . 18) (#("NOT" 0 3 (fontified t)) . -16) (19 . 21) 19 (16 . 19) ("not" . -16) (#("N" 0 1 (fontified t)) . -16) (17 . 20) 17 (16 . 17) (15 . 16) (#("." 0 1 (fontified t)) . -15) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("N" 0 1 (fontified t)) . -16) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) 17 (15 . 17) (#("." 0 1 (fontified t)) . -15) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (#("A" 0 1 (fontified t)) . -16) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (#("l" 0 1 (fontified t)) . -17) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (#("g" 0 1 (fontified t)) . -18) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (#("e" 0 1 (fontified t)) . -19) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (#("b" 0 1 (fontified t)) . -20) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("r" 0 1 (fontified t)) . -21) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("a" 0 1 (fontified t)) . -22) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("." 0 1 (fontified t)) . -23) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (#("G" 0 1 (fontified t)) . -24) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (#("r" 0 1 (fontified t)) . -25) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("o" 0 1 (fontified t)) . -26) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (#("u" 0 1 (fontified t)) . -27) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (#("p" 0 1 (fontified t)) . -28) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (#("." 0 1 (fontified t)) . -29) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (#("B" 0 1 (fontified t)) . -30) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (#("a" 0 1 (fontified t)) . -31) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (#("s" 0 1 (fontified t)) . -32) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (#("i" 0 1 (fontified t)) . -33) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (#("c" 0 1 (fontified t)) . -34) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) 35 (18 . 19) (23 . 34) (#("B" 0 1 (fontified t)) . -23) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (#("s" 0 1 (fontified t)) . -25) (undo-tree-id1251 . -1) (#("i" 0 1 (fontified t)) . -26) (undo-tree-id1252 . -1) (#("c" 0 1 (fontified t)) . -27) (undo-tree-id1253 . -1) (#("." 0 1 (fontified t)) . -28) (undo-tree-id1254 . -1) (#("G" 0 1 (fontified t)) . -29) (undo-tree-id1255 . -1) (#("r" 0 1 (fontified t)) . -30) (undo-tree-id1256 . -1) 31 (29 . 31) (25 . 29) (#("i" 0 1 (fontified t)) . -25) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (#("c" 0 1 (fontified t)) . -26) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) 27 (16 . 27) (#("G" 0 1 (fontified t)) . -16) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (#("r" 0 1 (fontified t)) . -17) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (#("o" 0 1 (fontified t)) . -18) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (#("u" 0 1 (fontified t)) . -19) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (#("p" 0 1 (fontified t)) . -20) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (#("." 0 1 (fontified t)) . -21) (undo-tree-id1271 . -1) 22 (18 . 22) (15 . 18) (#("." 0 1 (fontified t)) . -17) (undo-tree-id1272 . -1) (#("G" 0 1 (fontified t)) . -18) (undo-tree-id1273 . -1) 19 (17 . 19) (t 26409 32863 692480 752000)) nil (26409 33644 248714 450000) 0 nil])
([nil nil ((#("#check hello
#check ℕ
" 0 6 (face lsp-face-semhl-keyword fontified t) 6 13 (fontified t) 13 19 (face lsp-face-semhl-keyword fontified t) 19 20 (fontified t) 20 21 (face font-lock-constant-face fontified t) 21 22 (fontified t)) . 53) (undo-tree-id1093 . -15) (undo-tree-id1094 . -15) (undo-tree-id1095 . 19) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -15) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -13) (undo-tree-id1111 . -15) (undo-tree-id1112 . -22) (undo-tree-id1113 . -21) 68) nil (26409 33644 248625 672000) 0 nil])
([nil nil ((#("def hello := \"world\"
" 0 3 (face lsp-face-semhl-keyword fontified t) 3 4 (fontified t) 4 9 (face font-lock-function-name-face fontified t) 9 10 (fontified t) 10 12 (face font-lock-constant-face fontified t) 12 13 (fontified t) 13 20 (face font-lock-string-face fontified t) 20 21 (fontified t)) . 31) (undo-tree-id1087 . -20) (undo-tree-id1088 . -12) (undo-tree-id1089 . -3) (undo-tree-id1090 . -20) (undo-tree-id1091 . -20) (undo-tree-id1092 . -21)) nil (26409 33644 248605 159000) 0 nil])
([nil nil ((62 . 67) (#("k" 0 1 (fontified t)) . -62) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#(" " 0 1 (fontified t)) . -63) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 64 (60 . 64) (#("k" 0 1 (fontified t)) . -60) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (#("c" 0 1 (fontified t)) . -61) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) 62 (56 . 62) (54 . 57) (#("
" 0 1 (fontified t match-data (5 8 5 6 6 7 7 8))) . -48) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) 49 (48 . 49) (116 . 117) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -116) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) 117 (116 . 117) (115 . 116) (73 . 74) (73 . 79) (129 . 136) (#("History" 0 7 (fontified nil)) . -129) (129 . 136) (#("History" 0 7 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -129) (undo-tree-id749 . -7) (undo-tree-id750 . -7) (undo-tree-id751 . -7) (undo-tree-id752 . -7) (undo-tree-id753 . -7) (undo-tree-id754 . -7) (undo-tree-id755 . -7) (undo-tree-id756 . -7) 136 (128 . 136) (99 . 100) (#("-" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -99) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -100) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) 101 (128 . 129) (#("-" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -128) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (#(">" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -129) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -130) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#("H" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -131) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -132) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) 133 (#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -133) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) 134 (118 . 134) (#("H" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -118) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#("i" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -119) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -120) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -121) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("o" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -122) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -123) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (#("y" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -124) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -125) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) 126 (119 . 126) (#("o" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -119) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -120) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -121) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("y" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -122) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -123) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) 124 (112 . 124) (110 . 112) (109 . 110) (99 . 101) (#(":" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -99) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) 100 (94 . 96) (73 . 80) (73 . 78) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -73) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (#(":" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -74) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -75) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) 76 (93 . 97) (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -93) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -94) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -95) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("y" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -96) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) 97 (88 . 97) (80 . 88) (72 . 73) (44 . 53) (40 . 41) (34 . 43) (31 . 34)) nil (26409 33644 248589 103000) 0 nil])
([nil nil ((92 . 95) (#("ℕ" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -92) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 93 (132 . 133) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -132) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 133 (186 . 188) (171 . 176) (#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -171) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -172) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("g" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -173) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("m" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -174) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -175) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) 176 (165 . 176) (#("α" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -165) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 166 (162 . 166) (157 . 161) (147 . 148) (148 . 149) (157 . 158) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -157) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 158 (142 . 143) (154 . 155) (142 . 147) (#("h" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -142) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -143) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -144) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (#("d" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -145) (undo-tree-id645 . -1) 146 (142 . 146) (#("(" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -142) (undo-tree-id646 . -1) 143 (132 . 133) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -132) (undo-tree-id647 . -1) 133 (132 . 133) (#("K" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -132) (undo-tree-id648 . -1) 133 (122 . 123) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -122) (undo-tree-id649 . -1) 123 (118 . 121) (116 . 118) (#(":" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -116) (undo-tree-id650 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -117) (undo-tree-id651 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -118) (undo-tree-id652 . -1) 119 (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -141) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 142 (140 . 142) (#(":" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -140) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -141) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -142) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -143) (undo-tree-id661 . -1) 144 (142 . 144) (63 . 67) (#("l" 0 1 (fontified t)) . -63) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#("i" 0 1 (fontified t)) . -64) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("s" 0 1 (fontified t)) . -65) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#("t" 0 1 (fontified t)) . -66) (undo-tree-id692 . -1) (undo-tree-id693 . 1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) 67) nil (26409 33644 248396 761000) 0 nil])
([nil nil ((134 . 135) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -134) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) 135 (134 . 135) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -134) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) 135 (134 . 135) (#("K" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -134) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 135) nil (26409 33644 248330 200000) 0 nil])
([nil nil ((#("#check List
" 0 1 (face lsp-face-semhl-keyword fontified t) 1 6 (face lsp-face-semhl-keyword fontified t) 6 11 (fontified t) 11 12 (fontified t)) . 56) (undo-tree-id495 . -9) (undo-tree-id496 . 1) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -11) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -6) (undo-tree-id508 . -6) (undo-tree-id509 . -6) (undo-tree-id510 . -6) (undo-tree-id511 . -7) (undo-tree-id512 . -7) (undo-tree-id513 . -7) (undo-tree-id514 . -9) (undo-tree-id515 . -11) (undo-tree-id516 . -10) (undo-tree-id517 . -11) (undo-tree-id518 . -11) (undo-tree-id519 . -11) (undo-tree-id520 . -11) (undo-tree-id521 . -11) (undo-tree-id522 . -11) (undo-tree-id523 . -11) (undo-tree-id524 . -11) (undo-tree-id525 . -10) (undo-tree-id526 . -10) (undo-tree-id527 . -10) (undo-tree-id528 . -10) (undo-tree-id529 . -10) (undo-tree-id530 . -10) (undo-tree-id531 . -10) (undo-tree-id532 . -10) (undo-tree-id533 . -10) (undo-tree-id534 . -12) 66) nil (26409 33644 248314 187000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 55) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1)) nil (26409 33644 248296 127000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -73) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("(" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -74) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("K" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -75) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -76) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#(":" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -77) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -78) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("N" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -79) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -80) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -81) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#(")" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -82) (undo-tree-id451 . 1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) 83) nil (26409 33644 248266 359000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -110) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -111) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 112) nil (26409 33644 247715 384000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -134) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("K" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -135) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("-" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -136) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -137) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 138) nil (26409 33644 247649 994000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -159) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("K" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -160) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 161) nil (26409 33644 247425 753000) 0 nil])
([nil nil ((97 . 98)) nil (26409 33644 247407 835000) 0 nil])
([nil nil ((99 . 100)) nil (26409 33644 247407 420000) 0 nil])
([nil nil ((140 . 141)) nil (26409 33644 247406 655000) 0 nil])
([nil nil ((142 . 143)) nil (26409 33644 247402 794000) 0 nil])
([nil nil ((176 . 177) (#("H" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -201) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -202) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -203) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -204) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -205) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -206) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -207) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -208) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) 209 (201 . 209) (215 . 216) (213 . 215) (212 . 213) (211 . 212) (205 . 211) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -205) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) 206 (199 . 206) (197 . 199) (196 . 197) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -184) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) 185 (196 . 197) (#("N" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -196) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -197) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -198) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) 199 (193 . 199) (186 . 193) (#("Histor" 0 6 (fontified nil)) . -186) (186 . 192) (#("History" 0 7 (fontified nil)) . -186) (186 . 193) (#("Histor" 0 6 (fontified t)) . -186) (undo-tree-id6639 . -6) (undo-tree-id6640 . -6) (undo-tree-id6641 . -5) (undo-tree-id6642 . -6) (undo-tree-id6643 . -6) (undo-tree-id6644 . -6) (undo-tree-id6645 . -6) (undo-tree-id6646 . -6) (undo-tree-id6647 . -6) (undo-tree-id6648 . -6) 192 (189 . 192) (186 . 189) (165 . 186) (165 . 168) (165 . 179) (164 . 165) (t 26409 33644 299242 227000)) nil (26409 35835 448081 508000) 0 nil])
([nil nil ((266 . 273) (194 . 197) (#(";" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -194) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -195) (undo-tree-id6451 . -1) 196 (193 . 196) (231 . 232) (240 . 244) (237 . 240) (231 . 237) (#("length" 0 6 (fontified nil)) . -231) (231 . 237) (#("length" 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -231) (undo-tree-id6452 . -6) (undo-tree-id6453 . -6) (undo-tree-id6454 . -6) (undo-tree-id6455 . -6) 237 (231 . 237) (#("H" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -231) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (#("A" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -232) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -233) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -234) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -235) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (#("h" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -236) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (#("A" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -237) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -238) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -239) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -240) (undo-tree-id6497 . -1) (#("(" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -241) (undo-tree-id6498 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -242) (undo-tree-id6499 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -243) (undo-tree-id6500 . -1) 244 (240 . 244) (236 . 240) (#("h" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -236) (undo-tree-id6501 . -1) 237 (231 . 237) (222 . 231) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -222) (undo-tree-id6502 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -223) (undo-tree-id6503 . -1) 224 (217 . 224)) nil (26409 35835 447987 988000) 0 nil])
([nil nil ((#("(α σ : Type)" 0 1 (fontified t match-data (5 8 5 6 6 7 7 8)) 1 2 (face lsp-face-semhl-variable fontified t match-data (5 8 5 6 6 7 7 8)) 2 3 (fontified t match-data (5 8 5 6 6 7 7 8)) 3 4 (face lsp-face-semhl-variable fontified t match-data (5 8 5 6 6 7 7 8)) 4 7 (fontified t match-data (5 8 5 6 6 7 7 8)) 7 8 (face font-lock-type-face fontified t match-data (5 8 5 6 6 7 7 8)) 8 11 (face font-lock-type-face fontified t match-data (5 8 5 6 6 7 7 8)) 11 12 (fontified t match-data (5 8 5 6 6 7 7 8))) . 40) (undo-tree-id6441 . -11) (undo-tree-id6442 . 11) (undo-tree-id6443 . -11) (undo-tree-id6444 . -11) (undo-tree-id6445 . -11) (undo-tree-id6446 . -11) (undo-tree-id6447 . -12) (undo-tree-id6448 . -12) 51) nil (26409 35835 447951 342000) 0 nil])
([nil nil ((61 . 62)) nil (26409 35835 447895 255000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72 . 73) (nil fontified nil 61 . 73) (61 . 73)) nil (26409 35835 447894 550000) 0 nil])
([nil nil ((61 . 62)) nil (26409 35835 447893 661000) 0 nil])
([nil nil ((#("variable  
" 0 8 (face lsp-face-semhl-keyword fontified t match-data (5 8 5 6 6 7 7 8)) 8 9 (fontified t match-data (5 8 5 6 6 7 7 8)) 9 10 (fontified t match-data (5 8 5 6 6 7 7 8)) 10 11 (fontified t)) . 31) (undo-tree-id6408 . 1) (undo-tree-id6409 . -9) (undo-tree-id6410 . 2) (undo-tree-id6411 . -9) (undo-tree-id6412 . -9) (undo-tree-id6413 . -10) (undo-tree-id6414 . -9) (undo-tree-id6415 . -9) (undo-tree-id6416 . -9) (undo-tree-id6417 . -9) (undo-tree-id6418 . -9) (undo-tree-id6419 . -9) (undo-tree-id6420 . -9) (undo-tree-id6421 . -9) (undo-tree-id6422 . -9) (undo-tree-id6423 . -9) (undo-tree-id6424 . -9) (undo-tree-id6425 . -9) (undo-tree-id6426 . -9) (undo-tree-id6427 . -11) (undo-tree-id6428 . -9) (undo-tree-id6429 . -11) (undo-tree-id6430 . -11) (undo-tree-id6431 . -11) (undo-tree-id6432 . -11) (undo-tree-id6433 . -11) (undo-tree-id6434 . -11) (undo-tree-id6435 . -9) (undo-tree-id6436 . -9) (undo-tree-id6437 . -9) (undo-tree-id6438 . -9) (undo-tree-id6439 . -9) (undo-tree-id6440 . -11) 40) nil (26409 35835 447891 810000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -290) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (#("r" 0 1 (fontified t)) . -291) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (#("y" 0 1 (fontified t)) . -292) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) 293 (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -164) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -165) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (#("y" 0 1 (face font-lock-function-name-face fontified t)) . -166) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) 167 (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -194) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -195) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -196) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) 197 (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -150) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -151) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (#("y" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -152) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) 153 (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -122) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -123) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (#("y" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -124) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) 125 (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -97) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -98) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (#("y" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -99) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) 100 (#("o" 0 1 (face font-lock-function-name-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -47) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -48) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (#("y" 0 1 (face font-lock-function-name-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -49) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) 50 (327 . 331) (#("H" 0 1 (fontified t)) . -327) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (#("i" 0 1 (fontified t)) . -328) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (#("s" 0 1 (fontified t)) . -329) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (#("o" 0 1 (fontified t)) . -330) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (#("t" 0 1 (fontified t)) . -331) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) 332 (327 . 332) (#("p" 0 1 (fontified t)) . -327) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) 328 (327 . 330) (#("P" 0 1 (fontified t)) . -327) (undo-tree-id6287 . -1) 328 (327 . 328) (#("p" 0 1 (fontified t)) . -327) (undo-tree-id6288 . -1) 328 (327 . 328) (#("H" 0 1 (fontified t)) . -327) (undo-tree-id6289 . -1) (#("i" 0 1 (fontified t)) . -328) (undo-tree-id6290 . -1) (#("s" 0 1 (fontified t)) . -329) (undo-tree-id6291 . -1) (#("o" 0 1 (fontified t)) . -330) (undo-tree-id6292 . -1) (#("t" 0 1 (fontified t)) . -331) (undo-tree-id6293 . -1) (#("y" 0 1 (fontified t)) . -332) (undo-tree-id6294 . -1) (#("r" 0 1 (fontified t)) . -333) (undo-tree-id6295 . -1) 334 (327 . 334) (317 . 327) (#("o" 0 1 (fontified t)) . -317) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (#("r" 0 1 (fontified t)) . -318) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (#("e" 0 1 (fontified t)) . -319) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (#("f" 0 1 (fontified t)) . -320) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (#("i" 0 1 (fontified t)) . -321) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) 322 (317 . 322) (#("(" 0 1 (fontified t)) . -317) (undo-tree-id6316 . -1) 318 (317 . 318) (307 . 317) (304 . 307) (#("h" 0 1 (fontified t)) . -304) (undo-tree-id6317 . -1) (#("i" 0 1 (fontified t)) . -305) (undo-tree-id6318 . -1) (#("s" 0 1 (fontified t)) . -306) (undo-tree-id6319 . -1) (#("t" 0 1 (fontified t)) . -307) (undo-tree-id6320 . -1) (#("o" 0 1 (fontified t)) . -308) (undo-tree-id6321 . -1) (#("y" 0 1 (fontified t)) . -309) (undo-tree-id6322 . -1) (#("r" 0 1 (fontified t)) . -310) (undo-tree-id6323 . -1) 311 (299 . 311) (#(":" 0 1 (fontified t)) . -299) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (#(" " 0 1 (fontified t)) . -300) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (#("H" 0 1 (fontified t)) . -301) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (#("i" 0 1 (fontified t)) . -302) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (#("s" 0 1 (fontified t)) . -303) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (#("t" 0 1 (fontified t)) . -304) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (#("o" 0 1 (fontified t)) . -305) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (#("r" 0 1 (fontified t)) . -306) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (#("y" 0 1 (fontified t)) . -307) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (#(" " 0 1 (fontified t)) . -308) (undo-tree-id6362 . -1) (#("a" 0 1 (fontified t)) . -309) (undo-tree-id6363 . -1) 310 (302 . 310) (#("s" 0 1 (fontified t)) . -302) (undo-tree-id6364 . -1) 303 (301 . 303) (#("H" 0 1 (fontified t)) . -301) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (#("i" 0 1 (fontified t)) . -302) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) 303 (#("s" 0 1 (fontified t)) . -303) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (#("o" 0 1 (fontified t)) . -304) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (#("t" 0 1 (fontified t)) . -305) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) 306 (285 . 306) (284 . 285) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -284) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) 285 (267 . 285) (266 . 267) (#("
" 0 1 (fontified t)) . -266) (undo-tree-id6389 . -1) (#("ₖ" 0 1 (fontified t)) . -267) (undo-tree-id6390 . -1) 268 (267 . 268) (266 . 269) (194 . 195) (#("t" 0 1 (fontified t)) . -194) (undo-tree-id6391 . -1) 195 (194 . 199) (#("t" 0 1 (fontified t)) . -194) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (#("y" 0 1 (fontified t)) . -195) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (#("p" 0 1 (fontified t)) . -196) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (#("e" 0 1 (fontified t)) . -197) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) 198 (186 . 198) (162 . 166) (131 . 135) (103 . 107)) nil (26409 35835 447850 473000) 0 nil])
([nil nil ((#("
#check History.length" 0 1 (fontified t) 1 7 (face lsp-face-semhl-keyword fontified t) 7 8 (fontified t) 8 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 315) (undo-tree-id6156 . -1) (undo-tree-id6157 . -21) (undo-tree-id6158 . -15) (undo-tree-id6159 . -22) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -22) 316) nil (26409 35835 447686 287000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 313) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1)) nil (26409 35835 447679 164000) 0 nil])
([nil nil ((253 . 267) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -253) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) 254 (#("e" 0 1 (face font-lock-comment-face fontified t)) . -254) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -255) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -256) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -257) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -258) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -259) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) 260 (253 . 260) (#("C" 0 1 (face font-lock-comment-face fontified t)) . -253) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -254) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -255) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -256) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -257) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -258) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -259) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) 260 (253 . 260) (252 . 253) (253 . 255) (252 . 253) (249 . 252) (248 . 249) (323 . 325) (322 . 323) (315 . 319) (#("D" 0 1 (fontified t)) . -315) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (#("e" 0 1 (fontified t)) . -316) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (#("c" 0 1 (fontified t)) . -317) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (#("i" 0 1 (fontified t)) . -318) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (#("d" 0 1 (fontified t)) . -319) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (#("a" 0 1 (fontified t)) . -320) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (#("b" 0 1 (fontified t)) . -321) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (#("l" 0 1 (fontified t)) . -322) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (#("e" 0 1 (fontified t)) . -323) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (#(" " 0 1 (fontified t)) . -324) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (#("p" 0 1 (fontified t)) . -325) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) 326 (#("x" 0 1 (face lsp-face-semhl-keyword fontified t)) . -300) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) 301 (#("f" 0 1 (face lsp-face-semhl-keyword fontified t)) . -300) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -301) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) 302 (310 . 314) (312 . 328)) nil (26409 35835 447656 339000) 0 nil])
([nil nil ((#("(h : Hist α σ)" 0 1 (fontified t) 1 2 (face lsp-face-semhl-variable fontified t) 2 10 (fontified t) 10 11 (face lsp-face-semhl-variable fontified t) 11 12 (fontified t) 12 13 (face lsp-face-semhl-variable fontified t) 13 14 (fontified t)) . 303) (undo-tree-id5488 . -13) (undo-tree-id5489 . -13) (undo-tree-id5490 . -13) (undo-tree-id5491 . -9) (undo-tree-id5492 . -9) (undo-tree-id5493 . -9) (undo-tree-id5494 . -9) (undo-tree-id5495 . -9) (undo-tree-id5496 . -9) (undo-tree-id5497 . -13) (undo-tree-id5498 . -13) (undo-tree-id5499 . -14) (undo-tree-id5500 . -14) 316) nil (26409 35835 447284 870000) 0 nil])
([nil nil ((nil rear-nonsticky nil 334 . 335) (nil fontified nil 321 . 335) (321 . 335)) nil (26409 35835 447275 430000) 0 nil])
([nil nil ((304 . 314) (303 . 306) (306 . 307) (#("(" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -318) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -319) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) 320 (317 . 320) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -312) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -313) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -314) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) 315 (315 . 320) (304 . 315) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -304) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -305) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (#("L" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -306) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) 307 (303 . 307) (#("
" 0 1 (fontified t)) . -283) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) 284 (#("
" 0 1 (fontified t)) . -414) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (#("#" 0 1 (face lsp-face-semhl-keyword fontified t)) . -415) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) 416 (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -416) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (#("h" 0 1 (face lsp-face-semhl-keyword fontified t)) . -417) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -418) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -419) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (#("k" 0 1 (face lsp-face-semhl-keyword fontified t)) . -420) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (#(" " 0 1 (fontified t)) . -421) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (#("L" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -422) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (#("e" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -423) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (#("a" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -424) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (#("n" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -425) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (#("." 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -426) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (#("P" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -427) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (#("r" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -428) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (#("e" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -429) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (#("f" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -430) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (#("i" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -431) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (#("x" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -432) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (#("T" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -433) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (#("r" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -434) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (#("e" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -435) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (#("e" 0 1 (fontified t match-data (11 15 11 12 12 13 13 14 14 15))) . -436) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) 437 (422 . 437) (#("Tree" 0 4 (fontified nil)) . -422) (422 . 426) (#("Lean.PrefixTree" 0 15 (fontified nil)) . -422) (422 . 437) (#("Tree" 0 4 (fontified t)) . -422) (undo-tree-id4882 . -4) (undo-tree-id4883 . -4) (undo-tree-id4884 . -4) (undo-tree-id4885 . -4) (undo-tree-id4886 . -4) (undo-tree-id4887 . -4) (undo-tree-id4888 . -4) (undo-tree-id4889 . -4) (undo-tree-id4890 . -4) (undo-tree-id4891 . -4) 426 (423 . 426) (419 . 423) (#("k" 0 1 (fontified t)) . -419) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (#("c" 0 1 (fontified t)) . -420) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) 421 (415 . 421) (303 . 304) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -303) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) 304 (#("(" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -304) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) 305 (302 . 305) (#("c" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (#(" " 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -303) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) 304 (303 . 304) (296 . 303) (#("h" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -296) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -297) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -298) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -299) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -300) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -301) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) 303 (296 . 303) (#("p" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -296) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -297) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -298) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -299) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -300) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -301) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) 302 (#(" " 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) 303 (301 . 303) (#("c" 0 1 (face font-lock-function-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -301) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) 303 (295 . 303) (286 . 295) (#("induct" 0 6 (fontified nil)) . -286) (286 . 292) (#("inductive" 0 9 (fontified nil)) . -286) (286 . 295) (#("induct" 0 6 (fontified t)) . -286) (undo-tree-id5176 . -6) (undo-tree-id5177 . -6) (undo-tree-id5178 . -5) (undo-tree-id5179 . -6) (undo-tree-id5180 . -6) (undo-tree-id5181 . -6) (undo-tree-id5182 . -6) (undo-tree-id5183 . -6) (undo-tree-id5184 . -6) (undo-tree-id5185 . -6) 292 (286 . 292) (284 . 287) (383 . 387) (381 . 383) (379 . 381) 377 (366 . 368) (#(")" 0 1 (fontified t rear-nonsticky t)) . -366) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (#(" " 0 1 (fontified t)) . -367) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (#(":" 0 1 (fontified t)) . -368) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) 369 (356 . 357) (#("(" 0 1 (fontified t)) . -356) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -357) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (#(" " 0 1 (fontified t)) . -358) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (#(":" 0 1 (fontified t)) . -359) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) 360 (#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -383) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t)) . -384) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (#(" " 0 1 (fontified t)) . -385) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t)) . -386) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t)) . -387) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t)) . -388) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (#("." 0 1 (fontified t)) . -389) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -390) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) 391 (#("e" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -391) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (#("n" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -392) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (#("g" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -393) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -394) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (#("h" 0 1 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -395) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -396) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -397) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -398) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -399) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -400) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -401) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (#("e" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -402) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (#("n" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -403) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (#("g" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -404) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -405) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (#("h" 0 1 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3))) . -406) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -407) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -408) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (#("h" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -409) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -410) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (#("n" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -411) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) 412 (#("s" 0 1 (fontified t)) . -283) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (#("e" 0 1 (fontified t)) . -284) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) 285 (278 . 283) (#("Fal" 0 3 (fontified nil)) . -278) (278 . 281) (#("False" 0 5 (fontified nil)) . -278) (278 . 283) (#("Fal" 0 3 (fontified t)) . -278) (undo-tree-id5412 . -3) (undo-tree-id5413 . -3) (undo-tree-id5414 . -2) (undo-tree-id5415 . -2) (undo-tree-id5416 . -2) (undo-tree-id5417 . -2) (undo-tree-id5418 . -2) (undo-tree-id5419 . -2) (undo-tree-id5420 . -2) (undo-tree-id5421 . -2) (undo-tree-id5422 . -2) (undo-tree-id5423 . -2) (undo-tree-id5424 . -3) (undo-tree-id5425 . -3) (undo-tree-id5426 . -3) (undo-tree-id5427 . -3) (undo-tree-id5428 . -3) (undo-tree-id5429 . -3) (undo-tree-id5430 . -3) (undo-tree-id5431 . -3) (undo-tree-id5432 . -3) (undo-tree-id5433 . -3) 281 (282 . 283) (#("e" 0 1 (fontified t)) . -282) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . 1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) 283 (282 . 283) (261 . 282) (260 . 262) (391 . 393) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -391) (undo-tree-id5441 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -392) (undo-tree-id5442 . -1) (#("H" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -393) (undo-tree-id5443 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -394) (undo-tree-id5444 . -1) 395 (393 . 395) (391 . 393) (389 . 391) (388 . 389) (383 . 388) (359 . 362) (374 . 380) (#("len" 0 3 (fontified nil)) . -374) (374 . 377) (#("length" 0 6 (fontified nil)) . -374) (374 . 380) (#("len" 0 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -374) (undo-tree-id5445 . -3) (undo-tree-id5446 . -3) 377 (372 . 377) (369 . 372) (363 . 369) (#("leng" 0 4 (fontified nil)) . -363) (363 . 367) (#("length" 0 6 (fontified nil)) . -363) (363 . 369) (#("leng" 0 4 (fontified t)) . -363) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) 367 (359 . 367) (#("l" 0 1 (fontified t)) . -359) (undo-tree-id5449 . -1) (#("e" 0 1 (fontified t)) . -360) (undo-tree-id5450 . -1) 361 (359 . 361) (357 . 359) (#("
" 0 1 (fontified t)) . -357) (undo-tree-id5451 . -1) 358 (357 . 358) (#(" " 0 1 (fontified t)) . -357) (undo-tree-id5452 . -1) (#(" " 0 1 (fontified t)) . -358) (undo-tree-id5453 . -1) 359 (349 . 353) (#("P" 0 1 (fontified t)) . -349) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (#("r" 0 1 (fontified t)) . -350) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (#("e" 0 1 (fontified t)) . -351) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (#("f" 0 1 (fontified t)) . -352) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (#("i" 0 1 (fontified t)) . -353) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (#("x" 0 1 (fontified t)) . -354) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) 355 (349 . 355) (#("B" 0 1 (fontified t)) . -349) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (#("o" 0 1 (fontified t)) . -350) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (#("o" 0 1 (fontified t)) . -351) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (#("l" 0 1 (fontified t)) . -352) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) 353 (#(" " 0 1 (fontified t)) . -315) (undo-tree-id5486 . 1) (undo-tree-id5487 . -1) 316 (249 . 259) (248 . 250) (335 . 336)) nil (26409 35835 447214 897000) 0 nil])
([nil nil ((170 . 176) (161 . 170) (#("struc" 0 5 (face font-lock-comment-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -161) (undo-tree-id3697 . -5) (undo-tree-id3698 . -3) (undo-tree-id3699 . -3) (undo-tree-id3700 . -3) (undo-tree-id3701 . -4) (undo-tree-id3702 . -4) (undo-tree-id3703 . -4) (undo-tree-id3704 . -5) (undo-tree-id3705 . -5) (undo-tree-id3706 . -5) (undo-tree-id3707 . -5) (undo-tree-id3708 . -5) (undo-tree-id3709 . -5) (undo-tree-id3710 . -5) (undo-tree-id3711 . -5) 166 (161 . 166) (160 . 161) (158 . 160) (157 . 158) (32 . 35)) nil (26409 35835 446143 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 201 . 202) (nil fontified nil 176 . 202) (176 . 202) 175) nil (26409 35835 446131 830000) 0 nil])
([nil nil ((203 . 205) (160 . 161) (159 . 160) (#("-" 0 1 (face font-lock-comment-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -159) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) 160) nil (26409 35835 446130 357000) 0 nil])
([nil nil ((244 . 246) (241 . 243) (236 . 241) (224 . 236) (222 . 224) (221 . 222) (213 . 221) (211 . 213) (210 . 211) (205 . 210) (204 . 205) (#(" " 0 1 (fontified t)) . -204) (undo-tree-id3692 . -1) 205) nil (26409 35835 446126 227000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -300) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) 301) nil (26409 35835 446123 128000) 0 nil])
([nil nil ((#("i" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -297) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -298) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -299) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -300) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -301) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -303) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -304) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (#("
" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -305) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -306) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -307) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (#("|" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -308) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -309) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -310) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (#("p" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -311) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (#("p" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -312) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -313) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (#("h" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -314) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -315) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -316) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -317) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) 318) nil (26409 35835 446109 148000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -288) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -289) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (#("
" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -290) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -291) (undo-tree-id3077 . 1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -292) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (#("|" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -293) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -294) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (#("i" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -295) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (#("n" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -296) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) 297) nil (26409 35835 445854 78000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -276) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#(" " 0 1 (fontified t)) . -277) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (#("H" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -278) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -279) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -280) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -281) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -282) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -283) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -284) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -285) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -286) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -287) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) 288) nil (26409 35835 445512 846000) 0 nil])
([nil nil ((276 . 281)) nil (26409 35835 442891 239000) 0 nil])
([nil nil ((#("L" 0 1 (face lsp-face-semhl-variable fontified t)) . -279) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (#(" " 0 1 (fontified t)) . -280) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) 281) nil (26409 35835 442889 656000) 0 nil])
([nil nil ((279 . 286)) nil (26409 35835 442870 544000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -284) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (#(" " 0 1 (fontified t)) . -285) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) 286) nil (26409 35835 442869 309000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -281) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (#("i" 0 1 (fontified t)) . -282) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (#("s" 0 1 (fontified t)) . -283) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) 284) nil (26409 35835 442857 668000) 0 nil])
([nil nil ((281 . 286)) nil (26409 35835 442826 398000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -286) (undo-tree-id1445 . 1) (undo-tree-id1446 . 1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -287) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -288) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -289) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -290) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) 291) nil (26409 35835 442824 433000) 0 nil])
([nil nil ((286 . 290)) nil (26409 35835 442806 873000) 0 nil])
([nil nil ((285 . 288)) nil (26409 35835 442806 305000) 0 nil])
([nil nil ((287 . 288)) nil (26409 35835 442805 703000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -302) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) 303) nil (26409 35835 442804 800000) 0 nil])
([nil nil ((302 . 308)) nil (26409 35835 442800 433000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -304) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -305) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -306) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -307) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 308) nil (26409 35835 442798 209000) 0 nil])
([nil nil ((304 . 308)) nil (26409 35835 442769 178000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -310) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -311) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -312) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) 313) nil (26409 35835 442767 381000) 0 nil])
([nil nil ((291 . 295)) nil (26409 35835 442754 625000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -298) (undo-tree-id1368 . 1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) 299) nil (26409 35835 442753 700000) 0 nil])
([nil nil ((305 . 306)) nil (26409 35835 442749 683000) 0 nil])
([nil nil ((298 . 303)) nil (26409 35835 442748 979000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -310) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) 311) nil (26409 35835 442747 570000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -316) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -317) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) 318) nil (26409 35835 442732 425000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -244) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (#("
" 0 1 (fontified t)) . -245) (undo-tree-id1302 . 1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) 246) nil (26409 35835 442486 290000) 0 nil])
([nil nil ((315 . 318) (t 26409 35835 488220 478000)) nil (26409 35854 957926 839000) 0 nil])
([nil nil ((591 . 595) (#("left" 0 4 (fontified nil)) . -591) (591 . 595) (589 . 591) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -589) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -590) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (#("n" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -591) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -592) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (#("<" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -593) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (#("x" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -594) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (#("," 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -595) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (#("y" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -596) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -597) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -598) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -599) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -600) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -601) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (#("x" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -602) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -603) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . 1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) 604 (567 . 568) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -567) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -568) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -569) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) 570 (581 . 583) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -581) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -582) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) 583 (579 . 580) (572 . 574) (570 . 572) (584 . 586) (583 . 584) (588 . 597) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -588) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) 589 (583 . 589) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -583) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -584) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (#("n" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -585) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -586) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) 587 (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -587) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) 588 (587 . 588) (582 . 587) (582 . 583) (#("
" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -582) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -583) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -584) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) 585 (583 . 585) (582 . 583) (576 . 582) (574 . 576) (568 . 574) (565 . 568) (560 . 565) (558 . 560) (552 . 558) (#("p" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -552) (undo-tree-id7862 . -1) 553 (545 . 553) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -545) (undo-tree-id7863 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -546) (undo-tree-id7864 . -1) (#("b" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -547) (undo-tree-id7865 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -548) (undo-tree-id7866 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -549) (undo-tree-id7867 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -550) (undo-tree-id7868 . -1) 551 (545 . 551) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -545) (undo-tree-id7869 . -1) 546 (536 . 546) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -536) (undo-tree-id7870 . -1) (#("x" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -537) (undo-tree-id7871 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -538) (undo-tree-id7872 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -539) (undo-tree-id7873 . -1) (#("p" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -540) (undo-tree-id7874 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -541) (undo-tree-id7875 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -542) (undo-tree-id7876 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -543) (undo-tree-id7877 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -544) (undo-tree-id7878 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -545) (undo-tree-id7879 . -1) 546 (545 . 546) (536 . 545) (535 . 536) (534 . 535) (514 . 516) (532 . 533) (527 . 532) (#("intro" 0 5 (fontified nil)) . -527) (527 . 532) (#("intro" 0 5 (fontified t match-data (0 3 0 1 1 2 2 3))) . -527) (undo-tree-id7880 . -5) (undo-tree-id7881 . -5) (undo-tree-id7882 . -5) (undo-tree-id7883 . -5) 532 (527 . 532) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -527) (undo-tree-id7884 . -1) 528 (522 . 528) (#("T" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -522) (undo-tree-id7885 . -1) 523 (522 . 523) (506 . 522) (505 . 506) (504 . 505) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -504) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -505) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -506) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -507) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (#("
" 0 1 (fontified t)) . -508) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) 509 (426 . 429) (#("|" 0 1 (fontified t)) . -500) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (#(" " 0 1 (fontified t)) . -501) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (#("i" 0 1 (fontified t)) . -502) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (#("n" 0 1 (fontified t)) . -503) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (#("i" 0 1 (fontified t)) . -504) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (#("t" 0 1 (fontified t)) . -505) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) 506 (t 26409 35855 1449 638000)) nil (26409 36623 640813 291000) 0 nil])
([nil nil ((585 . 586) (#("   " 0 1 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 1 3 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 585) (undo-tree-id6864 . -3) (undo-tree-id6865 . -3) (undo-tree-id6866 . -3) (undo-tree-id6867 . -3) (undo-tree-id6868 . -3) (undo-tree-id6869 . -3) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -3) (undo-tree-id6907 . -3) (undo-tree-id6908 . -3) (undo-tree-id6909 . -3) (undo-tree-id6910 . -3) (undo-tree-id6911 . -3) (undo-tree-id6912 . -3) (undo-tree-id6913 . -3) (undo-tree-id6914 . -3) (undo-tree-id6915 . -3) (undo-tree-id6916 . -3) (undo-tree-id6917 . -3) (undo-tree-id6918 . -3) (undo-tree-id6919 . -3) (undo-tree-id6920 . -3) (undo-tree-id6921 . -3) (undo-tree-id6922 . -3) (undo-tree-id6923 . -3) (undo-tree-id6924 . -3) (undo-tree-id6925 . -3) (undo-tree-id6926 . -3) (undo-tree-id6927 . -3) (undo-tree-id6928 . -3) (undo-tree-id6929 . -3) (undo-tree-id6930 . -3) (undo-tree-id6931 . -3) (undo-tree-id6932 . -3) (undo-tree-id6933 . -3) (undo-tree-id6934 . -3) (undo-tree-id6935 . -3) (undo-tree-id6936 . -3) (undo-tree-id6937 . -3) (undo-tree-id6938 . -3) (undo-tree-id6939 . -3) (undo-tree-id6940 . -3) (undo-tree-id6941 . -3) (undo-tree-id6942 . -3) (undo-tree-id6943 . -3) (undo-tree-id6944 . -3) (undo-tree-id6945 . -3) (undo-tree-id6946 . -3) (undo-tree-id6947 . -3) (undo-tree-id6948 . -3) (undo-tree-id6949 . -3) (undo-tree-id6950 . -3) (undo-tree-id6951 . -3) (undo-tree-id6952 . -3) (undo-tree-id6953 . -3) (undo-tree-id6954 . -3) (undo-tree-id6955 . -3) (undo-tree-id6956 . -3) (undo-tree-id6957 . -3) (undo-tree-id6958 . -3) (undo-tree-id6959 . -3) (undo-tree-id6960 . -3) (undo-tree-id6961 . -3) (undo-tree-id6962 . -3) (undo-tree-id6963 . -3) (undo-tree-id6964 . -3) (undo-tree-id6965 . -3) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -3) (undo-tree-id6970 . -3) (undo-tree-id6971 . -3) (undo-tree-id6972 . -3) (undo-tree-id6973 . -3) (undo-tree-id6974 . -3) (undo-tree-id6975 . -3) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -3) (undo-tree-id6980 . -3) (undo-tree-id6981 . -3) (undo-tree-id6982 . -1) (undo-tree-id6983 . -3) (undo-tree-id6984 . -3) (undo-tree-id6985 . -3) (undo-tree-id6986 . -1) (undo-tree-id6987 . -3) (undo-tree-id6988 . -3) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -3) (undo-tree-id7005 . -3) (undo-tree-id7006 . -3) (undo-tree-id7007 . -3) (undo-tree-id7008 . -3) (undo-tree-id7009 . -3) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (#("
" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -586) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) 563) nil (26409 36623 639869 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 592 . 593) (#("
" 0 1 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -625) (592 . 626) 583) nil (26409 36623 638251 49000) 0 nil])
([nil nil ((614 . 615) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 614) (undo-tree-id6863 . -1)) nil (26409 36623 643044 182000) 0 nil])
([nil nil ((626 . 627) 626) nil (26410 10610 98745 549000) 0 nil] [nil nil ((594 . 605) (593 . 594) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -593) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (#("x" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -594) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -595) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -596) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (#("p" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -597) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -598) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -599) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) 600 (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -628) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (#("x" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -629) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -630) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -631) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (#("p" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -632) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -633) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -634) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -635) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) 636 (628 . 636) (627 . 628) (621 . 626) (#("left" 0 4 (face lsp-face-semhl-property fontified t match-data (0 0))) . 621) (undo-tree-id6860 . -3) (undo-tree-id6861 . -4) (undo-tree-id6862 . -4)) ((621 . 625) (#("right" 0 5 (face lsp-face-semhl-property fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 621) (#("
" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 627) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (#("example " 0 1 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 1 2 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 2 3 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 3 4 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 4 5 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 5 6 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 6 7 (face lsp-face-semhl-keyword fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 7 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 628) (undo-tree-id8506 . -3) (undo-tree-id8507 . -3) (undo-tree-id8508 . -5) (undo-tree-id8509 . -6) (undo-tree-id8510 . -7) (undo-tree-id8511 . -7) (undo-tree-id8512 . -7) (undo-tree-id8513 . -7) (undo-tree-id8514 . -7) (undo-tree-id8515 . -7) (undo-tree-id8516 . -7) (undo-tree-id8517 . -7) (undo-tree-id8518 . -8) (undo-tree-id8519 . -8) (undo-tree-id8520 . -8) (undo-tree-id8521 . -8) (undo-tree-id8522 . -8) (undo-tree-id8523 . -8) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (628 . 636) (593 . 600) (#("
" 0 1 (fontified t)) . 593) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (#("theorem and" 0 7 (face lsp-face-semhl-keyword fontified t) 7 8 (fontified t) 8 11 (face font-lock-function-name-face fontified t)) . 594) (undo-tree-id8534 . -8) (undo-tree-id8535 . -11) (undo-tree-id8536 . -11)) (26409 36623 638233 40000) 0 nil])
([nil nil ((#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -621) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (#("e" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -622) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (#("f" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -623) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -624) (undo-tree-id10260 . -1) 625) nil (26410 10610 98744 379000) 0 nil])
nil
([nil nil ((621 . 626)) nil (26410 10610 98739 50000) 0 nil])
([nil nil ((626 . 628)) nil (26410 10610 98738 621000) 0 nil])
([nil nil ((628 . 633)) nil (26410 10610 98738 108000) 0 nil])
([nil nil ((628 . 635) (#("examp" 0 5 (fontified nil)) . -628) (628 . 633) (#("example" 0 7 (fontified nil)) . -628) (628 . 635) (#("examp" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -628) (undo-tree-id10247 . -5) (undo-tree-id10248 . -5) (undo-tree-id10249 . -5) (undo-tree-id10250 . -5) 633) nil (26410 10610 98736 791000) 0 nil])
([nil nil ((635 . 636)) nil (26410 10610 98733 594000) 0 nil])
([nil nil ((636 . 642)) nil (26410 10610 98733 156000) 0 nil])
([nil nil ((628 . 630)) nil (26410 10610 98732 570000) 0 nil])
([nil nil ((628 . 643)) nil (26410 10610 98731 880000) 0 nil])
([nil nil ((643 . 655)) nil (26410 10610 98731 174000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -654) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) 655) nil (26410 10610 98730 513000) 0 nil])
([nil nil ((654 . 655)) nil (26410 10610 98728 115000) 0 nil])
([nil nil ((671 . 675)) nil (26410 10610 98727 749000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -671) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -672) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -673) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -674) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) 675) nil (26410 10610 98726 625000) 0 nil])
([nil nil ((671 . 675)) nil (26410 10610 98718 734000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -674) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) 675) nil (26410 10610 98718 48000) 0 nil])
([nil nil ((674 . 688)) nil (26410 10610 98715 828000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -687) (undo-tree-id10222 . -1) 688) nil (26410 10610 98715 275000) 0 nil])
([nil nil ((687 . 703)) nil (26410 10610 98714 413000) 0 nil])
([nil nil ((703 . 704)) nil (26410 10610 98713 829000) 0 nil])
([nil nil ((704 . 705)) nil (26410 10610 98713 439000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -703) (undo-tree-id10220 . -1) (#("
" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -704) (undo-tree-id10221 . -1) 705) nil (26410 10610 98712 583000) 0 nil])
([nil nil ((647 . 652)) nil (26410 10610 98710 711000) 0 nil])
([nil nil ((#("c" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -702) (undo-tree-id10216 . -1) (#("o" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -703) (undo-tree-id10217 . -1) (#("n" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -704) (undo-tree-id10218 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -705) (undo-tree-id10219 . -1) 706) nil (26410 10610 98709 455000) 0 nil])
([nil nil ((702 . 703)) nil (26410 10610 98706 348000) 0 nil])
([nil nil ((703 . 706)) nil (26410 10610 98705 866000) 0 nil])
([nil nil ((707 . 710)) nil (26410 10610 98705 347000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -709) (undo-tree-id10215 . -1) 710) nil (26410 10610 98704 596000) 0 nil])
([nil nil ((709 . 710)) nil (26410 10610 98703 429000) 0 nil])
([nil nil ((711 . 712) 710) nil (26410 10610 98702 779000) 0 nil])
([nil nil ((710 . 718) (#("  " 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 710) (undo-tree-id10214 . -2) 712) nil (26410 10610 98701 971000) 0 nil])
([nil nil ((718 . 722)) nil (26410 10610 98700 902000) 0 nil])
([nil nil ((722 . 726)) nil (26410 10610 98700 410000) 0 nil])
([nil nil ((726 . 736)) nil (26410 10610 98699 996000) 0 nil])
([nil nil ((736 . 737)) nil (26410 10610 98699 483000) 0 nil])
([nil nil ((737 . 745)) nil (26410 10610 98698 977000) 0 nil])
([nil nil ((#("b" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -648) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -649) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (#("n" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -650) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (#("c" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -651) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -652) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) 653) nil (26410 10610 98697 793000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -684) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -685) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (#("2" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -686) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -687) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -688) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -689) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -690) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -691) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (#("o" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -692) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -693) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -694) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -695) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -696) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (#("b" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -697) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -698) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -699) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -700) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) 701) nil (26410 10610 98683 978000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -684) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) 685) nil (26410 10610 98563 98000) 0 nil])
([nil nil ((#("c" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -699) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (#("o" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -700) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (#("n" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -701) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -702) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) 703) nil (26410 10610 98560 195000) 0 nil])
([nil nil ((699 . 702)) nil (26410 10610 98545 467000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -688) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -689) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -690) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -691) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -692) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -693) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -694) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -695) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -696) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -697) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -698) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (#("p" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -699) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (#("r" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -700) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -701) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -702) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . 1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -703) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -704) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (#("b" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -705) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -706) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -707) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -708) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) 709) nil (26410 10610 98523 599000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -684) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -685) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (#("
" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -686) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -687) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) 688) nil (26410 10610 98048 967000) 0 nil])
([nil nil ((684 . 695)) nil (26410 10610 96160 772000) 0 nil])
([nil nil ((695 . 699)) nil (26410 10610 96160 188000) 0 nil])
([nil nil ((688 . 689)) nil (26410 10610 96159 594000) 0 nil])
([nil nil ((700 . 701)) nil (26410 10610 96158 246000) 0 nil])
([nil nil ((704 . 710)) nil (26410 10610 96154 298000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 505) (undo-tree-id3262 . -1) (t 26410 10610 103185 105000)) nil (26410 52971 259582 566000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 504) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1)) nil (26410 52971 259580 933000) 0 nil])
([nil nil ((#("example (h1 : cons → prop) : ¬ (prop → cons) := sorry
" 0 7 (face lsp-face-semhl-keyword fontified t) 7 9 (fontified t) 9 11 (face lsp-face-semhl-variable fontified t) 11 14 (fontified t) 14 18 (face lsp-face-semhl-variable fontified t) 18 19 (fontified t) 19 20 (face font-lock-constant-face fontified t) 20 21 (fontified t) 21 25 (face lsp-face-semhl-variable fontified t) 25 29 (fontified t) 29 30 (face font-lock-constant-face fontified t) 30 32 (fontified t) 32 36 (face lsp-face-semhl-variable fontified t) 36 37 (fontified t) 37 38 (face font-lock-constant-face fontified t) 38 39 (fontified t) 39 43 (face lsp-face-semhl-variable fontified t) 43 45 (fontified t) 45 47 (face font-lock-constant-face fontified t) 47 48 (fontified t) 48 53 (face font-lock-warning-face fontified t) 53 54 (fontified t)) . 655) (undo-tree-id3234 . -1) (undo-tree-id3235 . -53) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -54) 656) nil (26410 52971 259574 260000) 0 nil])
([nil nil ((#("example : True := True.intro

variable (a b : Prop) 
" 0 7 (face lsp-face-semhl-keyword fontified t) 7 15 (fontified t) 15 17 (face font-lock-constant-face fontified t) 17 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 38 (face lsp-face-semhl-keyword fontified t) 38 40 (fontified t) 40 41 (face lsp-face-semhl-variable fontified t) 41 42 (fontified t) 42 43 (face lsp-face-semhl-variable fontified t) 43 46 (fontified t) 46 50 (face font-lock-type-face fontified t) 50 53 (fontified t)) . 504) (undo-tree-id3216 . -31) (undo-tree-id3217 . -1) (undo-tree-id3218 . -52) (undo-tree-id3219 . -28) (undo-tree-id3220 . -28) (undo-tree-id3221 . -29) (undo-tree-id3222 . -29) (undo-tree-id3223 . -29) (undo-tree-id3224 . -29) (undo-tree-id3225 . -29) (undo-tree-id3226 . -29) (undo-tree-id3227 . -29) (undo-tree-id3228 . -31) (undo-tree-id3229 . -1) (undo-tree-id3230 . -31) (undo-tree-id3231 . -31) (undo-tree-id3232 . -1) (undo-tree-id3233 . -53) 505) nil (26410 52971 259563 448000) 0 nil])
([nil nil ((#("
example (h: a ∧ b) : a := h.left
example (h: a ∧ b) : b := h.right

variable (cons prop : Prop)

" 0 1 (fontified t) 1 8 (face lsp-face-semhl-keyword fontified t) 8 10 (fontified t) 10 11 (face lsp-face-semhl-variable fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (face font-lock-constant-face fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 26 (face font-lock-constant-face fontified t) 26 27 (fontified t) 27 28 (face lsp-face-semhl-variable fontified t) 28 29 (fontified t) 29 33 (face lsp-face-semhl-property fontified t) 33 34 (fontified t) 34 41 (face lsp-face-semhl-keyword fontified t) 41 43 (fontified t) 43 44 (face lsp-face-semhl-variable fontified t) 44 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 59 (face font-lock-constant-face fontified t) 59 60 (fontified t) 60 61 (face lsp-face-semhl-variable fontified t) 61 62 (fontified t) 62 67 (face lsp-face-semhl-property fontified t) 67 69 (fontified t) 69 77 (face lsp-face-semhl-keyword fontified t) 77 79 (fontified t) 79 83 (face lsp-face-semhl-variable fontified t) 83 84 (fontified t) 84 88 (face lsp-face-semhl-variable fontified t) 88 91 (fontified t) 91 95 (face font-lock-type-face fontified t) 95 98 (fontified t)) . 504) (undo-tree-id3194 . -97) (undo-tree-id3195 . -97) (undo-tree-id3196 . -97) (undo-tree-id3197 . -98) (undo-tree-id3198 . -98) (undo-tree-id3199 . -98) (undo-tree-id3200 . -98) (undo-tree-id3201 . -98) (undo-tree-id3202 . -98) (undo-tree-id3203 . -98) (undo-tree-id3204 . -98) (undo-tree-id3205 . -98) (undo-tree-id3206 . -98) (undo-tree-id3207 . -98) (undo-tree-id3208 . -98) (undo-tree-id3209 . -98) (undo-tree-id3210 . -98) (undo-tree-id3211 . -97) (undo-tree-id3212 . -1) (undo-tree-id3213 . -97) (undo-tree-id3214 . -97) (undo-tree-id3215 . -98) 601) nil (26410 52971 259551 891000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id3193 . -1)) nil (26410 52971 259538 525000) 0 nil])
([nil nil ((#("


#check Set

#check Decidable False
" 0 3 (fontified t) 3 9 (face lsp-face-semhl-keyword fontified t) 9 15 (fontified t) 15 21 (face lsp-face-semhl-keyword fontified t) 21 38 (fontified t)) . 316) (undo-tree-id3186 . -15) (undo-tree-id3187 . -15) (undo-tree-id3188 . -37) (undo-tree-id3189 . -15) (undo-tree-id3190 . -15) (undo-tree-id3191 . -15) (undo-tree-id3192 . -38) 331) nil (26410 52971 259536 995000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 315) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1)) nil (26410 52971 259532 180000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -501) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (#("Π" 0 1 (fontified t)) . -502) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (#("l" 0 1 (fontified t)) . -503) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (#("u" 0 1 (fontified t)) . -504) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (#("s" 0 1 (fontified t)) . -505) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) 506 (502 . 506) (57 . 58) (#(" " 0 1 (fontified t)) . -57) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#(" " 0 1 (fontified t)) . -58) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (#(" " 0 1 (fontified t)) . -59) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (#(" " 0 1 (fontified t)) . -60) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (#(" " 0 1 (fontified t)) . -61) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) 62 (57 . 62) (54 . 57) (#("U" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -54) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -55) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -56) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (#("o" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -57) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) 58 (54 . 58) (#("Upto" 0 4 (fontified t)) . -54) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -2) (undo-tree-id3100 . -2) (undo-tree-id3101 . -2) (undo-tree-id3102 . -2) (undo-tree-id3103 . -2) (undo-tree-id3104 . -2) (undo-tree-id3105 . -2) (undo-tree-id3106 . -2) (undo-tree-id3107 . -2) (undo-tree-id3108 . -2) (undo-tree-id3109 . -2) (undo-tree-id3110 . -2) (undo-tree-id3111 . -2) (undo-tree-id3112 . -2) (undo-tree-id3113 . -2) (undo-tree-id3114 . -2) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) (undo-tree-id3119 . -3) (undo-tree-id3120 . -3) (undo-tree-id3121 . -3) (undo-tree-id3122 . -3) (undo-tree-id3123 . -3) (undo-tree-id3124 . -3) (undo-tree-id3125 . -3) (undo-tree-id3126 . -3) (undo-tree-id3127 . -3) (undo-tree-id3128 . -3) (undo-tree-id3129 . -3) (undo-tree-id3130 . -3) (undo-tree-id3131 . -3) (undo-tree-id3132 . -3) (undo-tree-id3133 . -3) (undo-tree-id3134 . -3) (undo-tree-id3135 . -3) (undo-tree-id3136 . -3) (undo-tree-id3137 . -3) (undo-tree-id3138 . -3) (undo-tree-id3139 . -3) (undo-tree-id3140 . -3) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (undo-tree-id3143 . -4) (undo-tree-id3144 . -4) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) 58 (57 . 58) (#("p" 0 1 (fontified t)) . -57) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) 58 (52 . 58) (51 . 52) (30 . 51)) nil (26410 52971 259512 852000) 0 nil])
([nil nil ((#("import Mathlib.Data.Nat.find
" 0 6 (face font-lock-keyword-face fontified t) 6 28 (fontified t) 28 29 (fontified t)) . 30) (undo-tree-id2452 . -24) (undo-tree-id2453 . -28) (undo-tree-id2454 . -29) (undo-tree-id2455 . -29) (undo-tree-id2456 . -29) (undo-tree-id2457 . -29) (undo-tree-id2458 . -29) (undo-tree-id2459 . -29) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -3) (undo-tree-id2465 . -3) (undo-tree-id2466 . -4) (undo-tree-id2467 . -4) (undo-tree-id2468 . -5) (undo-tree-id2469 . -5) (undo-tree-id2470 . -6) (undo-tree-id2471 . -6) (undo-tree-id2472 . -7) (undo-tree-id2473 . -7) (undo-tree-id2474 . -7) (undo-tree-id2475 . -7) (undo-tree-id2476 . -7) (undo-tree-id2477 . -29) (undo-tree-id2478 . -7) (undo-tree-id2479 . -7) (undo-tree-id2480 . -7) (undo-tree-id2481 . -8) (undo-tree-id2482 . -8) (undo-tree-id2483 . -9) (undo-tree-id2484 . -9) (undo-tree-id2485 . -10) (undo-tree-id2486 . -10) (undo-tree-id2487 . -10) (undo-tree-id2488 . -10) (undo-tree-id2489 . -11) (undo-tree-id2490 . -11) (undo-tree-id2491 . -11) (undo-tree-id2492 . -11) (undo-tree-id2493 . -12) (undo-tree-id2494 . -12) (undo-tree-id2495 . -13) (undo-tree-id2496 . -13) (undo-tree-id2497 . -13) (undo-tree-id2498 . -13) (undo-tree-id2499 . -13) (undo-tree-id2500 . -29) (undo-tree-id2501 . -13) (undo-tree-id2502 . -14) (undo-tree-id2503 . -14) (undo-tree-id2504 . -14) (undo-tree-id2505 . -14) (undo-tree-id2506 . -15) (undo-tree-id2507 . -15) (undo-tree-id2508 . -15) (undo-tree-id2509 . -29) (undo-tree-id2510 . -15) (undo-tree-id2511 . -16) (undo-tree-id2512 . -16) (undo-tree-id2513 . -17) (undo-tree-id2514 . -17) (undo-tree-id2515 . -18) (undo-tree-id2516 . -18) (undo-tree-id2517 . -18) (undo-tree-id2518 . -18) (undo-tree-id2519 . -19) (undo-tree-id2520 . -19) (undo-tree-id2521 . -19) (undo-tree-id2522 . -29) (undo-tree-id2523 . -19) (undo-tree-id2524 . -20) (undo-tree-id2525 . -20) (undo-tree-id2526 . -24) (undo-tree-id2527 . -24) (undo-tree-id2528 . -24) (undo-tree-id2529 . -20) (undo-tree-id2530 . -20) (undo-tree-id2531 . -20) (undo-tree-id2532 . -20) (undo-tree-id2533 . -20) (undo-tree-id2534 . -20) (undo-tree-id2535 . -21) (undo-tree-id2536 . -21) (undo-tree-id2537 . -21) (undo-tree-id2538 . -21) (undo-tree-id2539 . -21) (undo-tree-id2540 . -29) (undo-tree-id2541 . -21) (undo-tree-id2542 . -21) (undo-tree-id2543 . -21) (undo-tree-id2544 . -21) (undo-tree-id2545 . -21) (undo-tree-id2546 . -21) (undo-tree-id2547 . -21) (undo-tree-id2548 . -21) (undo-tree-id2549 . -21) (undo-tree-id2550 . -22) (undo-tree-id2551 . -22) (undo-tree-id2552 . -22) (undo-tree-id2553 . -22) (undo-tree-id2554 . -22) (undo-tree-id2555 . -29) (undo-tree-id2556 . -22) (undo-tree-id2557 . -22) (undo-tree-id2558 . -22) (undo-tree-id2559 . -23) (undo-tree-id2560 . -23) (undo-tree-id2561 . -23) (undo-tree-id2562 . -23) (undo-tree-id2563 . -23) (undo-tree-id2564 . -23) (undo-tree-id2565 . -24) (undo-tree-id2566 . -24) (undo-tree-id2567 . -29) (undo-tree-id2568 . -24) (undo-tree-id2569 . -24) (undo-tree-id2570 . -24) (undo-tree-id2571 . -24) (undo-tree-id2572 . -24) (undo-tree-id2573 . -24) (undo-tree-id2574 . -24) (undo-tree-id2575 . -29) (undo-tree-id2576 . -24) (undo-tree-id2577 . -24) (undo-tree-id2578 . -24) (undo-tree-id2579 . -24) (undo-tree-id2580 . -24) (undo-tree-id2581 . -24) (undo-tree-id2582 . -29) (undo-tree-id2583 . -24) (undo-tree-id2584 . -24) (undo-tree-id2585 . -24) (undo-tree-id2586 . -24) (undo-tree-id2587 . -24) (undo-tree-id2588 . -24) (undo-tree-id2589 . -24) (undo-tree-id2590 . -24) (undo-tree-id2591 . -24) (undo-tree-id2592 . -24) (undo-tree-id2593 . -24) (undo-tree-id2594 . -24) (undo-tree-id2595 . -24) (undo-tree-id2596 . -24) (undo-tree-id2597 . -24) (undo-tree-id2598 . -24) (undo-tree-id2599 . -24) (undo-tree-id2600 . -24) (undo-tree-id2601 . -24) (undo-tree-id2602 . -24) (undo-tree-id2603 . -24) (undo-tree-id2604 . -24) (undo-tree-id2605 . -29) (undo-tree-id2606 . -24) (undo-tree-id2607 . -24) (undo-tree-id2608 . -24) (undo-tree-id2609 . -24) (undo-tree-id2610 . -24) (undo-tree-id2611 . -24) (undo-tree-id2612 . -24) (undo-tree-id2613 . -24) (undo-tree-id2614 . -24) (undo-tree-id2615 . -24) (undo-tree-id2616 . -24) (undo-tree-id2617 . -24) (undo-tree-id2618 . -24) (undo-tree-id2619 . -24) (undo-tree-id2620 . -24) (undo-tree-id2621 . -24) (undo-tree-id2622 . -29) (undo-tree-id2623 . -24) (undo-tree-id2624 . -24) (undo-tree-id2625 . -24) (undo-tree-id2626 . -24) (undo-tree-id2627 . -24) (undo-tree-id2628 . -24) (undo-tree-id2629 . -24) (undo-tree-id2630 . -24) (undo-tree-id2631 . -24) (undo-tree-id2632 . -24) (undo-tree-id2633 . -29) (undo-tree-id2634 . -24) (undo-tree-id2635 . -24) (undo-tree-id2636 . -24) (undo-tree-id2637 . -24) (undo-tree-id2638 . -24) (undo-tree-id2639 . -24) (undo-tree-id2640 . -24) (undo-tree-id2641 . -24) (undo-tree-id2642 . -29) (undo-tree-id2643 . -24) (undo-tree-id2644 . -24) (undo-tree-id2645 . -24) (undo-tree-id2646 . -24) (undo-tree-id2647 . -24) (undo-tree-id2648 . -24) (undo-tree-id2649 . -24) (undo-tree-id2650 . -24) (undo-tree-id2651 . -24) (undo-tree-id2652 . -24) (undo-tree-id2653 . -24) (undo-tree-id2654 . -24) (undo-tree-id2655 . -24) (undo-tree-id2656 . -24) (undo-tree-id2657 . -24) (undo-tree-id2658 . -24) (undo-tree-id2659 . -24) (undo-tree-id2660 . -24) (undo-tree-id2661 . -24) (undo-tree-id2662 . -24) (undo-tree-id2663 . -24) (undo-tree-id2664 . -24) (undo-tree-id2665 . -24) (undo-tree-id2666 . -29) (undo-tree-id2667 . -24) (undo-tree-id2668 . -22) (undo-tree-id2669 . -24) (undo-tree-id2670 . -24) (undo-tree-id2671 . -24) (undo-tree-id2672 . -24) (undo-tree-id2673 . -24) (undo-tree-id2674 . -24) (undo-tree-id2675 . -24) (undo-tree-id2676 . -24) (undo-tree-id2677 . -24) (undo-tree-id2678 . -24) (undo-tree-id2679 . -24) (undo-tree-id2680 . -24) (undo-tree-id2681 . -24) (undo-tree-id2682 . -24) (undo-tree-id2683 . -24) (undo-tree-id2684 . -24) (undo-tree-id2685 . -24) (undo-tree-id2686 . -24) (undo-tree-id2687 . -24) (undo-tree-id2688 . -24) (undo-tree-id2689 . -24) (undo-tree-id2690 . -29) (undo-tree-id2691 . -24) (undo-tree-id2692 . -24) (undo-tree-id2693 . -24) (undo-tree-id2694 . -25) (undo-tree-id2695 . -25) (undo-tree-id2696 . -26) (undo-tree-id2697 . -26) (undo-tree-id2698 . -27) (undo-tree-id2699 . -27) (undo-tree-id2700 . -27) (undo-tree-id2701 . -27) (undo-tree-id2702 . -27) (undo-tree-id2703 . -27) (undo-tree-id2704 . -27) (undo-tree-id2705 . -27) (undo-tree-id2706 . -27) (undo-tree-id2707 . -29) (undo-tree-id2708 . -27) (undo-tree-id2709 . -27) (undo-tree-id2710 . -27) (undo-tree-id2711 . -27) (undo-tree-id2712 . -27) (undo-tree-id2713 . -27) (undo-tree-id2714 . -27) (undo-tree-id2715 . -27) (undo-tree-id2716 . -27) (undo-tree-id2717 . -27) (undo-tree-id2718 . -27) (undo-tree-id2719 . -27) (undo-tree-id2720 . -27) (undo-tree-id2721 . -27) (undo-tree-id2722 . -27) (undo-tree-id2723 . -28) (undo-tree-id2724 . -28) (undo-tree-id2725 . 1) (undo-tree-id2726 . -28) (undo-tree-id2727 . -28) (undo-tree-id2728 . -28) (undo-tree-id2729 . -29) (undo-tree-id2730 . -28) (undo-tree-id2731 . -28) (undo-tree-id2732 . -28) (undo-tree-id2733 . -28) (undo-tree-id2734 . -28) (undo-tree-id2735 . -28) (undo-tree-id2736 . -28) (undo-tree-id2737 . -28) (undo-tree-id2738 . -28) (undo-tree-id2739 . -28) (undo-tree-id2740 . -28) (undo-tree-id2741 . -28) (undo-tree-id2742 . -28) (undo-tree-id2743 . -28) (undo-tree-id2744 . -28) (undo-tree-id2745 . -29) (undo-tree-id2746 . -29) (undo-tree-id2747 . -29) (undo-tree-id2748 . -29) (undo-tree-id2749 . -29) (undo-tree-id2750 . -29) (undo-tree-id2751 . -25) (undo-tree-id2752 . -25) (undo-tree-id2753 . -25) (undo-tree-id2754 . -25) (undo-tree-id2755 . -25) (undo-tree-id2756 . -25) (undo-tree-id2757 . -25) (undo-tree-id2758 . -21) (undo-tree-id2759 . -23) (undo-tree-id2760 . -23) (undo-tree-id2761 . -23) (undo-tree-id2762 . -23) (undo-tree-id2763 . -23) (undo-tree-id2764 . 6) (undo-tree-id2765 . -22) (undo-tree-id2766 . -22) (undo-tree-id2767 . -22) (undo-tree-id2768 . -22) (undo-tree-id2769 . -22) (undo-tree-id2770 . -22) (undo-tree-id2771 . -22) (undo-tree-id2772 . -29) 52) nil (26410 52971 259293 611000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -528) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#(" " 0 1 (fontified t)) . -529) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("r" 0 1 (fontified t)) . -530) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#("f" 0 1 (fontified t)) . -531) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (#("l" 0 1 (fontified t)) . -532) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#(" " 0 1 (fontified t)) . -533) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) 534 (523 . 524) (511 . 512) (531 . 532) (528 . 531) (526 . 528) (489 . 490) (506 . 507) (#("*" 0 1 (face lsp-face-semhl-keyword fontified t)) . -485) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) 486 (524 . 525) (520 . 524) (518 . 520) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -518) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (#(" " 0 1 (fontified t)) . -519) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) 520 (514 . 520) (511 . 512) (#("a" 0 1 (fontified t)) . -511) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) 512 (507 . 514) (506 . 507) (500 . 501) (496 . 497) (490 . 491) (500 . 501) (#("▸" 0 1 (face font-lock-constant-face fontified t)) . -500) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) 501 (497 . 503) (494 . 495) (#("β" 0 1 (face lsp-face-semhl-variable fontified t)) . -494) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) 495 (490 . 496) (473 . 486) (472 . 475) (472 . 474) (464 . 473) (#(" " 0 1 (fontified t)) . -464) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#(" " 0 1 (fontified t)) . -465) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (#(" " 0 1 (fontified t)) . -466) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#(" " 0 1 (fontified t)) . -467) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (#(" " 0 1 (fontified t)) . -468) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (#(" " 0 1 (fontified t)) . -469) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (#(" " 0 1 (fontified t)) . -470) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (#(" " 0 1 (fontified t)) . -471) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) 472) nil (26410 52971 259044 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 660 . 661) (nil fontified nil 528 . 661) (528 . 661)) nil (26410 52971 258348 392000) 0 nil])
([nil nil ((#("example {α β γ : Type} : ((α → γ) × (β → γ)) = ((α ⊕ β) → γ) :=
" 0 7 (face lsp-face-semhl-keyword fontified t) 7 9 (fontified t) 9 10 (face lsp-face-semhl-variable fontified t) 10 11 (fontified t) 11 12 (face lsp-face-semhl-variable fontified t) 12 13 (fontified t) 13 14 (face lsp-face-semhl-variable fontified t) 14 17 (fontified t) 17 21 (face font-lock-type-face fontified t) 21 27 (fontified t) 27 28 (face lsp-face-semhl-variable fontified t) 28 29 (fontified t) 29 30 (face font-lock-constant-face fontified t) 30 31 (fontified t) 31 32 (face lsp-face-semhl-variable fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (face font-lock-constant-face fontified t) 35 37 (fontified t) 37 38 (face lsp-face-semhl-variable fontified t) 38 39 (fontified t) 39 40 (face font-lock-constant-face fontified t) 40 41 (fontified t) 41 42 (face lsp-face-semhl-variable fontified t) 42 45 (fontified t) 45 46 (face font-lock-constant-face fontified t) 46 49 (fontified t) 49 50 (face lsp-face-semhl-variable fontified t) 50 53 (fontified t) 53 54 (face lsp-face-semhl-variable fontified t) 54 56 (fontified t) 56 57 (face font-lock-constant-face fontified t) 57 58 (fontified t) 58 59 (face lsp-face-semhl-variable fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 63 (face font-lock-constant-face fontified t) 63 64 (fontified t)) . 464) (undo-tree-id483 . -64) (undo-tree-id484 . -63) (undo-tree-id485 . -64) (undo-tree-id486 . -64) (undo-tree-id487 . -51) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -11) (undo-tree-id507 . -11) (undo-tree-id508 . -11) (undo-tree-id509 . -11) (undo-tree-id510 . -11) (undo-tree-id511 . -11) (undo-tree-id512 . -11) (undo-tree-id513 . -11) (undo-tree-id514 . -11) (undo-tree-id515 . -11) (undo-tree-id516 . -11) (undo-tree-id517 . -11) (undo-tree-id518 . -11) (undo-tree-id519 . -11) (undo-tree-id520 . -11) (undo-tree-id521 . -11) (undo-tree-id522 . -11) (undo-tree-id523 . -11) (undo-tree-id524 . -13) (undo-tree-id525 . -13) (undo-tree-id526 . -13) (undo-tree-id527 . -13) (undo-tree-id528 . -13) (undo-tree-id529 . -13) (undo-tree-id530 . -13) (undo-tree-id531 . -13) (undo-tree-id532 . -13) (undo-tree-id533 . -13) (undo-tree-id534 . -15) (undo-tree-id535 . -15) (undo-tree-id536 . -15) (undo-tree-id537 . -15) (undo-tree-id538 . -15) (undo-tree-id539 . -15) (undo-tree-id540 . -15) (undo-tree-id541 . -15) (undo-tree-id542 . -16) (undo-tree-id543 . -16) (undo-tree-id544 . -17) (undo-tree-id545 . -17) (undo-tree-id546 . -18) (undo-tree-id547 . -18) (undo-tree-id548 . -19) (undo-tree-id549 . -19) (undo-tree-id550 . -20) (undo-tree-id551 . -20) (undo-tree-id552 . -21) (undo-tree-id553 . -21) (undo-tree-id554 . -21) (undo-tree-id555 . -21) (undo-tree-id556 . -21) (undo-tree-id557 . -21) (undo-tree-id558 . -21) (undo-tree-id559 . -21) (undo-tree-id560 . -21) (undo-tree-id561 . -21) (undo-tree-id562 . -21) (undo-tree-id563 . -21) (undo-tree-id564 . -21) (undo-tree-id565 . -21) (undo-tree-id566 . -21) (undo-tree-id567 . -21) (undo-tree-id568 . -21) (undo-tree-id569 . -21) (undo-tree-id570 . -21) (undo-tree-id571 . -35) (undo-tree-id572 . -35) (undo-tree-id573 . -35) (undo-tree-id574 . -35) (undo-tree-id575 . -25) (undo-tree-id576 . -25) (undo-tree-id577 . -25) (undo-tree-id578 . -25) (undo-tree-id579 . -25) (undo-tree-id580 . -25) (undo-tree-id581 . -25) (undo-tree-id582 . -25) (undo-tree-id583 . -25) (undo-tree-id584 . -25) (undo-tree-id585 . -29) (undo-tree-id586 . -29) (undo-tree-id587 . -29) (undo-tree-id588 . -29) (undo-tree-id589 . -29) (undo-tree-id590 . -29) (undo-tree-id591 . -29) (undo-tree-id592 . -29) (undo-tree-id593 . -29) (undo-tree-id594 . -29) (undo-tree-id595 . -29) (undo-tree-id596 . -29) (undo-tree-id597 . -29) (undo-tree-id598 . -29) (undo-tree-id599 . -29) (undo-tree-id600 . -31) (undo-tree-id601 . -31) (undo-tree-id602 . -31) (undo-tree-id603 . -31) (undo-tree-id604 . -31) (undo-tree-id605 . -31) (undo-tree-id606 . -31) (undo-tree-id607 . -31) (undo-tree-id608 . -31) (undo-tree-id609 . -31) (undo-tree-id610 . -34) (undo-tree-id611 . -34) (undo-tree-id612 . -34) (undo-tree-id613 . -34) (undo-tree-id614 . -34) (undo-tree-id615 . -34) (undo-tree-id616 . -34) (undo-tree-id617 . -34) (undo-tree-id618 . -34) (undo-tree-id619 . -34) (undo-tree-id620 . -34) (undo-tree-id621 . -34) (undo-tree-id622 . -35) (undo-tree-id623 . -35) (undo-tree-id624 . -35) (undo-tree-id625 . -35) (undo-tree-id626 . -35) (undo-tree-id627 . -35) (undo-tree-id628 . -35) (undo-tree-id629 . -35) (undo-tree-id630 . -31) (undo-tree-id631 . -31) (undo-tree-id632 . -31) (undo-tree-id633 . -31) (undo-tree-id634 . -31) (undo-tree-id635 . -31) (undo-tree-id636 . -31) (undo-tree-id637 . -31) (undo-tree-id638 . -31) (undo-tree-id639 . -31) (undo-tree-id640 . -31) (undo-tree-id641 . -34) (undo-tree-id642 . -31) (undo-tree-id643 . -31) (undo-tree-id644 . -31) (undo-tree-id645 . -34) (undo-tree-id646 . -34) (undo-tree-id647 . -35) (undo-tree-id648 . -35) (undo-tree-id649 . -35) (undo-tree-id650 . -35) (undo-tree-id651 . -35) (undo-tree-id652 . -35) (undo-tree-id653 . -36) (undo-tree-id654 . -36) (undo-tree-id655 . -36) (undo-tree-id656 . -36) (undo-tree-id657 . -36) (undo-tree-id658 . -36) (undo-tree-id659 . -36) (undo-tree-id660 . -36) (undo-tree-id661 . -36) (undo-tree-id662 . -36) (undo-tree-id663 . -36) (undo-tree-id664 . -36) (undo-tree-id665 . -36) (undo-tree-id666 . -36) (undo-tree-id667 . -39) (undo-tree-id668 . -39) (undo-tree-id669 . -39) (undo-tree-id670 . -39) (undo-tree-id671 . -39) (undo-tree-id672 . -39) (undo-tree-id673 . -39) (undo-tree-id674 . -39) (undo-tree-id675 . -39) (undo-tree-id676 . -39) (undo-tree-id677 . -39) (undo-tree-id678 . -39) (undo-tree-id679 . -39) (undo-tree-id680 . -39) (undo-tree-id681 . -41) (undo-tree-id682 . -41) (undo-tree-id683 . -41) (undo-tree-id684 . -41) (undo-tree-id685 . -41) (undo-tree-id686 . -41) (undo-tree-id687 . -41) (undo-tree-id688 . -41) (undo-tree-id689 . -41) (undo-tree-id690 . -41) (undo-tree-id691 . -41) (undo-tree-id692 . -41) (undo-tree-id693 . -41) (undo-tree-id694 . -41) (undo-tree-id695 . -42) (undo-tree-id696 . -42) (undo-tree-id697 . -42) (undo-tree-id698 . -42) (undo-tree-id699 . -42) (undo-tree-id700 . -42) (undo-tree-id701 . -42) (undo-tree-id702 . -42) (undo-tree-id703 . -39) (undo-tree-id704 . -39) (undo-tree-id705 . -39) (undo-tree-id706 . -39) (undo-tree-id707 . -39) (undo-tree-id708 . -39) (undo-tree-id709 . -39) (undo-tree-id710 . -39) (undo-tree-id711 . -39) (undo-tree-id712 . -39) (undo-tree-id713 . -39) (undo-tree-id714 . -39) (undo-tree-id715 . -39) (undo-tree-id716 . -39) (undo-tree-id717 . -39) (undo-tree-id718 . -39) (undo-tree-id719 . -39) (undo-tree-id720 . -39) (undo-tree-id721 . -39) (undo-tree-id722 . -39) (undo-tree-id723 . -39) (undo-tree-id724 . -39) (undo-tree-id725 . -39) (undo-tree-id726 . -39) (undo-tree-id727 . -39) (undo-tree-id728 . -39) (undo-tree-id729 . -39) (undo-tree-id730 . -39) (undo-tree-id731 . -39) (undo-tree-id732 . -39) (undo-tree-id733 . -39) (undo-tree-id734 . -39) (undo-tree-id735 . -39) (undo-tree-id736 . -39) (undo-tree-id737 . -36) (undo-tree-id738 . -36) (undo-tree-id739 . -25) (undo-tree-id740 . -25) (undo-tree-id741 . -25) (undo-tree-id742 . -25) (undo-tree-id743 . -25) (undo-tree-id744 . -25) (undo-tree-id745 . -25) (undo-tree-id746 . -25) (undo-tree-id747 . -27) (undo-tree-id748 . -27) (undo-tree-id749 . -27) (undo-tree-id750 . -27) (undo-tree-id751 . -27) (undo-tree-id752 . -27) (undo-tree-id753 . -27) (undo-tree-id754 . -27) (undo-tree-id755 . -28) (undo-tree-id756 . -28) (undo-tree-id757 . -32) (undo-tree-id758 . -32) (undo-tree-id759 . -32) (undo-tree-id760 . -32) (undo-tree-id761 . -32) (undo-tree-id762 . -32) (undo-tree-id763 . -32) (undo-tree-id764 . -32) (undo-tree-id765 . -33) (undo-tree-id766 . -33) (undo-tree-id767 . -33) (undo-tree-id768 . -33) (undo-tree-id769 . -42) (undo-tree-id770 . -42) (undo-tree-id771 . -42) (undo-tree-id772 . -42) (undo-tree-id773 . -36) (undo-tree-id774 . -36) (undo-tree-id775 . -36) (undo-tree-id776 . -36) (undo-tree-id777 . -36) (undo-tree-id778 . -36) (undo-tree-id779 . -36) (undo-tree-id780 . -36) (undo-tree-id781 . -37) (undo-tree-id782 . -37) (undo-tree-id783 . -37) (undo-tree-id784 . -37) (undo-tree-id785 . -37) (undo-tree-id786 . -37) (undo-tree-id787 . -37) (undo-tree-id788 . -37) (undo-tree-id789 . -42) (undo-tree-id790 . -42) (undo-tree-id791 . -42) (undo-tree-id792 . -42) (undo-tree-id793 . -42) (undo-tree-id794 . -42) (undo-tree-id795 . -42) (undo-tree-id796 . -42) (undo-tree-id797 . -42) (undo-tree-id798 . -42) (undo-tree-id799 . -43) (undo-tree-id800 . -43) (undo-tree-id801 . -43) (undo-tree-id802 . -43) (undo-tree-id803 . -43) (undo-tree-id804 . -43) (undo-tree-id805 . -43) (undo-tree-id806 . -43) (undo-tree-id807 . -43) (undo-tree-id808 . -43) (undo-tree-id809 . -43) (undo-tree-id810 . -43) (undo-tree-id811 . -43) (undo-tree-id812 . -43) (undo-tree-id813 . -43) (undo-tree-id814 . -43) (undo-tree-id815 . -45) (undo-tree-id816 . -45) (undo-tree-id817 . -45) (undo-tree-id818 . -45) (undo-tree-id819 . -45) (undo-tree-id820 . -45) (undo-tree-id821 . -45) (undo-tree-id822 . -45) (undo-tree-id823 . -45) (undo-tree-id824 . -45) (undo-tree-id825 . -46) (undo-tree-id826 . -46) (undo-tree-id827 . -47) (undo-tree-id828 . -47) (undo-tree-id829 . -47) (undo-tree-id830 . -47) (undo-tree-id831 . -47) (undo-tree-id832 . -47) (undo-tree-id833 . -47) (undo-tree-id834 . -47) (undo-tree-id835 . -49) (undo-tree-id836 . -49) (undo-tree-id837 . -49) (undo-tree-id838 . -49) (undo-tree-id839 . -49) (undo-tree-id840 . -49) (undo-tree-id841 . -49) (undo-tree-id842 . -49) (undo-tree-id843 . -49) (undo-tree-id844 . -49) (undo-tree-id845 . -49) (undo-tree-id846 . -49) (undo-tree-id847 . -49) (undo-tree-id848 . -49) (undo-tree-id849 . -49) (undo-tree-id850 . -49) (undo-tree-id851 . -51) (undo-tree-id852 . -51) (undo-tree-id853 . -51) (undo-tree-id854 . -51) (undo-tree-id855 . -51) (undo-tree-id856 . -51) (undo-tree-id857 . -51) (undo-tree-id858 . -51) (undo-tree-id859 . -51) (undo-tree-id860 . -51) (undo-tree-id861 . -51) (undo-tree-id862 . -51) (undo-tree-id863 . -51) (undo-tree-id864 . -51) (undo-tree-id865 . -51) (undo-tree-id866 . -51) (undo-tree-id867 . -51) (undo-tree-id868 . -51) (undo-tree-id869 . -51) (undo-tree-id870 . -51) (undo-tree-id871 . -51) (undo-tree-id872 . -51) (undo-tree-id873 . -51) (undo-tree-id874 . -52) (undo-tree-id875 . -52) (undo-tree-id876 . -52) (undo-tree-id877 . -52) (undo-tree-id878 . -52) (undo-tree-id879 . -52) (undo-tree-id880 . -52) (undo-tree-id881 . -52) (undo-tree-id882 . -49) (undo-tree-id883 . -49) (undo-tree-id884 . -49) (undo-tree-id885 . -49) (undo-tree-id886 . -49) (undo-tree-id887 . -49) (undo-tree-id888 . -49) (undo-tree-id889 . -49) (undo-tree-id890 . -49) (undo-tree-id891 . -49) (undo-tree-id892 . -51) (undo-tree-id893 . -51) (undo-tree-id894 . -52) (undo-tree-id895 . -52) (undo-tree-id896 . -52) (undo-tree-id897 . -52) (undo-tree-id898 . -52) (undo-tree-id899 . -52) (undo-tree-id900 . -53) (undo-tree-id901 . -53) (undo-tree-id902 . -53) (undo-tree-id903 . -53) (undo-tree-id904 . -53) (undo-tree-id905 . -53) (undo-tree-id906 . -53) (undo-tree-id907 . -53) (undo-tree-id908 . -53) (undo-tree-id909 . -53) (undo-tree-id910 . -53) (undo-tree-id911 . -53) (undo-tree-id912 . -53) (undo-tree-id913 . -53) (undo-tree-id914 . -55) (undo-tree-id915 . -55) (undo-tree-id916 . -55) (undo-tree-id917 . -55) (undo-tree-id918 . -56) (undo-tree-id919 . -56) (undo-tree-id920 . -56) (undo-tree-id921 . -56) (undo-tree-id922 . -56) (undo-tree-id923 . -56) (undo-tree-id924 . -56) (undo-tree-id925 . -56) (undo-tree-id926 . -56) (undo-tree-id927 . -56) (undo-tree-id928 . -56) (undo-tree-id929 . -56) (undo-tree-id930 . -56) (undo-tree-id931 . -56) (undo-tree-id932 . -56) (undo-tree-id933 . -56) (undo-tree-id934 . -56) (undo-tree-id935 . -56) (undo-tree-id936 . -56) (undo-tree-id937 . -56) (undo-tree-id938 . -56) (undo-tree-id939 . -56) (undo-tree-id940 . -56) (undo-tree-id941 . -56) (undo-tree-id942 . -56) (undo-tree-id943 . -56) (undo-tree-id944 . -56) (undo-tree-id945 . -56) (undo-tree-id946 . -56) (undo-tree-id947 . -56) (undo-tree-id948 . -58) (undo-tree-id949 . -58) (undo-tree-id950 . -58) (undo-tree-id951 . -58) (undo-tree-id952 . -58) (undo-tree-id953 . -58) (undo-tree-id954 . -58) (undo-tree-id955 . -58) (undo-tree-id956 . -58) (undo-tree-id957 . -58) (undo-tree-id958 . -58) (undo-tree-id959 . -58) (undo-tree-id960 . -58) (undo-tree-id961 . -58) (undo-tree-id962 . -61) (undo-tree-id963 . -61) (undo-tree-id964 . -61) (undo-tree-id965 . -61) (undo-tree-id966 . -61) (undo-tree-id967 . -61) (undo-tree-id968 . -61) (undo-tree-id969 . -61) (undo-tree-id970 . -62) (undo-tree-id971 . -62) (undo-tree-id972 . -63) (undo-tree-id973 . -63) (undo-tree-id974 . -64) (undo-tree-id975 . -64) (undo-tree-id976 . -64) (undo-tree-id977 . -64) (undo-tree-id978 . -64) (undo-tree-id979 . -64) (undo-tree-id980 . -21) (undo-tree-id981 . -21) (undo-tree-id982 . -21) (undo-tree-id983 . -21) (undo-tree-id984 . -21) (undo-tree-id985 . -21) (undo-tree-id986 . -21) (undo-tree-id987 . -21) (undo-tree-id988 . -21) (undo-tree-id989 . -21) (undo-tree-id990 . -21) (undo-tree-id991 . -21) (undo-tree-id992 . -21) (undo-tree-id993 . -21) (undo-tree-id994 . -21) (undo-tree-id995 . -21) (undo-tree-id996 . -21) (undo-tree-id997 . -21) (undo-tree-id998 . -21) (undo-tree-id999 . -21) (undo-tree-id1000 . -21) (undo-tree-id1001 . -21) (undo-tree-id1002 . -21) (undo-tree-id1003 . -22) (undo-tree-id1004 . -22) (undo-tree-id1005 . -23) (undo-tree-id1006 . -23) (undo-tree-id1007 . -36) (undo-tree-id1008 . -36) (undo-tree-id1009 . -36) (undo-tree-id1010 . -36) (undo-tree-id1011 . -36) (undo-tree-id1012 . -36) (undo-tree-id1013 . -36) (undo-tree-id1014 . -36) (undo-tree-id1015 . -36) (undo-tree-id1016 . -36) (undo-tree-id1017 . -37) (undo-tree-id1018 . -37) (undo-tree-id1019 . -43) (undo-tree-id1020 . -43) (undo-tree-id1021 . -44) (undo-tree-id1022 . -44) (undo-tree-id1023 . -44) (undo-tree-id1024 . -44) (undo-tree-id1025 . -44) (undo-tree-id1026 . -44) (undo-tree-id1027 . -44) (undo-tree-id1028 . -44) (undo-tree-id1029 . -44) (undo-tree-id1030 . -44) (undo-tree-id1031 . -43) (undo-tree-id1032 . -43) (undo-tree-id1033 . -43) (undo-tree-id1034 . -43) (undo-tree-id1035 . -43) (undo-tree-id1036 . -43) (undo-tree-id1037 . -24) (undo-tree-id1038 . -24) (undo-tree-id1039 . -25) (undo-tree-id1040 . -25) (undo-tree-id1041 . -25) (undo-tree-id1042 . -25) (undo-tree-id1043 . -25) (undo-tree-id1044 . -25) (undo-tree-id1045 . -26) (undo-tree-id1046 . -26) (undo-tree-id1047 . -26) (undo-tree-id1048 . -26) (undo-tree-id1049 . -27) (undo-tree-id1050 . -27) (undo-tree-id1051 . -27) (undo-tree-id1052 . -27) (undo-tree-id1053 . -64) (undo-tree-id1054 . -64) (undo-tree-id1055 . -64) (undo-tree-id1056 . -64) (undo-tree-id1057 . -64) (undo-tree-id1058 . -64) (undo-tree-id1059 . -64) (undo-tree-id1060 . -64) (undo-tree-id1061 . -64) (undo-tree-id1062 . -64) (undo-tree-id1063 . -64) (undo-tree-id1064 . -64) (undo-tree-id1065 . -64) (undo-tree-id1066 . -64) (undo-tree-id1067 . -64) (undo-tree-id1068 . -64) (undo-tree-id1069 . -64) (undo-tree-id1070 . -64) (undo-tree-id1071 . -64) (undo-tree-id1072 . -64) (undo-tree-id1073 . -64) (undo-tree-id1074 . -64) (undo-tree-id1075 . -64) (undo-tree-id1076 . -64) (undo-tree-id1077 . -64) (undo-tree-id1078 . -64) (undo-tree-id1079 . -64) (undo-tree-id1080 . -64) (undo-tree-id1081 . -64) (undo-tree-id1082 . -64) (undo-tree-id1083 . -64) (undo-tree-id1084 . -64) (undo-tree-id1085 . -64) (undo-tree-id1086 . -64) (undo-tree-id1087 . -64) (undo-tree-id1088 . -64) (undo-tree-id1089 . -64) (undo-tree-id1090 . -64) (undo-tree-id1091 . -64) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -64) (undo-tree-id1101 . -64) (undo-tree-id1102 . -64) (undo-tree-id1103 . -64) (undo-tree-id1104 . -64) (undo-tree-id1105 . -64) (undo-tree-id1106 . -64) (undo-tree-id1107 . -64) (undo-tree-id1108 . -64) (undo-tree-id1109 . -64) (undo-tree-id1110 . -64) (undo-tree-id1111 . -64) (undo-tree-id1112 . -64) (undo-tree-id1113 . -64) (undo-tree-id1114 . -64) (undo-tree-id1115 . -64) (undo-tree-id1116 . -64) (undo-tree-id1117 . -64) (undo-tree-id1118 . -64) (undo-tree-id1119 . -51) (undo-tree-id1120 . -51) (undo-tree-id1121 . -51) (undo-tree-id1122 . -51) (undo-tree-id1123 . -51) (undo-tree-id1124 . -51) (undo-tree-id1125 . -64) (undo-tree-id1126 . -64) (undo-tree-id1127 . -51) (undo-tree-id1128 . -51) (undo-tree-id1129 . -64) (undo-tree-id1130 . -51) (undo-tree-id1131 . -51) (undo-tree-id1132 . -64) (undo-tree-id1133 . -64) (undo-tree-id1134 . -64) (undo-tree-id1135 . -64) (undo-tree-id1136 . -64) (undo-tree-id1137 . -64) (undo-tree-id1138 . -64) (undo-tree-id1139 . -64) (undo-tree-id1140 . -64) (undo-tree-id1141 . -64) (undo-tree-id1142 . -64) (undo-tree-id1143 . -64) (undo-tree-id1144 . -64) (undo-tree-id1145 . -64) (undo-tree-id1146 . -64) (undo-tree-id1147 . -64) (undo-tree-id1148 . -64) (undo-tree-id1149 . -64) (undo-tree-id1150 . -64) (undo-tree-id1151 . -47) (undo-tree-id1152 . -47) (undo-tree-id1153 . -47) (undo-tree-id1154 . -47) (undo-tree-id1155 . -47) (undo-tree-id1156 . -47) (undo-tree-id1157 . -47) (undo-tree-id1158 . -47) (undo-tree-id1159 . -47) (undo-tree-id1160 . -47) (undo-tree-id1161 . -47) (undo-tree-id1162 . -47) (undo-tree-id1163 . -47) (undo-tree-id1164 . -48) (undo-tree-id1165 . -48) (undo-tree-id1166 . -48) (undo-tree-id1167 . -64) (undo-tree-id1168 . -48) (undo-tree-id1169 . -48) (undo-tree-id1170 . -48) (undo-tree-id1171 . -59) (undo-tree-id1172 . -59) (undo-tree-id1173 . -59) (undo-tree-id1174 . -59) (undo-tree-id1175 . -59) (undo-tree-id1176 . -59) (undo-tree-id1177 . -59) (undo-tree-id1178 . -59) (undo-tree-id1179 . -60) (undo-tree-id1180 . -60) (undo-tree-id1181 . -60) (undo-tree-id1182 . -60) (undo-tree-id1183 . -64) (undo-tree-id1184 . -60) (undo-tree-id1185 . -60) (undo-tree-id1186 . -60) (undo-tree-id1187 . -64) (undo-tree-id1188 . -64) (undo-tree-id1189 . -64) (undo-tree-id1190 . -64) (undo-tree-id1191 . -64) (undo-tree-id1192 . -64) (undo-tree-id1193 . -64) (undo-tree-id1194 . -64) (undo-tree-id1195 . -64) (undo-tree-id1196 . -64) (undo-tree-id1197 . -64) (undo-tree-id1198 . -64) (undo-tree-id1199 . -64) (undo-tree-id1200 . -64) (undo-tree-id1201 . -64) (undo-tree-id1202 . -64) (undo-tree-id1203 . -64) (undo-tree-id1204 . -64) (undo-tree-id1205 . -64) (undo-tree-id1206 . -64) (undo-tree-id1207 . -64) (undo-tree-id1208 . -64) (undo-tree-id1209 . -64) (undo-tree-id1210 . -64) (undo-tree-id1211 . -64) (undo-tree-id1212 . -64) (undo-tree-id1213 . -64) (undo-tree-id1214 . -64) (undo-tree-id1215 . -64) (undo-tree-id1216 . -64) (undo-tree-id1217 . -64) (undo-tree-id1218 . -64) (undo-tree-id1219 . -64) (undo-tree-id1220 . -64) (undo-tree-id1221 . -64) (undo-tree-id1222 . -64) (undo-tree-id1223 . -64) (undo-tree-id1224 . -64) (undo-tree-id1225 . -64) (undo-tree-id1226 . -64) (undo-tree-id1227 . -64) (undo-tree-id1228 . -64) (undo-tree-id1229 . -64) (undo-tree-id1230 . -64) (undo-tree-id1231 . -64) (undo-tree-id1232 . -64) (undo-tree-id1233 . -64) (undo-tree-id1234 . -64) (undo-tree-id1235 . -64) (undo-tree-id1236 . -64) (undo-tree-id1237 . -64) (undo-tree-id1238 . -51) (undo-tree-id1239 . -64) (undo-tree-id1240 . -64)) nil (26410 52971 258329 394000) 0 nil])
([nil nil ((nil rear-nonsticky nil 597 . 598) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -730) (597 . 731)) nil (26410 52971 257651 970000) 0 nil])
([nil nil ((#("((α → γ) × (β → γ))" 0 2 (fontified t) 2 3 (face lsp-face-semhl-variable fontified t) 3 4 (fontified t) 4 5 (face font-lock-constant-face fontified t) 5 6 (fontified t) 6 7 (face lsp-face-semhl-variable fontified t) 7 9 (fontified t) 9 10 (face font-lock-constant-face fontified t) 10 12 (fontified t) 12 13 (face lsp-face-semhl-variable fontified t) 13 14 (fontified t) 14 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 17 (face lsp-face-semhl-variable fontified t) 17 19 (fontified t)) . 639) (undo-tree-id476 . -18) (undo-tree-id477 . -18) (undo-tree-id478 . -18) (undo-tree-id479 . -18) (undo-tree-id480 . -18) (undo-tree-id481 . -19) (undo-tree-id482 . -19) 657) nil (26410 52971 257650 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 644 . 645) (nil fontified nil 626 . 645) (626 . 645)) nil (26410 52971 257644 900000) 0 nil])
([nil nil ((#("α ⊕ β → γ" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (face font-lock-constant-face fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 645) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -9) (undo-tree-id475 . -9) 653) nil (26410 52971 257643 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 657 . 658) (nil fontified nil 649 . 658) (649 . 658) 648) nil (26410 52984 123940 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 748 . 749) (#("
" 0 1 (fontified nil)) . -804) (730 . 805) 700) nil (26410 52999 830058 407000) 0 nil] [nil nil ((#("  →" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-constant-face fontified nil)) . 661) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (658 . 662) (647 . 652) (#("a:" 0 1 (face lsp-face-semhl-variable fontified nil) 1 2 (fontified nil)) . 647) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (647 . 648) (#("  " 0 1 (fontified nil) 1 2 (fontified nil)) . 744) (undo-tree-id4910 . -2) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2) (undo-tree-id4914 . -2) (undo-tree-id4915 . -2) (undo-tree-id4916 . -2) (726 . 746) (#("            " 0 9 (fontified nil) 9 12 (fontified nil)) . 726) (undo-tree-id4917 . -9) (undo-tree-id4918 . -12) (726 . 738) (#("      " 0 2 (fontified nil) 2 4 (fontified nil) 4 6 (fontified nil)) . 726) (undo-tree-id4919 . -6) (730 . 732) (689 . 707) (#("            " 0 9 (fontified nil) 9 12 (fontified nil)) . 689) (undo-tree-id4920 . -9) (undo-tree-id4921 . -12) (689 . 701) (#("      " 0 2 (fontified nil) 2 4 (fontified nil) 4 6 (fontified nil)) . 689) (undo-tree-id4922 . -6) (undo-tree-id4923 . -6) (undo-tree-id4924 . -6) (693 . 695) (684 . 688) (#("with" 0 4 (face lsp-face-semhl-keyword fontified nil)) . 684) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -2) (undo-tree-id4929 . -2) (undo-tree-id4930 . -2) (undo-tree-id4931 . -2) (undo-tree-id4932 . -4) (undo-tree-id4933 . -4) (undo-tree-id4934 . -4) (undo-tree-id4935 . -4) (undo-tree-id4936 . -4) (undo-tree-id4937 . -4) (undo-tree-id4938 . -4) (undo-tree-id4939 . -4) (undo-tree-id4940 . -4) (undo-tree-id4941 . -4) (undo-tree-id4942 . -4) (undo-tree-id4943 . -4) (undo-tree-id4944 . -4) (722 . 734) (#("r =" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-constant-face fontified nil)) . 722) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -3) (undo-tree-id4952 . -3) (undo-tree-id4953 . -3) (undo-tree-id4954 . -3) (undo-tree-id4955 . -3) (undo-tree-id4956 . -3) (undo-tree-id4957 . -2) (undo-tree-id4958 . -2) (undo-tree-id4959 . -2) (712 . 725) (#("|" 0 1 (fontified nil)) . 712) (669 . 713) (#("a" 0 1 (face lsp-face-semhl-variable fontified nil)) . 669) (undo-tree-id4960 . -1) (669 . 670) (#("⟨ a,b ⟩ => h.fst" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (face font-lock-constant-face fontified nil) 9 10 (face font-lock-constant-face fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil)) . 669) (undo-tree-id4961 . -13) (undo-tree-id4962 . -13) (undo-tree-id4963 . -13) (undo-tree-id4964 . -16) (680 . 685) (674 . 676) (#(">" 0 1 (face font-lock-constant-face fontified nil)) . 674) (669 . 671) (#("<" 0 1 (face font-lock-constant-face fontified nil)) . 669) (673 . 678) (#("." 0 1 (fontified nil)) . 673) (undo-tree-id4965 . -1) (665 . 674) (#("{}" 0 1 (fontified nil) 1 2 (fontified nil)) . 665) (undo-tree-id4966 . -2) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (#("fst := fun a => h (Sum.inl a),
   snd := fun b => h (Sum.inr b)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (face font-lock-constant-face fontified t) 5 6 (face font-lock-constant-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face font-lock-constant-face fontified t) 14 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (face font-lock-constant-face fontified t) 39 40 (face font-lock-constant-face fontified t) 40 41 (fontified t) 41 42 (face font-lock-keyword-face fontified t) 42 43 (face font-lock-keyword-face fontified t) 43 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (face font-lock-constant-face fontified t) 48 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t)) . 666) (undo-tree-id4987 . -63) (undo-tree-id4988 . -63) (undo-tree-id4989 . -63) (undo-tree-id4990 . -63) (undo-tree-id4991 . -29) (undo-tree-id4992 . -29) (undo-tree-id4993 . -28) (undo-tree-id4994 . -28)) ((666 . 729) (665 . 667) (#("fun <a,b." 0 3 (face font-lock-keyword-face fontified nil) 3 4 (fontified nil) 4 5 (face font-lock-constant-face fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 665) (undo-tree-id4995 . -4) (undo-tree-id4996 . -4) (undo-tree-id4997 . -4) (undo-tree-id4998 . -4) (undo-tree-id4999 . -4) (undo-tree-id5000 . -4) (undo-tree-id5001 . -8) (undo-tree-id5002 . -8) (undo-tree-id5003 . -8) (undo-tree-id5004 . -4) (undo-tree-id5005 . -4) (undo-tree-id5006 . -4) (undo-tree-id5007 . -4) (undo-tree-id5008 . -4) (undo-tree-id5009 . -4) (undo-tree-id5010 . -4) (undo-tree-id5011 . -4) (undo-tree-id5012 . -4) (undo-tree-id5013 . -4) (undo-tree-id5014 . -4) (undo-tree-id5015 . -4) (undo-tree-id5016 . -4) (undo-tree-id5017 . -4) (undo-tree-id5018 . -4) (undo-tree-id5019 . -4) (undo-tree-id5020 . -4) (undo-tree-id5021 . -4) (undo-tree-id5022 . -4) (undo-tree-id5023 . -4) (undo-tree-id5024 . -4) (undo-tree-id5025 . -4) (undo-tree-id5026 . -4) (undo-tree-id5027 . -4) (undo-tree-id5028 . -4) (undo-tree-id5029 . -4) (undo-tree-id5030 . -4) (undo-tree-id5031 . -4) (undo-tree-id5032 . -4) (undo-tree-id5033 . -4) (undo-tree-id5034 . -4) (undo-tree-id5035 . -4) (undo-tree-id5036 . -4) (undo-tree-id5037 . -4) (undo-tree-id5038 . -4) (undo-tree-id5039 . -4) (undo-tree-id5040 . -4) (undo-tree-id5041 . -4) (undo-tree-id5042 . -4) (undo-tree-id5043 . -4) (undo-tree-id5044 . -4) (undo-tree-id5045 . -4) (undo-tree-id5046 . -4) (undo-tree-id5047 . -4) (undo-tree-id5048 . -4) (undo-tree-id5049 . -4) (undo-tree-id5050 . -4) (undo-tree-id5051 . -4) (undo-tree-id5052 . -4) (undo-tree-id5053 . -4) (undo-tree-id5054 . -4) (undo-tree-id5055 . -4) (undo-tree-id5056 . -4) (undo-tree-id5057 . -4) (undo-tree-id5058 . -4) (undo-tree-id5059 . -4) (undo-tree-id5060 . -4) (undo-tree-id5061 . -4) (undo-tree-id5062 . -4) (undo-tree-id5063 . -4) (undo-tree-id5064 . -4) (undo-tree-id5065 . -4) (undo-tree-id5066 . -4) (undo-tree-id5067 . -4) (undo-tree-id5068 . -4) (undo-tree-id5069 . -4) (undo-tree-id5070 . -4) (undo-tree-id5071 . -4) (undo-tree-id5072 . -4) (undo-tree-id5073 . -4) (undo-tree-id5074 . -4) (undo-tree-id5075 . -4) (undo-tree-id5076 . -4) (undo-tree-id5077 . -4) (undo-tree-id5078 . -4) (undo-tree-id5079 . -4) (undo-tree-id5080 . -4) (undo-tree-id5081 . -4) (undo-tree-id5082 . -4) (undo-tree-id5083 . -4) (undo-tree-id5084 . -4) (undo-tree-id5085 . -4) (undo-tree-id5086 . -4) (undo-tree-id5087 . -4) (undo-tree-id5088 . -4) (undo-tree-id5089 . -4) (undo-tree-id5090 . -4) (undo-tree-id5091 . -4) (undo-tree-id5092 . -4) (undo-tree-id5093 . -4) (undo-tree-id5094 . -4) (undo-tree-id5095 . -4) (undo-tree-id5096 . -4) (undo-tree-id5097 . -4) (undo-tree-id5098 . -4) (undo-tree-id5099 . -4) (undo-tree-id5100 . -4) (undo-tree-id5101 . -4) (undo-tree-id5102 . -4) (undo-tree-id5103 . -4) (undo-tree-id5104 . -4) (undo-tree-id5105 . -4) (undo-tree-id5106 . -4) (undo-tree-id5107 . -4) (undo-tree-id5108 . -4) (undo-tree-id5109 . -4) (undo-tree-id5110 . -4) (undo-tree-id5111 . -4) (undo-tree-id5112 . -4) (undo-tree-id5113 . -4) (undo-tree-id5114 . -4) (undo-tree-id5115 . -4) (undo-tree-id5116 . -4) (undo-tree-id5117 . -4) (undo-tree-id5118 . -4) (undo-tree-id5119 . -4) (undo-tree-id5120 . -4) (undo-tree-id5121 . -4) (undo-tree-id5122 . -4) (undo-tree-id5123 . -4) (undo-tree-id5124 . -4) (undo-tree-id5125 . -4) (undo-tree-id5126 . -4) (undo-tree-id5127 . -9) (undo-tree-id5128 . -4) (undo-tree-id5129 . -4) (undo-tree-id5130 . -4) (undo-tree-id5131 . -4) (undo-tree-id5132 . -4) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (undo-tree-id5135 . -4) (undo-tree-id5136 . -4) (undo-tree-id5137 . -4) (undo-tree-id5138 . -4) (undo-tree-id5139 . -4) (undo-tree-id5140 . -4) (undo-tree-id5141 . -4) (undo-tree-id5142 . -4) (undo-tree-id5143 . -4) (undo-tree-id5144 . -4) (undo-tree-id5145 . -4) (undo-tree-id5146 . -4) (undo-tree-id5147 . -4) (undo-tree-id5148 . -4) (undo-tree-id5149 . -4) (undo-tree-id5150 . -4) (undo-tree-id5151 . -4) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) (undo-tree-id5154 . -4) (undo-tree-id5155 . -4) (undo-tree-id5156 . -4) (undo-tree-id5157 . -4) (undo-tree-id5158 . -4) (undo-tree-id5159 . -4) (undo-tree-id5160 . -4) (undo-tree-id5161 . -4) (undo-tree-id5162 . -4) (undo-tree-id5163 . -4) (undo-tree-id5164 . -4) (undo-tree-id5165 . -4) (undo-tree-id5166 . -4) (undo-tree-id5167 . -4) (undo-tree-id5168 . -4) (undo-tree-id5169 . -4) (undo-tree-id5170 . -4) (undo-tree-id5171 . -4) (undo-tree-id5172 . -4) (undo-tree-id5173 . -4) (undo-tree-id5174 . -4) (undo-tree-id5175 . -4) (undo-tree-id5176 . -4) (undo-tree-id5177 . -4) (undo-tree-id5178 . -4) (undo-tree-id5179 . -4) (undo-tree-id5180 . -4) (undo-tree-id5181 . -4) (undo-tree-id5182 . -4) (undo-tree-id5183 . -4) (undo-tree-id5184 . -4) (undo-tree-id5185 . -4) (undo-tree-id5186 . -4) (673 . 674) (#("> => " 0 1 (face font-lock-constant-face fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-constant-face fontified nil) 3 4 (face font-lock-constant-face fontified nil) 4 5 (fontified nil)) . 673) (undo-tree-id5187 . -5) (undo-tree-id5188 . -5) (undo-tree-id5189 . -5) (undo-tree-id5190 . -5) (669 . 670) (#("⟨ " 0 1 (fontified nil) 1 2 (fontified nil)) . 669) (674 . 675) (#(" ⟩" 0 1 (fontified nil) 1 2 (fontified nil)) . 674) (#("h.fst" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 680) (undo-tree-id5191 . -2) (undo-tree-id5192 . -2) (undo-tree-id5193 . -2) (undo-tree-id5194 . -5) (669 . 685) (#("a" 0 1 (face lsp-face-semhl-variable fontified nil)) . 669) (undo-tree-id5195 . -1) (669 . 670) (#("ab => match ab with
    | inl a => h.fst a
|" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (face font-lock-constant-face fontified nil) 4 5 (face font-lock-constant-face fontified nil) 5 6 (fontified nil) 6 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 14 (fontified nil) 14 15 (fontified nil) 15 19 (face lsp-face-semhl-keyword fontified nil) 19 20 (fontified nil) 20 22 (fontified nil) 22 24 (fontified nil) 24 26 (fontified nil) 26 29 (fontified nil) 29 32 (fontified nil) 32 33 (face font-lock-constant-face fontified nil) 33 34 (face font-lock-constant-face fontified nil) 34 37 (fontified nil) 37 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil)) . 669) (undo-tree-id5196 . -41) (undo-tree-id5197 . -20) (undo-tree-id5198 . -43) (undo-tree-id5199 . -20) (undo-tree-id5200 . -41) (undo-tree-id5201 . -43) (undo-tree-id5202 . -43) (undo-tree-id5203 . -43) (undo-tree-id5204 . 25) (undo-tree-id5205 . -43) (undo-tree-id5206 . -43) (undo-tree-id5207 . -43) (undo-tree-id5208 . -43) (undo-tree-id5209 . -43) (undo-tree-id5210 . -43) (undo-tree-id5211 . -43) (undo-tree-id5212 . -43) (undo-tree-id5213 . -43) (undo-tree-id5214 . -43) (undo-tree-id5215 . -43) (undo-tree-id5216 . -43) (undo-tree-id5217 . -43) (undo-tree-id5218 . -43) (undo-tree-id5219 . -43) (undo-tree-id5220 . -43) (undo-tree-id5221 . -17) (undo-tree-id5222 . -17) (undo-tree-id5223 . -17) (undo-tree-id5224 . -17) (undo-tree-id5225 . -17) (undo-tree-id5226 . -17) (undo-tree-id5227 . -17) (undo-tree-id5228 . -19) (undo-tree-id5229 . -19) (undo-tree-id5230 . -15) (undo-tree-id5231 . -19) (undo-tree-id5232 . -19) (undo-tree-id5233 . -19) (undo-tree-id5234 . -19) (undo-tree-id5235 . -19) (undo-tree-id5236 . -19) (undo-tree-id5237 . -19) (undo-tree-id5238 . -19) (undo-tree-id5239 . -19) (undo-tree-id5240 . -19) (undo-tree-id5241 . -15) (undo-tree-id5242 . -15) (undo-tree-id5243 . -15) (undo-tree-id5244 . -15) (undo-tree-id5245 . -15) (undo-tree-id5246 . -15) (undo-tree-id5247 . -15) (undo-tree-id5248 . -20) (undo-tree-id5249 . -15) (undo-tree-id5250 . -15) (undo-tree-id5251 . -15) (undo-tree-id5252 . 25) (undo-tree-id5253 . -15) (undo-tree-id5254 . -15) (undo-tree-id5255 . -15) (undo-tree-id5256 . -15) (undo-tree-id5257 . -15) (undo-tree-id5258 . -15) (undo-tree-id5259 . -15) (undo-tree-id5260 . -20) (undo-tree-id5261 . -15) (undo-tree-id5262 . -15) (undo-tree-id5263 . -15) (undo-tree-id5264 . -20) (undo-tree-id5265 . -24) (undo-tree-id5266 . -24) (undo-tree-id5267 . -24) (undo-tree-id5268 . -20) (undo-tree-id5269 . -20) (undo-tree-id5270 . -20) (undo-tree-id5271 . -20) (undo-tree-id5272 . -20) (undo-tree-id5273 . -20) (undo-tree-id5274 . -43) (undo-tree-id5275 . -43) (undo-tree-id5276 . -43) (undo-tree-id5277 . -43) (undo-tree-id5278 . -43) (undo-tree-id5279 . -43) (undo-tree-id5280 . -43) (undo-tree-id5281 . -43) (undo-tree-id5282 . -43) (undo-tree-id5283 . -43) (undo-tree-id5284 . -43) (undo-tree-id5285 . -43) (undo-tree-id5286 . -43) (undo-tree-id5287 . -43) (undo-tree-id5288 . -43) (undo-tree-id5289 . -43) (undo-tree-id5290 . -43) (undo-tree-id5291 . -20) (undo-tree-id5292 . -20) (undo-tree-id5293 . -20) (undo-tree-id5294 . -20) (undo-tree-id5295 . -20) (undo-tree-id5296 . -20) (undo-tree-id5297 . -20) (undo-tree-id5298 . -20) (undo-tree-id5299 . -15) (undo-tree-id5300 . -15) (undo-tree-id5301 . -15) (undo-tree-id5302 . -15) (undo-tree-id5303 . -12) (undo-tree-id5304 . -12) (undo-tree-id5305 . -15) (undo-tree-id5306 . -15) (undo-tree-id5307 . -15) (undo-tree-id5308 . -15) (undo-tree-id5309 . -15) (undo-tree-id5310 . -15) (undo-tree-id5311 . -15) (undo-tree-id5312 . -15) (undo-tree-id5313 . -15) (undo-tree-id5314 . -15) (undo-tree-id5315 . -15) (undo-tree-id5316 . -15) (undo-tree-id5317 . -15) (undo-tree-id5318 . -15) (undo-tree-id5319 . -15) (undo-tree-id5320 . -15) (undo-tree-id5321 . -15) (undo-tree-id5322 . -15) (undo-tree-id5323 . -15) (undo-tree-id5324 . -15) (undo-tree-id5325 . -15) (undo-tree-id5326 . -15) (undo-tree-id5327 . -15) (undo-tree-id5328 . -15) (undo-tree-id5329 . -41) (undo-tree-id5330 . -41) (undo-tree-id5331 . -15) (undo-tree-id5332 . -15) (undo-tree-id5333 . -15) (undo-tree-id5334 . -15) (undo-tree-id5335 . -15) (undo-tree-id5336 . -15) (undo-tree-id5337 . -15) (undo-tree-id5338 . -15) (undo-tree-id5339 . -15) (undo-tree-id5340 . -15) (undo-tree-id5341 . -15) (undo-tree-id5342 . -15) (undo-tree-id5343 . -15) (undo-tree-id5344 . -15) (undo-tree-id5345 . -15) (undo-tree-id5346 . -15) (undo-tree-id5347 . -30) (undo-tree-id5348 . -43) (undo-tree-id5349 . -43) (undo-tree-id5350 . -43) (undo-tree-id5351 . -15) (undo-tree-id5352 . -15) (undo-tree-id5353 . -43) (undo-tree-id5354 . -15) (undo-tree-id5355 . -15) (undo-tree-id5356 . -15) (undo-tree-id5357 . -15) (undo-tree-id5358 . -15) (undo-tree-id5359 . -15) (undo-tree-id5360 . -15) (undo-tree-id5361 . -15) (undo-tree-id5362 . -15) (undo-tree-id5363 . -15) (undo-tree-id5364 . -15) (undo-tree-id5365 . -15) (undo-tree-id5366 . -15) (undo-tree-id5367 . -15) (undo-tree-id5368 . -15) (undo-tree-id5369 . -41) (undo-tree-id5370 . -41) (undo-tree-id5371 . -41) (undo-tree-id5372 . -41) (undo-tree-id5373 . -43) (undo-tree-id5374 . -43) (undo-tree-id5375 . -43) (undo-tree-id5376 . -43) (undo-tree-id5377 . -43) (undo-tree-id5378 . -43) (undo-tree-id5379 . -43) (undo-tree-id5380 . -43) (undo-tree-id5381 . -41) (undo-tree-id5382 . -43) (undo-tree-id5383 . -20) (undo-tree-id5384 . -41) (undo-tree-id5385 . -41) (undo-tree-id5386 . -41) (undo-tree-id5387 . -41) (undo-tree-id5388 . -43) (undo-tree-id5389 . -41) (712 . 713) (#("    | inl r =" 0 2 (fontified nil) 2 4 (fontified nil) 4 6 (fontified nil) 6 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (face font-lock-constant-face fontified nil)) . 712) (undo-tree-id5390 . -10) (undo-tree-id5391 . -10) (undo-tree-id5392 . -10) (undo-tree-id5393 . -10) (undo-tree-id5394 . -10) (undo-tree-id5395 . -11) (undo-tree-id5396 . -11) (undo-tree-id5397 . -11) (undo-tree-id5398 . -11) (undo-tree-id5399 . -11) (undo-tree-id5400 . -11) (undo-tree-id5401 . -13) (undo-tree-id5402 . -13) (undo-tree-id5403 . -13) (undo-tree-id5404 . -13) (undo-tree-id5405 . -13) (undo-tree-id5406 . -13) (undo-tree-id5407 . -12) (undo-tree-id5408 . -12) (undo-tree-id5409 . -12) (undo-tree-id5410 . -4) (undo-tree-id5411 . -10) (undo-tree-id5412 . -10) (undo-tree-id5413 . -10) (undo-tree-id5414 . -10) (undo-tree-id5415 . -10) (undo-tree-id5416 . -10) (undo-tree-id5417 . -10) (undo-tree-id5418 . -10) (undo-tree-id5419 . -10) (undo-tree-id5420 . -10) (undo-tree-id5421 . -10) (undo-tree-id5422 . -10) (undo-tree-id5423 . -10) (undo-tree-id5424 . -10) (722 . 725) (#("b => h.snd b" 0 2 (fontified nil) 2 3 (face font-lock-constant-face fontified nil) 3 4 (face font-lock-constant-face fontified nil) 4 11 (fontified nil) 11 12 (fontified nil)) . 722) (undo-tree-id5425 . -11) (undo-tree-id5426 . -11) (undo-tree-id5427 . -7) (undo-tree-id5428 . -7) (undo-tree-id5429 . -7) (undo-tree-id5430 . -11) (undo-tree-id5431 . -11) (undo-tree-id5432 . -11) (undo-tree-id5433 . -11) (undo-tree-id5434 . -11) (undo-tree-id5435 . -11) (undo-tree-id5436 . -11) (undo-tree-id5437 . -11) (undo-tree-id5438 . -11) (undo-tree-id5439 . -11) (684 . 688) (#("with" 0 4 (face font-lock-keyword-face fontified t)) . 684) (undo-tree-id5440 . -4) (undo-tree-id5441 . -4) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) (undo-tree-id5446 . -4) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) (undo-tree-id5449 . -4) (undo-tree-id5450 . -4) (undo-tree-id5451 . -4) (undo-tree-id5452 . -4) (undo-tree-id5453 . -4) (undo-tree-id5454 . -4) (undo-tree-id5455 . -4) (undo-tree-id5456 . -4) (undo-tree-id5457 . -4) (undo-tree-id5458 . -4) (undo-tree-id5459 . -4) (undo-tree-id5460 . -4) (undo-tree-id5461 . -4) (undo-tree-id5462 . -4) (undo-tree-id5463 . -4) (undo-tree-id5464 . -4) (undo-tree-id5465 . -4) (undo-tree-id5466 . -4) (undo-tree-id5467 . -4) (undo-tree-id5468 . -4) (undo-tree-id5469 . -4) (undo-tree-id5470 . -4) (undo-tree-id5471 . -4) (undo-tree-id5472 . -3) (undo-tree-id5473 . -3) (undo-tree-id5474 . -3) (undo-tree-id5475 . -3) (undo-tree-id5476 . -3) (undo-tree-id5477 . -3) (undo-tree-id5478 . -3) (undo-tree-id5479 . -3) (undo-tree-id5480 . -3) (undo-tree-id5481 . -3) (undo-tree-id5482 . -3) (undo-tree-id5483 . -3) (undo-tree-id5484 . -3) (undo-tree-id5485 . -3) (undo-tree-id5486 . -3) (undo-tree-id5487 . -3) (undo-tree-id5488 . -3) (undo-tree-id5489 . -3) (undo-tree-id5490 . -3) (undo-tree-id5491 . -3) (undo-tree-id5492 . -3) (undo-tree-id5493 . -3) (undo-tree-id5494 . -3) (undo-tree-id5495 . -3) (undo-tree-id5496 . -3) (undo-tree-id5497 . -3) (undo-tree-id5498 . -3) (undo-tree-id5499 . -3) (undo-tree-id5500 . -3) (undo-tree-id5501 . -3) (undo-tree-id5502 . -3) (undo-tree-id5503 . -3) (undo-tree-id5504 . -3) (undo-tree-id5505 . -3) (undo-tree-id5506 . -3) (undo-tree-id5507 . -3) (undo-tree-id5508 . -3) (undo-tree-id5509 . -3) (undo-tree-id5510 . -3) (#("  " 0 2 (fontified nil)) . 693) (undo-tree-id5511 . -2) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (689 . 695) (#("            " 0 9 (fontified nil) 9 12 (fontified nil)) . 689) (undo-tree-id5514 . -9) (undo-tree-id5515 . -12) (689 . 701) (#("                  " 0 18 (fontified t)) . 689) (undo-tree-id5516 . -18) (undo-tree-id5517 . -18) (undo-tree-id5518 . -18) (undo-tree-id5519 . -18) (undo-tree-id5520 . -18) (undo-tree-id5521 . -18) (undo-tree-id5522 . -18) (undo-tree-id5523 . -18) (undo-tree-id5524 . -18) (#("  " 0 2 (fontified nil)) . 730) (undo-tree-id5525 . -2) (726 . 732) (#("            " 0 9 (fontified nil) 9 12 (fontified nil)) . 726) (undo-tree-id5526 . -9) (undo-tree-id5527 . -12) (726 . 738) (#("                    " 0 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil)) . 726) (undo-tree-id5528 . -18) (undo-tree-id5529 . -20) (undo-tree-id5530 . -20) (undo-tree-id5531 . -20) (undo-tree-id5532 . -20) (undo-tree-id5533 . -20) (undo-tree-id5534 . -20) (undo-tree-id5535 . -20) (undo-tree-id5536 . -18) (undo-tree-id5537 . -18) (undo-tree-id5538 . -18) (undo-tree-id5539 . -18) (undo-tree-id5540 . -18) (undo-tree-id5541 . -18) (744 . 746) (#("a" 0 1 (face lsp-face-semhl-variable fontified nil)) . 647) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (647 . 649) (#("(ab :" 0 1 (fontified nil) 1 3 (fontified nil) 3 5 (fontified nil)) . 647) (#(") : " 0 3 (fontified nil) 3 4 (fontified nil)) . 658) (undo-tree-id5549 . -4) (undo-tree-id5550 . -4) (undo-tree-id5551 . -4) (undo-tree-id5552 . -4) (undo-tree-id5553 . -4) (undo-tree-id5554 . -4) (undo-tree-id5555 . -4) (undo-tree-id5556 . -4) (undo-tree-id5557 . -4) (undo-tree-id5558 . -4) (undo-tree-id5559 . -4) (undo-tree-id5560 . -4) (undo-tree-id5561 . -3) (undo-tree-id5562 . -3) (undo-tree-id5563 . -3) (undo-tree-id5564 . -3) (undo-tree-id5565 . -3) (undo-tree-id5566 . -3) (undo-tree-id5567 . -3) (undo-tree-id5568 . -3) (undo-tree-id5569 . -3) (undo-tree-id5570 . -3) (661 . 664)) (26410 52981 162923 785000) 0 nil])
([nil nil ((#("  {fst := fun a => h (Sum.inl a),
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (face font-lock-constant-face fontified t) 8 9 (face font-lock-constant-face fontified t) 9 10 (fontified t) 10 11 (face lsp-face-semhl-keyword fontified t) 11 12 (face lsp-face-semhl-keyword fontified t) 12 13 (face lsp-face-semhl-keyword fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (face font-lock-constant-face fontified t) 17 18 (face font-lock-constant-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) . 663) (undo-tree-id5634 . -3) (undo-tree-id5635 . -33) (undo-tree-id5636 . -3) (undo-tree-id5637 . -2) (undo-tree-id5638 . -2) (undo-tree-id5639 . -2) (undo-tree-id5640 . -2) (undo-tree-id5641 . -2) (undo-tree-id5642 . -2) (undo-tree-id5643 . -2) (undo-tree-id5644 . -2) (undo-tree-id5645 . -2) (undo-tree-id5646 . -2) (undo-tree-id5647 . -2) (undo-tree-id5648 . -2) (undo-tree-id5649 . -2) (undo-tree-id5650 . -2) (undo-tree-id5651 . -2) (undo-tree-id5652 . -2) (undo-tree-id5653 . -2) (undo-tree-id5654 . -2) (undo-tree-id5655 . -2) (undo-tree-id5656 . -2) (undo-tree-id5657 . -2) (undo-tree-id5658 . -2) (undo-tree-id5659 . -2) (undo-tree-id5660 . -2) (undo-tree-id5661 . -2) (undo-tree-id5662 . -2) (undo-tree-id5663 . -2) (undo-tree-id5664 . -2) (undo-tree-id5665 . -2) (undo-tree-id5666 . -2) (undo-tree-id5667 . -2) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2) (undo-tree-id5679 . -2) (undo-tree-id5680 . -2) (undo-tree-id5681 . -2) (undo-tree-id5682 . -2) (undo-tree-id5683 . -2) (undo-tree-id5684 . -2) (undo-tree-id5685 . -2) (undo-tree-id5686 . -2) (undo-tree-id5687 . -2) (undo-tree-id5688 . -2) (undo-tree-id5689 . -2) (undo-tree-id5690 . -2) (undo-tree-id5691 . -2) (undo-tree-id5692 . -2) (undo-tree-id5693 . -2) (undo-tree-id5694 . -2) (undo-tree-id5695 . -2) (undo-tree-id5696 . -2) (undo-tree-id5697 . -2) (undo-tree-id5698 . -2) (undo-tree-id5699 . -2) (undo-tree-id5700 . -2) (undo-tree-id5701 . -2) (undo-tree-id5702 . -2) (undo-tree-id5703 . -2) (undo-tree-id5704 . -2) (undo-tree-id5705 . -2) (undo-tree-id5706 . -2) (undo-tree-id5707 . -2) (undo-tree-id5708 . -2) (undo-tree-id5709 . -2) (undo-tree-id5710 . -2) (undo-tree-id5711 . -2) (undo-tree-id5712 . -2) (undo-tree-id5713 . -2) (undo-tree-id5714 . -2) (undo-tree-id5715 . -2) (undo-tree-id5716 . -2) (undo-tree-id5717 . -2) (undo-tree-id5718 . -2) (undo-tree-id5719 . -2) (undo-tree-id5720 . -2) (undo-tree-id5721 . -2) (undo-tree-id5722 . -2) (undo-tree-id5723 . -2) (undo-tree-id5724 . -2) (undo-tree-id5725 . -2) (undo-tree-id5726 . -2) (undo-tree-id5727 . -2) (undo-tree-id5728 . -2) (undo-tree-id5729 . -2) (undo-tree-id5730 . -2) (undo-tree-id5731 . -2) (undo-tree-id5732 . -2) (undo-tree-id5733 . -2) (undo-tree-id5734 . -2) (undo-tree-id5735 . -2) (undo-tree-id5736 . -2) (undo-tree-id5737 . -2) (undo-tree-id5738 . -2) (undo-tree-id5739 . -2) (undo-tree-id5740 . -2) (undo-tree-id5741 . -2) (undo-tree-id5742 . -2) (undo-tree-id5743 . -2) (undo-tree-id5744 . -2) (undo-tree-id5745 . -2) (undo-tree-id5746 . -2) (undo-tree-id5747 . -2) (undo-tree-id5748 . -2) (undo-tree-id5749 . -2) (undo-tree-id5750 . -2) (undo-tree-id5751 . -2) (undo-tree-id5752 . -2) (undo-tree-id5753 . -2) (undo-tree-id5754 . -2) (undo-tree-id5755 . -2) (undo-tree-id5756 . -2) (undo-tree-id5757 . -2) (undo-tree-id5758 . -2) (undo-tree-id5759 . -2) (undo-tree-id5760 . -2) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -2) (undo-tree-id5766 . -2) (undo-tree-id5767 . -2) (undo-tree-id5768 . -2) (undo-tree-id5769 . -2) (undo-tree-id5770 . -2) (undo-tree-id5771 . -2) (undo-tree-id5772 . -2) (undo-tree-id5773 . -2) (undo-tree-id5774 . -2) (undo-tree-id5775 . -2) (undo-tree-id5776 . -2) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -2) (undo-tree-id5783 . -2) (undo-tree-id5784 . -2) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -32) (undo-tree-id5789 . -32) (undo-tree-id5790 . -31) (undo-tree-id5791 . -31) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -2) (undo-tree-id5799 . -2) (undo-tree-id5800 . -2) (undo-tree-id5801 . -2) (undo-tree-id5802 . -2) (undo-tree-id5803 . -2) (undo-tree-id5804 . -2) (undo-tree-id5805 . -2) (undo-tree-id5806 . -3) (undo-tree-id5807 . -3) (undo-tree-id5808 . -3) (undo-tree-id5809 . -3) (undo-tree-id5810 . -3) (undo-tree-id5811 . -3) (undo-tree-id5812 . -3) (undo-tree-id5813 . -3) (undo-tree-id5814 . -3) (undo-tree-id5815 . -3) (undo-tree-id5816 . -2) (undo-tree-id5817 . -2) (undo-tree-id5818 . -2) (undo-tree-id5819 . -2) (undo-tree-id5820 . -2) (undo-tree-id5821 . -2) (undo-tree-id5822 . -2) (undo-tree-id5823 . -2) (undo-tree-id5824 . -2) (undo-tree-id5825 . -2) (undo-tree-id5826 . -2) (undo-tree-id5827 . -2) (undo-tree-id5828 . -2) (undo-tree-id5829 . -2) (undo-tree-id5830 . -2) (undo-tree-id5831 . -2) (undo-tree-id5832 . -2) (undo-tree-id5833 . -2) (undo-tree-id5834 . -2) (undo-tree-id5835 . -2) (undo-tree-id5836 . -3) (undo-tree-id5837 . -3) (undo-tree-id5838 . -3) (undo-tree-id5839 . -3) (undo-tree-id5840 . -3) (undo-tree-id5841 . -3) (undo-tree-id5842 . -3) (undo-tree-id5843 . -3) (undo-tree-id5844 . -3) (undo-tree-id5845 . -3) (undo-tree-id5846 . -3) (undo-tree-id5847 . -3) (undo-tree-id5848 . -3) (undo-tree-id5849 . -3) (undo-tree-id5850 . -3) (undo-tree-id5851 . -3) (undo-tree-id5852 . -3) (undo-tree-id5853 . -3) (undo-tree-id5854 . -3) (undo-tree-id5855 . -34) (undo-tree-id5856 . -18) (undo-tree-id5857 . -18) (undo-tree-id5858 . -18) (undo-tree-id5859 . -18) (undo-tree-id5860 . -18) (undo-tree-id5861 . -18) (undo-tree-id5862 . -18) (undo-tree-id5863 . -18) (undo-tree-id5864 . -18) (undo-tree-id5865 . -18) (undo-tree-id5866 . -18) (undo-tree-id5867 . -18) (undo-tree-id5868 . -18) (undo-tree-id5869 . -18) (undo-tree-id5870 . -18) (undo-tree-id5871 . -18) (undo-tree-id5872 . -18) (undo-tree-id5873 . -18) (undo-tree-id5874 . -18) (undo-tree-id5875 . -18) (undo-tree-id5876 . -18) (undo-tree-id5877 . -18) (undo-tree-id5878 . -18) (undo-tree-id5879 . -18) (undo-tree-id5880 . -18) (undo-tree-id5881 . -18) (undo-tree-id5882 . -18) (undo-tree-id5883 . -18) (undo-tree-id5884 . -18) (undo-tree-id5885 . -34) 681) nil (26410 52999 830050 854000) 0 nil])
([nil nil ((#("  fun ab => match ab with
" 0 2 (fontified t) 2 5 (face lsp-face-semhl-keyword fontified t) 5 6 (fontified t) 6 8 (face lsp-face-semhl-variable fontified t) 8 9 (fontified t) 9 10 (face font-lock-constant-face fontified t) 10 11 (face font-lock-constant-face fontified t) 11 12 (fontified t) 12 17 (face lsp-face-semhl-keyword fontified t) 17 18 (fontified t) 18 20 (face lsp-face-semhl-variable fontified t) 20 21 (fontified t) 21 25 (face lsp-face-semhl-keyword fontified t) 25 26 (fontified t)) . 668) (undo-tree-id25 . -21) (undo-tree-id26 . -25) (undo-tree-id27 . 1) (undo-tree-id28 . -2) (undo-tree-id29 . -21) (undo-tree-id30 . -21) (undo-tree-id31 . -21) (undo-tree-id32 . -21) (undo-tree-id33 . -21) (undo-tree-id34 . -21) (undo-tree-id35 . -21) (undo-tree-id36 . -21) (undo-tree-id37 . -21) (undo-tree-id38 . -21) (undo-tree-id39 . -2) (undo-tree-id40 . -21) (undo-tree-id41 . -21) (undo-tree-id42 . -21) (undo-tree-id43 . -21) (undo-tree-id44 . -21) (undo-tree-id45 . -21) (undo-tree-id46 . -21) (undo-tree-id47 . -21) (undo-tree-id48 . -21) (undo-tree-id49 . -21) (undo-tree-id50 . -21) (undo-tree-id51 . -21) (undo-tree-id52 . -21) (undo-tree-id53 . -21) (undo-tree-id54 . -21) (undo-tree-id55 . -21) (undo-tree-id56 . -21) (undo-tree-id57 . -26) (undo-tree-id58 . -21) (undo-tree-id59 . -21) (undo-tree-id60 . -21) (undo-tree-id61 . 1) (undo-tree-id62 . -25) (undo-tree-id63 . -25) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -25) (undo-tree-id69 . -26) (undo-tree-id70 . -25) (undo-tree-id71 . -25) (undo-tree-id72 . -25) (undo-tree-id73 . -26) (undo-tree-id74 . -26) (undo-tree-id75 . -26) (undo-tree-id76 . -26) (undo-tree-id77 . -26) (undo-tree-id78 . -26) (undo-tree-id79 . -26) (undo-tree-id80 . -26) (undo-tree-id81 . -26) (undo-tree-id82 . -25) (undo-tree-id83 . -25) (undo-tree-id84 . -25) (undo-tree-id85 . -25) (undo-tree-id86 . -18) (undo-tree-id87 . -18) (undo-tree-id88 . -25) (undo-tree-id89 . -25) (undo-tree-id90 . -25) (undo-tree-id91 . -25) (undo-tree-id92 . -25) (undo-tree-id93 . -25) (undo-tree-id94 . -25) (undo-tree-id95 . -25) (undo-tree-id96 . -25) (undo-tree-id97 . -25) (undo-tree-id98 . -25) (undo-tree-id99 . -25) (undo-tree-id100 . -25) (undo-tree-id101 . -25) (undo-tree-id102 . -25) (undo-tree-id103 . -25) (undo-tree-id104 . -25) (undo-tree-id105 . -25) (undo-tree-id106 . -24) (undo-tree-id107 . -24) (undo-tree-id108 . -24) (undo-tree-id109 . -24) (undo-tree-id110 . -24) (undo-tree-id111 . -24) (undo-tree-id112 . -24) (undo-tree-id113 . -24) (undo-tree-id114 . -24) (undo-tree-id115 . -24) (undo-tree-id116 . -24) (undo-tree-id117 . -24) (undo-tree-id118 . -24) (undo-tree-id119 . -24) (undo-tree-id120 . -24) (undo-tree-id121 . -24) (undo-tree-id122 . -24) (undo-tree-id123 . -24) (undo-tree-id124 . -24) (undo-tree-id125 . -24) (undo-tree-id126 . -24) (undo-tree-id127 . -24) (undo-tree-id128 . -24) (undo-tree-id129 . -24) (undo-tree-id130 . -24) (undo-tree-id131 . -26) 692) ((668 . 694)) (26410 52971 260125 956000) 0 nil])
([nil nil ((#("   snd := fun b => h (Sum.inr b)}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (face font-lock-constant-face fontified t) 8 9 (face font-lock-constant-face fontified t) 9 10 (fontified t) 10 11 (face lsp-face-semhl-keyword fontified t) 11 12 (face lsp-face-semhl-keyword fontified t) 12 13 (face lsp-face-semhl-keyword fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (face font-lock-constant-face fontified t) 17 18 (face font-lock-constant-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) . 663) (undo-tree-id5603 . -33) (undo-tree-id5604 . -3) (undo-tree-id5605 . -32) (undo-tree-id5606 . -32) (undo-tree-id5607 . -32) (undo-tree-id5608 . -32) (undo-tree-id5609 . -3) (undo-tree-id5610 . -3) (undo-tree-id5611 . -3) (undo-tree-id5612 . -3) (undo-tree-id5613 . -3) (undo-tree-id5614 . -3) (undo-tree-id5615 . -3) (undo-tree-id5616 . -3) (undo-tree-id5617 . -3) (undo-tree-id5618 . -3) (undo-tree-id5619 . -3) (undo-tree-id5620 . -3) (undo-tree-id5621 . -3) (undo-tree-id5622 . -3) (undo-tree-id5623 . -3) (undo-tree-id5624 . -3) (undo-tree-id5625 . -3) (undo-tree-id5626 . -18) (undo-tree-id5627 . -33) (undo-tree-id5628 . -18) (undo-tree-id5629 . -18) (undo-tree-id5630 . -18) (undo-tree-id5631 . -18) (undo-tree-id5632 . -18) (undo-tree-id5633 . -34) 681) nil (26410 52999 829800 23000) 0 nil])
([nil nil ((#("                  " 0 18 (fontified nil)) . -719) (undo-tree-id0 . -18) (undo-tree-id1 . -18) (undo-tree-id2 . -18) (undo-tree-id3 . -18) (undo-tree-id4 . -18) (undo-tree-id5 . -18) (undo-tree-id6 . -18) (undo-tree-id7 . -18) (undo-tree-id8 . -18) (undo-tree-id9 . -18) (undo-tree-id10 . -18) (undo-tree-id11 . -18) (undo-tree-id12 . -18) (undo-tree-id13 . -18) (703 . 719) (#("                  " 0 18 (fontified nil)) . -684) (undo-tree-id14 . 18) (undo-tree-id15 . 18) (undo-tree-id16 . -18) (undo-tree-id17 . -18) (undo-tree-id18 . -18) (undo-tree-id19 . -18) (undo-tree-id20 . -18) (undo-tree-id21 . -18) (undo-tree-id22 . -18) (undo-tree-id23 . -18) (undo-tree-id24 . -18) (668 . 684) 729) ((#("                " 0 16 (fontified nil)) . 668) (684 . 702) (#("                " 0 16 (fontified nil)) . 703) (719 . 737)) (26410 52971 256665 9000) 0 nil])
([nil nil ((#("                  " 0 18 (fontified nil)) . -714) (undo-tree-id5585 . -18) (undo-tree-id5586 . -18) (undo-tree-id5587 . -18) (undo-tree-id5588 . -18) (698 . 714) (#("                  " 0 17 (fontified nil) 17 18 (rear-nonsticky t fontified nil)) . -679) (undo-tree-id5589 . -18) (undo-tree-id5590 . -18) (undo-tree-id5591 . -18) (undo-tree-id5592 . -18) (undo-tree-id5593 . -18) (undo-tree-id5594 . -18) (undo-tree-id5595 . -18) (undo-tree-id5596 . -18) (undo-tree-id5597 . -18) (undo-tree-id5598 . -18) (undo-tree-id5599 . -18) (undo-tree-id5600 . -18) (undo-tree-id5601 . -18) (undo-tree-id5602 . -18) (663 . 679) 718) nil (26410 52999 829776 250000) 0 nil])
nil
([nil nil ((#("                " 0 16 (fontified nil)) . -690) (undo-tree-id5571 . -16) (686 . 690) (#("                " 0 16 (fontified nil)) . -667) (undo-tree-id5572 . -16) (undo-tree-id5573 . -16) (undo-tree-id5574 . -16) (undo-tree-id5575 . -16) (undo-tree-id5576 . -16) (undo-tree-id5577 . -16) (undo-tree-id5578 . -16) (undo-tree-id5579 . -16) (undo-tree-id5580 . -16) (undo-tree-id5581 . -16) (undo-tree-id5582 . -16) (undo-tree-id5583 . -16) (undo-tree-id5584 . -16) (663 . 667) 716) nil (26410 52999 829760 818000) 0 nil])
([nil nil ((708 . 709) 612) nil (26410 52999 829736 644000) 0 nil])
([nil nil ((666 . 670) (#("w" 0 1 (face font-lock-keyword-face fontified t)) . -659) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -660) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -661) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (#("h" 0 1 (face font-lock-keyword-face fontified t)) . -662) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) 663 (659 . 663) (#("e" 0 1 (fontified t)) . -659) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (#("i" 0 1 (fontified t)) . -660) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (#("t" 0 1 (fontified t)) . -661) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (#("h" 0 1 (fontified t)) . -662) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) 663 (659 . 663) (#(":" 0 1 (face font-lock-constant-face fontified t)) . -659) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -660) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (#(" " 0 1 (fontified t)) . -661) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) 662 (t 26410 52999 875914 838000)) nil (26410 53033 348041 344000) 0 nil])
([nil nil ((699 . 700) (#("l" 0 1 (fontified t)) . -699) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) 700 (693 . 697)) nil (26410 53033 347469 106000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 386) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (t 26410 53033 392559 486000)) nil (26410 53548 776435 330000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 386) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1)) nil (26410 53548 776432 44000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . 386) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1)) nil (26410 53548 776426 326000) 0 nil])
([nil nil ((162 . 163) (158 . 159) (204 . 205) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -204) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -205) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -206) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -208) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -209) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -210) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -211) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -212) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 213 (197 . 204) (176 . 197) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -176) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 177 (#("o" 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -187) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -189) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -190) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -191) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -192) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 193 (186 . 193) (175 . 186) (165 . 175) (164 . 165) (165 . 167) (164 . 165) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -164) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 165 (161 . 165) (160 . 161) (t 26410 53548 792220 964000) 160) nil (26415 34935 585757 764000) 0 nil])
([nil nil ((#("/--
inductive Hist (α σ : Type) : Type where
  | init (s : σ) : Hist α σ
  | app (head : Hist α σ) (a : α) (s : σ) : Hist α σ
--/
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 126 (face font-lock-comment-face fontified t) 126 127 (face font-lock-comment-face fontified t) 127 129 (face font-lock-comment-delimiter-face fontified t) 129 130 (fontified t)) . 31) (undo-tree-id0 . -126) (undo-tree-id1 . -130) (undo-tree-id2 . -130) (undo-tree-id3 . -130) (undo-tree-id4 . -130) (undo-tree-id5 . -130) (undo-tree-id6 . -130) (undo-tree-id7 . -130) (undo-tree-id8 . -130) (undo-tree-id9 . -130) (undo-tree-id10 . -130) (undo-tree-id11 . -126) (undo-tree-id12 . -130) (undo-tree-id13 . -130) (undo-tree-id14 . -130) (undo-tree-id15 . -130) (undo-tree-id16 . -130) (undo-tree-id17 . -130) (undo-tree-id18 . -127) (undo-tree-id19 . -127) (undo-tree-id20 . -127) (undo-tree-id21 . -127) (undo-tree-id22 . -127) (undo-tree-id23 . -127) (undo-tree-id24 . -127) (undo-tree-id25 . -127) (undo-tree-id26 . -127) (undo-tree-id27 . -127) (undo-tree-id28 . -126) (undo-tree-id29 . -128) (undo-tree-id30 . -128) (undo-tree-id31 . -128) (undo-tree-id32 . -130) (undo-tree-id33 . -128) (undo-tree-id34 . -128) (undo-tree-id35 . -128) (undo-tree-id36 . -128) (undo-tree-id37 . -128) (undo-tree-id38 . -128) (undo-tree-id39 . -128) (undo-tree-id40 . 130) (undo-tree-id41 . -126) (undo-tree-id42 . -126) (undo-tree-id43 . -126) (undo-tree-id44 . -130) (undo-tree-id45 . -129) 157) nil (26415 34935 585119 439000) 0 nil])
([nil nil ((638 . 639) (384 . 386) (379 . 384) (t 26415 34935 632466 816000)) nil (26415 34980 302696 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 639 . 640) (#("
" 0 1 (fontified nil)) . -769) (639 . 770)) nil (26415 34980 302694 13000) 0 nil])
([nil nil ((769 . 770) 288) nil (26415 34980 302688 745000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 31) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -2) 32 (t 26415 34980 348364 335000)) nil (26415 35063 999544 846000) 0 nil])
([nil nil ((189 . 197) (168 . 189) (#("e" 0 1 (face font-lock-comment-face fontified t)) . 168) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . 168) (undo-tree-id1322 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . 168) (undo-tree-id1323 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . 168) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . 168) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 168) (160 . 168) (158 . 160) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -158) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) 159 (#("i" 0 1 (face font-lock-comment-face fontified t)) . -158) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -159) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -160) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -161) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -162) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -163) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) 164 (275 . 277) (#("/" 0 1 (face font-lock-constant-face fontified t)) . -275) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#("/" 0 1 (face font-lock-constant-face fontified t)) . -276) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 277 (275 . 277) (199 . 202) (193 . 199) (130 . 134) (#("i" 0 1 (fontified t)) . -130) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("n" 0 1 (fontified t)) . -131) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (#("i" 0 1 (fontified t)) . -132) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (#("t" 0 1 (fontified t)) . -133) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) 134 (174 . 178) (#("t" 0 1 (fontified t)) . -174) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (#("a" 0 1 (fontified t)) . -175) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (#("i" 0 1 (fontified t)) . -176) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (#("l" 0 1 (fontified t)) . -177) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) 178 (139 . 155) (138 . 155)) nil (26415 35063 999533 141000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -176) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -177) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -178) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -179) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -180) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -181) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -182) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -183) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -184) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -185) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -187) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -188) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -189) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -190) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -191) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -192) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -193) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -194) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -195) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -196) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 197) nil (26415 35063 999451 125000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -163) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -164) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -165) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -166) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -167) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -168) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -169) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -170) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -171) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -172) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -173) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -174) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -175) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 176) nil (26415 35063 999124 69000) 0 nil])
([nil nil ((163 . 183)) nil (26415 35063 998207 987000) 0 nil])
([nil nil ((214 . 225)) nil (26415 35063 998207 458000) 0 nil])
([nil nil ((225 . 246)) nil (26415 35063 998206 892000) 0 nil])
([nil nil ((246 . 254)) nil (26415 35063 998206 126000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -248) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("a" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -249) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("c" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -250) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("t" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -251) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("i" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -252) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("o" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -253) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 254) nil (26415 35063 998203 11000) 0 nil])
([nil nil ((248 . 255)) nil (26415 35063 998180 918000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -322) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (#("a" 0 1 (fontified t)) . -323) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#("i" 0 1 (fontified t)) . -324) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (#("l" 0 1 (fontified t)) . -325) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) 326 (t 26415 35064 43638 587000)) nil (26415 35109 819322 697000) 0 nil])
([nil nil ((322 . 326)) nil (26415 35109 819283 459000) 0 nil])
([nil nil ((256 . 257)) nil (26415 35109 819282 874000) 0 nil])
([nil nil ((257 . 260)) nil (26415 35109 819282 311000) 0 nil])
([nil nil ((260 . 261)) nil (26415 35109 819281 757000) 0 nil])
([nil nil ((261 . 263)) nil (26415 35109 819281 222000) 0 nil])
([nil nil ((260 . 261)) nil (26415 35109 819280 644000) 0 nil])
([nil nil ((261 . 282)) nil (26415 35109 819279 856000) 0 nil])
([nil nil ((282 . 302)) nil (26415 35109 819279 144000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -299) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -300) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -301) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) 302) nil (26415 35109 819276 424000) 0 nil])
([nil nil ((299 . 311)) nil (26415 35109 819249 898000) 0 nil])
([nil nil ((311 . 332)) nil (26415 35109 819248 308000) 0 nil])
([nil nil ((332 . 337)) nil (26415 35109 819242 967000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face fontified t)) . -467) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) 468 (t 26415 35109 862899 561000)) nil (26415 35169 492241 790000) 0 nil])
([nil nil ((467 . 468)) nil (26415 35169 492233 550000) 0 nil])
([nil nil ((481 . 502)) nil (26415 35169 492232 954000) 0 nil])
([nil nil ((502 . 507)) nil (26415 35169 492232 209000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t)) . -499) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -500) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -501) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -502) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -503) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -504) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -505) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -506) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) 507) nil (26415 35169 492230 338000) 0 nil])
([nil nil ((499 . 507)) nil (26415 35169 492218 300000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -506) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) 507) nil (26415 35169 492215 996000) 0 nil])
([nil nil ((506 . 511)) nil (26415 35169 492197 910000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -492) (undo-tree-id1599 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -493) (undo-tree-id1600 . -1) 494 (t 26415 35169 508625 949000)) nil (26416 56346 152430 138000) 0 nil])
([nil nil ((492 . 499)) nil (26416 56346 152428 697000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -494) (undo-tree-id1594 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -495) (undo-tree-id1595 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -496) (undo-tree-id1596 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -497) (undo-tree-id1597 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -498) (undo-tree-id1598 . -1) 499) nil (26416 56346 152427 799000) 0 nil])
([nil nil ((507 . 514)) nil (26416 56346 152424 958000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-warning-face fontified t)) . -599) (undo-tree-id1593 . -1) 600) nil (26416 56346 152424 498000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-warning-face fontified t)) . -595) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("o" 0 1 (face font-lock-warning-face fontified t)) . -596) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t)) . -597) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t)) . -598) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) 599) nil (26416 56346 152422 788000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 591) (#("
" 0 1 (fontified t)) . 591)) nil (26416 56346 152415 113000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-constant-face fontified t)) . -589) (undo-tree-id1583 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -590) (undo-tree-id1584 . -1) 591) nil (26416 56346 152413 983000) 0 nil])
([nil nil ((589 . 590)) nil (26416 56346 152411 388000) 0 nil])
([nil nil ((592 . 594) 590) nil (26416 56346 152410 699000) 0 nil])
([nil nil ((594 . 596)) nil (26416 56346 152409 906000) 0 nil])
([nil nil ((596 . 598)) nil (26416 56346 152409 266000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-constant-face fontified t)) . -596) (undo-tree-id1581 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t)) . -597) (undo-tree-id1582 . -1) 598) nil (26416 56346 152408 229000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -594) (undo-tree-id1579 . -1) (#(" " 0 1 (fontified t)) . -595) (undo-tree-id1580 . -1) 596) nil (26416 56346 152405 627000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -571) (undo-tree-id1578 . -1) 572) nil (26416 56346 152402 974000) 0 nil])
([nil nil ((572 . 576)) nil (26416 56346 152401 439000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -574) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (#("L" 0 1 (fontified t)) . -575) (undo-tree-id1577 . -1) 576) nil (26416 56346 152400 490000) 0 nil])
([nil nil ((574 . 576)) nil (26416 56346 152397 271000) 0 nil])
([nil nil ((#("j" 0 1 (face lsp-face-semhl-variable fontified t)) . -573) (undo-tree-id1574 . -1) 574) nil (26416 56346 152396 348000) 0 nil])
([nil nil ((574 . 575)) nil (26416 56346 152394 172000) 0 nil])
([nil nil ((576 . 577)) nil (26416 56346 152393 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -592) (undo-tree-id1573 . -1) 593) nil (26416 56346 152392 833000) 0 nil])
([nil nil ((592 . 596)) nil (26416 56346 152391 23000) 0 nil])
([nil nil ((596 . 597)) nil (26416 56346 152390 220000) 0 nil])
([nil nil ((597 . 599)) nil (26416 56346 152389 44000) 0 nil])
([nil nil ((599 . 603)) nil (26416 56346 152388 380000) 0 nil])
([nil nil ((599 . 604) (#("matc" 0 4 (fontified nil)) . -599) (599 . 603) (#("match" 0 5 (fontified nil)) . -599) (599 . 604) (#("matc" 0 4 (fontified t)) . -599) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) 603) nil (26416 56346 152387 131000) 0 nil])
([nil nil ((604 . 608)) nil (26416 56346 152381 850000) 0 nil])
([nil nil ((608 . 609)) nil (26416 56346 152380 280000) 0 nil])
([nil nil ((609 . 613) (#("last" 0 4 (fontified nil)) . -609) (609 . 613)) nil (26416 56346 152378 751000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -608) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -609) (undo-tree-id1565 . -1) (#("a" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -610) (undo-tree-id1566 . -1) (#("s" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -611) (undo-tree-id1567 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -612) (undo-tree-id1568 . -1) 613) nil (26416 56346 152375 442000) 0 nil])
([nil nil ((608 . 617)) nil (26416 56346 151874 169000) 0 nil])
([nil nil ((617 . 619)) nil (26416 56346 151873 539000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -592) (undo-tree-id1559 . -1) 593) nil (26416 56346 151872 520000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -585) (undo-tree-id1557 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t)) . -586) (undo-tree-id1558 . -1) 587) nil (26416 56346 151870 428000) 0 nil])
([nil nil ((585 . 588)) nil (26416 56346 151868 95000) 0 nil])
([nil nil ((#("p" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -615) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -616) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -617) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -618) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 619) nil (26416 56346 151865 603000) 0 nil])
([nil nil ((615 . 621)) nil (26416 56346 151850 805000) 0 nil])
([nil nil ((617 . 621) (#("head" 0 4 (fontified nil)) . -617) (617 . 621) (#("head" 0 4 (face lsp-face-semhl-property fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -617) (undo-tree-id1529 . -4) (undo-tree-id1530 . -4) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) 621) nil (26416 56346 151849 482000) 0 nil])
([nil nil ((621 . 626)) nil (26416 56346 151846 501000) 0 nil])
([nil nil ((626 . 627)) nil (26416 56346 151845 646000) 0 nil])
([nil nil ((627 . 629)) nil (26416 56346 151844 803000) 0 nil])
([nil nil ((629 . 639)) nil (26416 56346 151843 996000) 0 nil])
([nil nil ((639 . 644)) nil (26416 56346 151843 417000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -643) (undo-tree-id1528 . -1) 644) nil (26416 56346 151842 828000) 0 nil])
([nil nil ((643 . 644)) nil (26416 56346 151841 863000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -643) (undo-tree-id1527 . -1) 644) nil (26416 56346 151841 214000) 0 nil])
([nil nil ((643 . 644)) nil (26416 56346 151840 235000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -643) (undo-tree-id1526 . -1) 644) nil (26416 56346 151839 637000) 0 nil])
([nil nil ((643 . 653)) nil (26416 56346 151838 513000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -652) (undo-tree-id1525 . -1) 653) nil (26416 56346 151837 866000) 0 nil])
([nil nil ((652 . 653)) nil (26416 56346 151836 683000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -652) (undo-tree-id1524 . -1) 653) nil (26416 56346 151836 75000) 0 nil])
([nil nil ((652 . 654)) nil (26416 56346 151834 806000) 0 nil])
([nil nil ((654 . 655)) nil (26416 56346 151834 356000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -654) (undo-tree-id1523 . -1) 655) nil (26416 56346 151833 175000) 0 nil])
([nil nil ((654 . 660)) nil (26416 56346 151816 581000) 0 nil])
([nil nil ((660 . 661)) nil (26416 56346 151816 168000) 0 nil])
([nil nil ((661 . 663)) nil (26416 56346 151815 753000) 0 nil])
([nil nil ((663 . 665)) nil (26416 56346 151815 341000) 0 nil])
([nil nil ((522 . 524)) nil (26416 56346 151814 874000) 0 nil])
([nil nil ((599 . 601)) nil (26416 56346 151814 414000) 0 nil])
([nil nil ((631 . 633)) nil (26416 56346 151813 428000) 0 nil])
([nil nil ((667 . 669)) nil (26416 56346 151809 719000) 0 nil])
([nil nil ((79 . 82) (t 26416 56346 199399 743000)) nil (26417 27928 201856 254000) 0 nil])
([nil nil ((82 . 83)) nil (26417 27928 201855 475000) 0 nil])
([nil nil ((260 . 262)) nil (26417 27928 201854 766000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -261) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) 262) nil (26417 27928 201853 573000) 0 nil])
([nil nil ((261 . 262)) nil (26417 27928 201847 917000) 0 nil])
([nil nil ((262 . 263)) nil (26417 27928 201847 233000) 0 nil])
([nil nil ((79 . 80)) nil (26417 27928 201845 892000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -76) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -77) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (#("
" 0 1 (fontified t)) . -78) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (#("
" 0 1 (fontified t)) . -79) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -80) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (#("-" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -81) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -82) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) 83) nil (26417 27928 201837 642000) 0 nil])
([nil nil ((31 . 41) (#("s" 0 1 (face lsp-face-semhl-keyword fontified t)) . -31) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -32) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t)) . -33) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -34) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -35) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -36) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -37) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t)) . -38) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -39) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) 41 (41 . 45) (#("Hist" 0 4 (fontified nil)) . -41) (41 . 45) (#("Hist" 0 4 (face font-lock-function-name-face fontified t)) . -41) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) 45 (33 . 45) (31 . 33) (30 . 32) (#("-" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -255) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) 256 (254 . 255) (t 26417 27928 246654 536000)) nil (26417 28612 677177 655000) 0 nil])
([nil nil ((45 . 46)) nil (26417 28612 676459 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 71 . 72) (nil fontified nil 46 . 72) (46 . 72) 45) nil (26417 28612 676458 535000) 0 nil])
([nil nil ((198 . 199) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -198) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) 199 (197 . 198) (#("\\" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -197) (undo-tree-id1781 . -1) 198 (196 . 201) (194 . 196) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -194) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (#("o" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -195) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) 196 (189 . 196) (167 . 173) (153 . 167) (152 . 153) (#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -168) (undo-tree-id1790 . -1) 169 (168 . 169) (116 . 117) (114 . 115) (120 . 121) (121 . 122) (160 . 161) (158 . 159) (157 . 158) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -157) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -158) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -159) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -160) (undo-tree-id1797 . -1) 161 (148 . 156) (#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -157) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -158) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -159) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (#("H" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -160) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -161) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -162) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -163) (undo-tree-id1825 . -1) 164 (156 . 164) (149 . 155) (#("l" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -149) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -150) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -151) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) 152 (149 . 152) (148 . 150) (143 . 148) (#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -143) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -144) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -145) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -146) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) 147 (143 . 147) (141 . 143) (139 . 141) (138 . 139) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -122) (undo-tree-id1854 . -1) 123 (119 . 121) (121 . 124) (#("-" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -121) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (#("1" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -122) (undo-tree-id1857 . -1) 123 (117 . 123) (125 . 130) (#(";" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -125) (undo-tree-id1858 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -126) (undo-tree-id1859 . -1) 127 (125 . 127) (118 . 120) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -118) (undo-tree-id1860 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -119) (undo-tree-id1861 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -120) (undo-tree-id1862 . -1) 121 (120 . 126) (116 . 120) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -116) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) 117 (112 . 113) (112 . 114) (112 . 114) (111 . 112) (#("i" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -111) (undo-tree-id1865 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -112) (undo-tree-id1866 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -113) (undo-tree-id1867 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -114) (undo-tree-id1868 . -1) (#("z" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -115) (undo-tree-id1869 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -116) (undo-tree-id1870 . -1) 117 (107 . 117) (#("init" 0 4 (fontified nil)) . -107) (107 . 111) (#("initialize" 0 10 (fontified nil)) . -107) (107 . 117) (#("init" 0 4 (fontified t)) . -107) (undo-tree-id1871 . -4) (undo-tree-id1872 . -4) (undo-tree-id1873 . -4) (undo-tree-id1874 . -4) 111 (105 . 111) (103 . 105) (102 . 103) (87 . 89) (40 . 41) (48 . 51) (31 . 48) (30 . 32) (62 . 64) (58 . 62)) nil (26417 28612 677490 385000) 0 nil])
([nil nil ((#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) 88 (t 26417 28616 349422 45000)) nil (26417 28968 411835 275000) 0 nil] [nil nil ((#("(h : Hist α σ (T-1))" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 2 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 2 10 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 10 11 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 11 12 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 12 13 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 13 15 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 15 16 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 16 17 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 17 18 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 18 20 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 152) (undo-tree-id1766 . -19) (undo-tree-id1767 . -19) (undo-tree-id1768 . -19) (undo-tree-id1769 . -19) (undo-tree-id1770 . -19) (undo-tree-id1771 . -19) (undo-tree-id1772 . -19) (undo-tree-id1773 . -19) (undo-tree-id1774 . -19) (undo-tree-id1775 . -19) (undo-tree-id1776 . -19) (undo-tree-id1777 . -20) (undo-tree-id1778 . -20)) ((152 . 172)) (26417 28612 676365 938000) 0 nil])
([nil nil ((87 . 88)) nil (26417 28968 411833 145000) 0 nil])
nil
([nil nil ((#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) 88) nil (26417 28968 411831 913000) 0 nil])
([nil nil ((87 . 90)) nil (26417 28968 411823 95000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -87) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (#("a" 0 1 (fontified t)) . -88) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (#("t" 0 1 (fontified t)) . -89) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) 90) nil (26417 28968 411820 515000) 0 nil])
([nil nil ((87 . 88)) nil (26417 28968 411793 638000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -82) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#("T" 0 1 (face lsp-face-semhl-variable fontified t)) . -83) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (#(":" 0 1 (fontified t)) . -85) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -87) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (#(")" 0 1 (fontified t)) . -88) (undo-tree-id2628 . 1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) 89) nil (26417 28968 411781 822000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -113) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -114) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -115) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -116) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -117) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -118) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -119) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -120) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -121) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -122) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) 123) nil (26417 28968 411473 268000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -124) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) 125) nil (26417 28968 411458 270000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -181) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -182) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) 183) nil (26417 28968 411454 921000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -147) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -148) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (#("T" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -149) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (#("-" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -150) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -151) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -152) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) 153) nil (26417 28968 411445 397000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -537) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -538) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (#(" " 0 1 (fontified t)) . -539) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (#("L" 0 1 (fontified t)) . -540) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (#("i" 0 1 (fontified t)) . -541) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (#("s" 0 1 (fontified t)) . -542) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (#("t" 0 1 (fontified t)) . -543) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (#("." 0 1 (fontified t)) . -544) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (#("l" 0 1 (fontified t)) . -545) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (#("e" 0 1 (fontified t)) . -546) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (#("n" 0 1 (fontified t)) . -547) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (#("g" 0 1 (fontified t)) . -548) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (#("t" 0 1 (fontified t)) . -549) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (#("h" 0 1 (fontified t)) . -550) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (#(" " 0 1 (fontified t)) . -551) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -552) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (#("." 0 1 (fontified t)) . -553) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("h" 0 1 (fontified t)) . -554) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (#("e" 0 1 (fontified t)) . -555) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (#("a" 0 1 (fontified t)) . -556) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (#("d" 0 1 (fontified t)) . -557) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) 558 (t 26417 28968 455651 672000)) nil (26417 29030 451056 858000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -532) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (#(":" 0 1 (fontified t)) . -533) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (#(" " 0 1 (fontified t)) . -534) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -535) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (#(" " 0 1 (fontified t)) . -536) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) 537) nil (26417 29030 450937 208000) 0 nil])
([nil nil ((518 . 519)) nil (26417 29030 450319 231000) 0 nil])
([nil nil ((519 . 520)) nil (26417 29030 450318 639000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -520) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) 521) nil (26417 29030 450317 660000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -520) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (#(" " 0 1 (fontified t)) . -521) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (#(":" 0 1 (fontified t)) . -522) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) 523) nil (26417 29030 450314 65000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -529) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) 530) nil (26417 29030 450307 696000) 0 nil])
([nil nil ((529 . 533)) nil (26417 29030 450282 410000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -532) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) 533) nil (26417 29030 450281 371000) 0 nil])
([nil nil ((532 . 533)) nil (26417 29030 449887 19000) 0 nil])
([nil nil ((533 . 534)) nil (26417 29030 449886 567000) 0 nil])
([nil nil ((534 . 536)) nil (26417 29030 449886 98000) 0 nil])
([nil nil ((536 . 538)) nil (26417 29030 449885 641000) 0 nil])
([nil nil ((538 . 549)) nil (26417 29030 449885 174000) 0 nil])
([nil nil ((549 . 550)) nil (26417 29030 449884 399000) 0 nil])
([nil nil ((550 . 552)) nil (26417 29030 449883 777000) 0 nil])
([nil nil ((552 . 554)) nil (26417 29030 449883 295000) 0 nil])
([nil nil ((554 . 555)) nil (26417 29030 449882 789000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -554) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) 555) nil (26417 29030 449882 141000) 0 nil])
([nil nil ((554 . 560)) nil (26417 29030 449880 207000) 0 nil])
([nil nil ((#("s" 0 1 (face lsp-face-semhl-variable fontified t)) . -558) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (#(" " 0 1 (fontified t)) . -559) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) 560) nil (26417 29030 449878 837000) 0 nil])
([nil nil ((558 . 561)) nil (26417 29030 449868 900000) 0 nil])
([nil nil ((561 . 577)) nil (26417 29030 449868 302000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -572) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (#("i" 0 1 (fontified t)) . -573) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (#("s" 0 1 (fontified t)) . -574) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (#("t" 0 1 (fontified t)) . -575) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (#("." 0 1 (fontified t)) . -576) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) 577) nil (26417 29030 449864 889000) 0 nil])
([nil nil ((572 . 573)) nil (26417 29030 449821 67000) 0 nil])
([nil nil ((573 . 580)) nil (26417 29030 449816 26000) 0 nil])
([nil nil ((#("s" 0 1 (face lsp-face-semhl-variable fontified t)) . -543) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) 544 (t 26417 29030 495569 983000)) nil (26417 29036 488832 798000) 0 nil])
([nil nil ((543 . 544)) nil (26417 29036 488816 554000) 0 nil])
([nil nil ((177 . 179) (t 26417 29036 495562 30000)) nil (26417 29064 206267 18000) 0 nil])
([nil nil ((#("
/--
Represents the history of the execution.

structure Hist (α σ : Type) : Type where
  mk ::
  last : σ                 -- last state in the history
  head : List (α × σ)      -- possibly empty list of states and actions
-/
" 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 61 (face font-lock-comment-face fontified t) 61 63 (face font-lock-comment-face fontified t) 63 64 (face font-lock-comment-face fontified t) 64 65 (face font-lock-comment-face fontified t) 65 66 (face font-lock-comment-face fontified t) 66 69 (face font-lock-comment-face fontified t) 69 73 (face font-lock-comment-face fontified t) 73 77 (face font-lock-comment-face fontified t) 77 81 (face font-lock-comment-face fontified t) 81 82 (face font-lock-comment-face fontified t) 82 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 96 (face font-lock-comment-face fontified t) 96 105 (face font-lock-comment-face fontified t) 105 106 (face font-lock-comment-face fontified t) 106 123 (face font-lock-comment-face fontified t) 123 126 (face font-lock-comment-face fontified t) 126 151 (face font-lock-comment-face fontified t) 151 152 (face font-lock-comment-face fontified t) 152 167 (face font-lock-comment-face fontified t) 167 168 (face font-lock-comment-face fontified t) 168 169 (face font-lock-comment-face fontified t) 169 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 172 (face font-lock-comment-face fontified t) 172 179 (face font-lock-comment-face fontified t) 179 182 (face font-lock-comment-face fontified t) 182 223 (face font-lock-comment-face fontified t) 223 224 (face font-lock-comment-face fontified t) 224 225 (face font-lock-comment-delimiter-face fontified t) 225 226 (face font-lock-comment-delimiter-face fontified t) 226 227 (fontified t)) . 179) (undo-tree-id3142 . -224) (undo-tree-id3143 . -163) (undo-tree-id3144 . -1) (undo-tree-id3145 . 227) (undo-tree-id3146 . -224) (undo-tree-id3147 . -226) (undo-tree-id3148 . -87) (undo-tree-id3149 . -224) (undo-tree-id3150 . -1) (undo-tree-id3151 . -224) (undo-tree-id3152 . -224) (undo-tree-id3153 . -227) 403) nil (26417 29064 206264 844000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 178) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1)) nil (26417 29064 206253 466000) 0 nil])
([nil nil ((177 . 178)) nil (26417 29064 206225 810000) 0 nil])
([nil nil ((178 . 181)) nil (26417 29064 206224 205000) 0 nil])
([nil nil ((181 . 191)) nil (26417 29064 206218 696000) 0 nil])
([nil nil ((#("abbrev HistB 
" 0 6 (face lsp-face-semhl-keyword fontified t) 6 13 (fontified t) 13 14 (fontified t)) . 178) (undo-tree-id3405 . -13) (undo-tree-id3406 . -14) (undo-tree-id3407 . -13) (undo-tree-id3408 . -14) (undo-tree-id3409 . -14) (undo-tree-id3410 . -14) (undo-tree-id3411 . -14) (undo-tree-id3412 . -13) (undo-tree-id3413 . -7) (undo-tree-id3414 . -12) (undo-tree-id3415 . -14) (undo-tree-id3416 . -14) (undo-tree-id3417 . -13) (undo-tree-id3418 . -13) (undo-tree-id3419 . -13) (undo-tree-id3420 . -13) (undo-tree-id3421 . -13) (undo-tree-id3422 . -13) (t 26417 29064 248858 447000)) nil (26418 4991 873684 187000) 0 nil])
([nil nil ((#("(s : σ)" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 2 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 2 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 3 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 5 6 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 6 7 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 105) (undo-tree-id3401 . -6) (undo-tree-id3402 . -6) (undo-tree-id3403 . -6) (undo-tree-id3404 . -6) 111) nil (26418 4991 873675 904000) 0 nil])
([nil nil ((203 . 208) (#("₀" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -203) (undo-tree-id3178 . -1) 204 (#("₀" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -144) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) 145 (94 . 98) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -94) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -95) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -96) (undo-tree-id3185 . -1) 97 (93 . 97) (116 . 118) (115 . 116) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -115) (undo-tree-id3186 . -1) 116 (114 . 115) (93 . 114) (80 . 93) (#("I" 0 1 (fontified t face font-lock-comment-face)) . -80) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -81) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -82) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -83) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -84) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -85) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -86) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -87) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -88) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -89) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -90) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -91) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) 92 (#("t" 0 1 (fontified t face font-lock-comment-face)) . -92) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -93) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -94) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -95) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -96) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -97) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -98) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -99) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -100) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -101) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -102) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -103) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -104) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -105) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -106) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -107) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -108) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -109) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -110) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -111) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -112) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) 113 (#("i" 0 1 (fontified t face font-lock-comment-face)) . -113) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -114) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -115) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -116) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -117) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -118) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -119) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -120) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -121) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -122) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -123) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -124) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -125) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -126) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -127) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -128) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -129) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -130) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -131) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (#("x" 0 1 (face font-lock-comment-face fontified t)) . -132) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -133) (undo-tree-id3346 . -1) 134 (123 . 134) (122 . 123) (111 . 123) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -111) (undo-tree-id3347 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -112) (undo-tree-id3348 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -113) (undo-tree-id3349 . -1) 114 (112 . 114) (107 . 112) (86 . 107) (65 . 86) (58 . 65) (57 . 58) (58 . 60) (57 . 58) (54 . 57) (53 . 54) (#("i" 0 1 (face lsp-face-semhl-variable fontified t)) . -82) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (#("x" 0 1 (face lsp-face-semhl-variable fontified t)) . -83) (undo-tree-id3352 . -1) 84 (82 . 84) (81 . 82) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t)) . -81) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -82) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (#("x" 0 1 (face lsp-face-semhl-keyword fontified t)) . -83) (undo-tree-id3359 . -1) 84 (97 . 98) (93 . 94) (#("s" 0 1 (fontified t)) . -93) (undo-tree-id3360 . -1) 94 (96 . 97) (#("a" 0 1 (fontified t)) . -97) (undo-tree-id3361 . -1) 98 (97 . 98) (93 . 95) (93 . 94) (92 . 95) (#("\\" 0 1 (fontified t)) . -92) (undo-tree-id3362 . -1) 93 (#("s" 0 1 (fontified t)) . -93) (undo-tree-id3363 . -1) (#("
" 0 1 (fontified t)) . -94) (undo-tree-id3364 . -1) 95 (94 . 95) (78 . 94) (77 . 80) (108 . 109) (#("\\" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -108) (undo-tree-id3365 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -109) (undo-tree-id3366 . -1) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -110) (undo-tree-id3367 . -1) 111 (108 . 111) (70 . 72) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -70) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) 71 (106 . 107) (#("α" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -106) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -107) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (#("σ" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -108) (undo-tree-id3374 . -1) 109 (71 . 73) (69 . 73) (#("(" 0 1 (fontified t)) . -69) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -70) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (#(" " 0 1 (fontified t)) . -71) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -72) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (#(" " 0 1 (fontified t)) . -73) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (#(":" 0 1 (fontified t)) . -74) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (#(" " 0 1 (fontified t)) . -75) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (#("T" 0 1 (face font-lock-type-face fontified t)) . -76) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (#("y" 0 1 (face font-lock-type-face fontified t)) . -77) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (#("p" 0 1 (face font-lock-type-face fontified t)) . -78) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -79) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (#(")" 0 1 (fontified t)) . -80) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (#(" " 0 1 (fontified t)) . -81) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) 82) nil (26418 4991 873660 763000) 0 nil])
([nil nil ((204 . 208) (#("pref" 0 4 (fontified nil)) . -204) (204 . 208) (#("pref" 0 4 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -204) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) 208) nil (26418 4991 873526 727000) 0 nil])
([nil nil ((#("α" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -228) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -229) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -230) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) 231 (#(" " 0 1 (fontified t)) . -169) (undo-tree-id3170 . -1) 170 (257 . 263) (#("α" 0 1 (fontified t face lsp-face-semhl-variable match-data (0 4 0 1 1 2 2 3 3 4))) . -257) (undo-tree-id3171 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -258) (undo-tree-id3172 . -1) (#("σ" 0 1 (fontified t face lsp-face-semhl-variable match-data (0 4 0 1 1 2 2 3 3 4))) . -259) (undo-tree-id3173 . -1) 260) nil (26418 4991 873522 943000) 0 nil])
([nil nil ((#("s " 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 2 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 201) (undo-tree-id3159 . -1) (undo-tree-id3160 . 1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) 202) nil (26418 4991 873516 832000) 0 nil])
([nil nil ((nil rear-nonsticky nil 207 . 208) (nil fontified nil 206 . 208) (206 . 208) 205) nil (26418 4991 873513 944000) 0 nil])
([nil nil ((#("(s: σ)" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 2 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 2 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 3 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 4 5 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 5 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 142) (undo-tree-id3156 . -5) (undo-tree-id3157 . -5) (undo-tree-id3158 . -5)) nil (26418 4991 873513 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 170 . 171) (nil fontified nil 165 . 171) (165 . 171) 164) nil (26418 4991 873510 886000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 142) (undo-tree-id3155 . 1)) nil (26418 4991 873509 803000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 142) (undo-tree-id3154 . 1)) nil (26418 4991 873507 208000) 0 nil])
([nil nil ((142 . 143)) nil (26418 4991 873495 889000) 0 nil])
([nil nil ((170 . 171) (t 26418 4991 887655 777000)) nil (26418 5220 700958 402000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -253) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -254) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -255) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -256) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -257) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -258) (undo-tree-id7310 . 1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) 259) nil (26418 5220 700956 886000) 0 nil])
([nil nil ((253 . 255)) nil (26418 5220 700944 861000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -254) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) 255) nil (26418 5220 700944 227000) 0 nil])
([nil nil ((254 . 259)) nil (26418 5220 700940 540000) 0 nil])
([nil nil ((228 . 233)) nil (26418 5220 700940 119000) 0 nil])
([nil nil ((233 . 235)) nil (26418 5220 700939 653000) 0 nil])
([nil nil ((218 . 227)) nil (26418 5220 700939 192000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -254) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -255) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -256) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -257) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -258) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -259) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -260) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) 261) nil (26418 5220 700937 763000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -253) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) 254) nil (26418 5220 700925 874000) 0 nil])
([nil nil ((211 . 213)) nil (26418 5220 700918 846000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-delimiter-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -211) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (#("-" 0 1 (face font-lock-comment-delimiter-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -212) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) 213) nil (26418 5220 700917 727000) 0 nil])
([nil nil ((#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -219) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (#("'" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -220) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -221) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -222) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -223) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -224) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) 225) nil (26418 5220 700903 234000) 0 nil])
([nil nil ((219 . 224)) nil (26418 5220 700835 92000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -223) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) 224) nil (26418 5220 700834 512000) 0 nil])
([nil nil ((223 . 226)) nil (26418 5220 700831 734000) 0 nil])
([nil nil ((#("L" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -224) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -225) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) 226) nil (26418 5220 700830 374000) 0 nil])
([nil nil ((224 . 235)) nil (26418 5220 700817 362000) 0 nil])
([nil nil ((235 . 237)) nil (26418 5220 700816 958000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -236) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) 237) nil (26418 5220 700816 435000) 0 nil])
([nil nil ((236 . 238)) nil (26418 5220 700815 82000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -240) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -241) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -242) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -243) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -244) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (#("H" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -245) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -246) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -247) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -248) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -249) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -250) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -251) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -252) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (#("f" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -253) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -254) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -255) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (#("'" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -256) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -257) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) 258) nil (26418 5220 700788 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -239) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) 240) nil (26418 5220 700230 941000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -240) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -241) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -242) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -243) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -244) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -245) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -246) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -247) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) 248) nil (26418 5220 700176 264000) 0 nil])
([nil nil ((165 . 166)) nil (26418 5220 700100 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -165) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) 166) nil (26418 5220 700099 797000) 0 nil])
([nil nil ((166 . 167)) nil (26418 5220 700095 901000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -121) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) 122) nil (26418 5220 700095 318000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -121) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) 122) nil (26418 5220 700093 29000) 0 nil])
([nil nil ((#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -125) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (#("n" 0 1 (face lsp-face-semhl-keyword fontified t)) . -126) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (#("d" 0 1 (face lsp-face-semhl-keyword fontified t)) . -127) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -128) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -129) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -130) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -131) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (#("v" 0 1 (face lsp-face-semhl-keyword fontified t)) . -132) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -133) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) 134) nil (26418 5220 700086 634000) 0 nil])
([nil nil ((125 . 134)) nil (26418 5220 700021 852000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -186) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -187) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -188) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -189) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -190) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -191) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -192) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -193) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -194) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (#("H" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -195) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -196) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -197) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -198) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -199) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -200) (undo-tree-id5181 . 1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -201) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -202) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -203) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -204) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (#("s" 0 1 (fontified t)) . -205) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (#(" " 0 1 (fontified t rear-nonsticky t)) . -206) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) 207) nil (26418 5220 700015 600000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -185) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) 186) nil (26418 5220 699921 686000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -191) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -192) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -193) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -194) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -195) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) 196) nil (26418 5220 699909 270000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -185) (undo-tree-id4149 . 1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -186) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -187) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (#("|" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -188) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -189) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -190) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) 191) nil (26418 5220 699773 756000) 0 nil])
([nil nil ((183 . 193) (#("  " 0 2 (fontified t)) . 183) (undo-tree-id3942 . -2) (undo-tree-id3943 . -2) (undo-tree-id3944 . -2) (undo-tree-id3945 . -2) (undo-tree-id3946 . -2) (undo-tree-id3947 . -2) (undo-tree-id3948 . -2) (undo-tree-id3949 . -2) (undo-tree-id3950 . -2) (undo-tree-id3951 . -2) (undo-tree-id3952 . -2) (undo-tree-id3953 . -2) (undo-tree-id3954 . -2) (undo-tree-id3955 . -2) (undo-tree-id3956 . -2) (undo-tree-id3957 . -2) (undo-tree-id3958 . -2) (undo-tree-id3959 . -2) (undo-tree-id3960 . -2) (undo-tree-id3961 . -2) (undo-tree-id3962 . -2) (undo-tree-id3963 . -2) (undo-tree-id3964 . -2) (undo-tree-id3965 . -2) (undo-tree-id3966 . -2) (undo-tree-id3967 . -2) (undo-tree-id3968 . -2) (undo-tree-id3969 . -2) (undo-tree-id3970 . -2) (undo-tree-id3971 . -2) (undo-tree-id3972 . -2) (undo-tree-id3973 . -2) (undo-tree-id3974 . -2) (undo-tree-id3975 . -2) (undo-tree-id3976 . -2) (undo-tree-id3977 . -2) (undo-tree-id3978 . -2) (undo-tree-id3979 . -2) (undo-tree-id3980 . -2) (undo-tree-id3981 . -2) (undo-tree-id3982 . -2) (undo-tree-id3983 . -2) (undo-tree-id3984 . -2) (undo-tree-id3985 . -2) (undo-tree-id3986 . -2) (undo-tree-id3987 . -2) (undo-tree-id3988 . -2) (undo-tree-id3989 . -2) (undo-tree-id3990 . -2) (undo-tree-id3991 . -2) (undo-tree-id3992 . -2) (undo-tree-id3993 . -2) (undo-tree-id3994 . -2) (undo-tree-id3995 . -2) (undo-tree-id3996 . -2) (undo-tree-id3997 . -2) (undo-tree-id3998 . -2) (undo-tree-id3999 . -2) (undo-tree-id4000 . -2) (undo-tree-id4001 . -2) (undo-tree-id4002 . -2) (undo-tree-id4003 . -2) (undo-tree-id4004 . -2) (undo-tree-id4005 . -2) (undo-tree-id4006 . -2) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . -2) (undo-tree-id4014 . -2) (undo-tree-id4015 . -2) (undo-tree-id4016 . -2) (undo-tree-id4017 . -2) (undo-tree-id4018 . -2) (undo-tree-id4019 . -2) (undo-tree-id4020 . -2) (undo-tree-id4021 . -2) (undo-tree-id4022 . -2) (undo-tree-id4023 . -2) (undo-tree-id4024 . -2) (undo-tree-id4025 . -2) (undo-tree-id4026 . -2) (undo-tree-id4027 . -2) (undo-tree-id4028 . -2) (undo-tree-id4029 . -2) (undo-tree-id4030 . -2) (undo-tree-id4031 . -2) (undo-tree-id4032 . -2) (undo-tree-id4033 . -2) (undo-tree-id4034 . -2) (undo-tree-id4035 . -2) (undo-tree-id4036 . -2) (undo-tree-id4037 . -2) (undo-tree-id4038 . -2) (undo-tree-id4039 . -2) (undo-tree-id4040 . -2) (undo-tree-id4041 . -2) (undo-tree-id4042 . -2) (undo-tree-id4043 . -2) (undo-tree-id4044 . -2) (undo-tree-id4045 . -2) (undo-tree-id4046 . -2) (undo-tree-id4047 . -2) (undo-tree-id4048 . -2) (undo-tree-id4049 . -2) (undo-tree-id4050 . -2) (undo-tree-id4051 . -2) (undo-tree-id4052 . -2) (undo-tree-id4053 . -2) (undo-tree-id4054 . -2) (undo-tree-id4055 . -2) (undo-tree-id4056 . -2) (undo-tree-id4057 . -2) (undo-tree-id4058 . -2) (undo-tree-id4059 . -2) (undo-tree-id4060 . -2) (undo-tree-id4061 . -2) (undo-tree-id4062 . -2) (undo-tree-id4063 . -2) (undo-tree-id4064 . -2) (undo-tree-id4065 . -2) (undo-tree-id4066 . -2) (undo-tree-id4067 . -2) (undo-tree-id4068 . -2) (undo-tree-id4069 . -2) (undo-tree-id4070 . -2) (undo-tree-id4071 . -2) (undo-tree-id4072 . -2) (undo-tree-id4073 . -2) (undo-tree-id4074 . -2) (undo-tree-id4075 . -2) (undo-tree-id4076 . -2) (undo-tree-id4077 . -2) (undo-tree-id4078 . -2) (undo-tree-id4079 . -2) (undo-tree-id4080 . -2) (undo-tree-id4081 . -2) (undo-tree-id4082 . -2) (undo-tree-id4083 . -2) (undo-tree-id4084 . -2) (undo-tree-id4085 . -2) (undo-tree-id4086 . -2) (undo-tree-id4087 . -2) (undo-tree-id4088 . -2) (undo-tree-id4089 . -2) (undo-tree-id4090 . -2) (undo-tree-id4091 . -2) (undo-tree-id4092 . -2) (undo-tree-id4093 . -2) (undo-tree-id4094 . -2) (undo-tree-id4095 . -2) (undo-tree-id4096 . -2) (undo-tree-id4097 . -2) (undo-tree-id4098 . -2) (undo-tree-id4099 . -2) (undo-tree-id4100 . -2) (undo-tree-id4101 . -2) (undo-tree-id4102 . -2) (undo-tree-id4103 . -2) (undo-tree-id4104 . -2) (undo-tree-id4105 . -2) (undo-tree-id4106 . -2) (undo-tree-id4107 . -2) (undo-tree-id4108 . -2) (undo-tree-id4109 . -2) (undo-tree-id4110 . -2) (undo-tree-id4111 . -2) (undo-tree-id4112 . -2) (undo-tree-id4113 . -2) (undo-tree-id4114 . -2) (undo-tree-id4115 . -2) (undo-tree-id4116 . -2) (undo-tree-id4117 . -2) (undo-tree-id4118 . -2) (undo-tree-id4119 . -2) (undo-tree-id4120 . -2) (undo-tree-id4121 . -2) (undo-tree-id4122 . -2) (undo-tree-id4123 . -2) (undo-tree-id4124 . -2) (undo-tree-id4125 . -2) (undo-tree-id4126 . -2) (undo-tree-id4127 . -2) (undo-tree-id4128 . -2) (undo-tree-id4129 . -2) (undo-tree-id4130 . -2) (undo-tree-id4131 . -2) (undo-tree-id4132 . -2) (undo-tree-id4133 . -2) (undo-tree-id4134 . -2) (undo-tree-id4135 . -2) (undo-tree-id4136 . -2) (undo-tree-id4137 . -2) (undo-tree-id4138 . -2) (undo-tree-id4139 . -2) (undo-tree-id4140 . -2) (undo-tree-id4141 . -2) (undo-tree-id4142 . -2) (undo-tree-id4143 . -2) (undo-tree-id4144 . -2) (undo-tree-id4145 . -2) (undo-tree-id4146 . -2) (undo-tree-id4147 . -2) (undo-tree-id4148 . -2) 185) nil (26418 5220 699530 93000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -188) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (#(" " 0 1 (fontified t)) . -189) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (#(" " 0 1 (fontified t)) . -190) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (#(" " 0 1 (fontified t)) . -191) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (#(" " 0 1 (fontified t)) . -192) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) 193) nil (26418 5220 699440 566000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -207) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -208) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -209) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -210) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (#("H" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -211) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -212) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -213) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -214) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -215) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -216) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (#("r" 0 1 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -217) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -218) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -219) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -220) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -221) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) 222) nil (26418 5220 699410 963000) 0 nil])
([nil nil ((61 . 62) (t 26418 5220 717056 101000)) nil (26418 5255 265414 92000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -61) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) 62) nil (26418 5255 265412 834000) 0 nil])
([nil nil ((121 . 123)) nil (26418 5255 265250 411000) 0 nil])
([nil nil ((123 . 144)) nil (26418 5255 265249 710000) 0 nil])
([nil nil ((144 . 156)) nil (26418 5255 265249 51000) 0 nil])
([nil nil ((156 . 157)) nil (26418 5255 265248 274000) 0 nil])
([nil nil ((157 . 177)) nil (26418 5255 265247 589000) 0 nil])
([nil nil ((177 . 178)) nil (26418 5255 265247 87000) 0 nil])
([nil nil ((178 . 182)) nil (26418 5255 265246 637000) 0 nil])
([nil nil ((182 . 183)) nil (26418 5255 265245 993000) 0 nil])
([nil nil ((183 . 196)) nil (26418 5255 265245 455000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -195) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) 196) nil (26418 5255 265244 651000) 0 nil])
([nil nil ((195 . 199)) nil (26418 5255 265242 521000) 0 nil])
([nil nil ((199 . 206)) nil (26418 5255 265241 969000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-comment-face fontified t)) . -205) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) 206) nil (26418 5255 265240 951000) 0 nil])
([nil nil ((205 . 225)) nil (26418 5255 265238 964000) 0 nil])
([nil nil ((225 . 226)) nil (26418 5255 265238 413000) 0 nil])
([nil nil ((226 . 230)) nil (26418 5255 265237 756000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -227) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -228) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -229) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) 230) nil (26418 5255 265235 957000) 0 nil])
([nil nil ((227 . 237)) nil (26418 5255 265220 648000) 0 nil])
([nil nil ((237 . 241)) nil (26418 5255 265216 352000) 0 nil])
([nil nil ((329 . 331) (t 26418 5255 310312 142000)) nil (26418 5327 507475 5000) 0 nil])
([nil nil ((330 . 343)) nil (26418 5327 507474 430000) 0 nil])
([nil nil ((340 . 343) (#("MDP" 0 3 (fontified nil)) . -340) (340 . 343) (#("MDP" 0 3 (face font-lock-function-name-face fontified t)) . -340) (undo-tree-id7357 . -3) (undo-tree-id7358 . -3) (undo-tree-id7359 . -3) (undo-tree-id7360 . -3) (undo-tree-id7361 . -3) (undo-tree-id7362 . -3) (undo-tree-id7363 . -3) (undo-tree-id7364 . -3) 343) nil (26418 5327 507473 513000) 0 nil])
([nil nil ((343 . 356)) nil (26418 5327 507468 893000) 0 nil])
([nil nil ((356 . 357)) nil (26418 5327 507468 560000) 0 nil])
([nil nil ((357 . 359)) nil (26418 5327 507468 201000) 0 nil])
([nil nil ((359 . 366)) nil (26418 5327 507467 843000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -365) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) 366) nil (26418 5327 507466 994000) 0 nil])
([nil nil ((365 . 367)) nil (26418 5327 507462 474000) 0 nil])
([nil nil ((367 . 374)) nil (26418 5327 507462 60000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -373) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) 374) nil (26418 5327 507460 661000) 0 nil])
([nil nil ((373 . 376)) nil (26418 5327 507447 985000) 0 nil])
([nil nil ((29 . 30)) nil (26418 5327 507447 464000) 0 nil])
([nil nil ((30 . 51)) nil (26418 5327 507446 478000) 0 nil])
([nil nil ((51 . 59)) nil (26418 5327 507442 68000) 0 nil])
([nil nil ((442 . 443) (#("R" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -443) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -444) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) 445 (440 . 445) (#("NNR" 0 3 (fontified nil)) . -440) (440 . 443) (#("NNRat" 0 5 (fontified nil)) . -440) (440 . 445) (#("NNR" 0 3 (fontified t match-data (0 3 0 1 1 2 2 3))) . -440) (undo-tree-id8261 . -3) (undo-tree-id8262 . -3) (undo-tree-id8263 . -3) (undo-tree-id8264 . -3) (undo-tree-id8265 . -3) (undo-tree-id8266 . -3) 443 (440 . 446) (#("ℝ" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -440) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (#("≥" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -441) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) 443 (440 . 443) (82 . 94) (#("NNReal" 0 6 (fontified nil)) . -82) (82 . 88) (#("NNReal.Basic" 0 12 (fontified nil)) . -82) (82 . 94) (#("NNReal" 0 6 (fontified t)) . -82) (undo-tree-id8335 . -6) (undo-tree-id8336 . -6) (undo-tree-id8337 . -6) (undo-tree-id8338 . -6) (undo-tree-id8339 . -6) (undo-tree-id8340 . -6) (undo-tree-id8341 . -6) 88 (77 . 88) (#("F" 0 1 (fontified t)) . -77) (undo-tree-id8342 . -1) 78 (62 . 78) (61 . 62) (#("ℝ" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -407) (undo-tree-id8343 . -1) 408 (417 . 428) (#("α" 0 1 (fontified t)) . -417) (undo-tree-id8344 . -1) 418 (411 . 418) (409 . 411) (54 . 60) (#(" " 0 1 (fontified t)) . -54) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (#(" " 0 1 (fontified t)) . -55) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) 56 (#(" " 0 1 (fontified t)) . -57) (undo-tree-id8349 . -1) (#(" " 0 1 (fontified t)) . -58) (undo-tree-id8350 . -1) (#(" " 0 1 (fontified t)) . -59) (undo-tree-id8351 . -1) (#(" " 0 1 (fontified t)) . -60) (undo-tree-id8352 . -1) (#(" " 0 1 (fontified t)) . -61) (undo-tree-id8353 . -1) 62 (54 . 62) (#("." 0 1 (fontified t)) . -54) (undo-tree-id8354 . -1) (#("D" 0 1 (fontified t)) . -55) (undo-tree-id8355 . -1) (#("e" 0 1 (fontified t)) . -56) (undo-tree-id8356 . -1) (#("f" 0 1 (fontified t)) . -57) (undo-tree-id8357 . -1) (#("s" 0 1 (fontified t)) . -58) (undo-tree-id8358 . -1) 59 (t 26418 5327 516821 727000)) nil (26418 7083 132231 399000) 0 nil])
([nil nil ((395 . 406) (394 . 395) 394) nil (26418 7126 383262 517000) 0 nil] [nil nil ((#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -439) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -440) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (#("R" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -441) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -443) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (#("l" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -444) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -445) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (#("-" 0 1 (face font-lock-comment-delimiter-face fontified t match-data (0 3 0 1 1 2 2 3))) . -446) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (#("-" 0 1 (face font-lock-comment-delimiter-face fontified t match-data (0 3 0 1 1 2 2 3))) . -447) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t match-data (0 3 0 1 1 2 2 3))) . -448) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) 449 (89 . 93) (#("B" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -89) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -90) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -91) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -92) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -93) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) 94 (409 . 415) (434 . 444) (#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -409) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -410) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (#("T" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -411) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (#("y" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -412) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (#("p" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -413) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (#("e" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -414) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) 415 (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -415) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -416) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) 417 (415 . 417) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -439) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -440) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -441) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (#("R" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -443) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -444) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (#("l" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -445) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) 446 (449 . 450) (#("₀" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -449) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) 450 (449 . 450) (#("0" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -449) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) 450 (446 . 450) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -444) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) 445 (444 . 445)) ((#(" " 0 1 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 444) (444 . 445) (#(" ℝ≥0" 0 1 (fontified nil match-data (0 3 0 1 1 2 2 3)) 1 2 (face font-lock-constant-face fontified nil match-data (0 3 0 1 1 2 2 3)) 2 3 (face font-lock-constant-face fontified nil match-data (0 3 0 1 1 2 2 3)) 3 4 (face font-lock-constant-face fontified nil match-data (0 3 0 1 1 2 2 3))) . 446) (undo-tree-id8359 . -1) (undo-tree-id8360 . 3) (undo-tree-id8361 . -4) (undo-tree-id8362 . -4) (undo-tree-id8363 . -4) (undo-tree-id8364 . -4) (undo-tree-id8365 . -4) (undo-tree-id8366 . -4) (undo-tree-id8367 . -3) (undo-tree-id8368 . -3) (undo-tree-id8369 . -3) (undo-tree-id8370 . -3) (undo-tree-id8371 . -3) (undo-tree-id8372 . -3) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (449 . 450) (#("₀" 0 1 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 449) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (449 . 450) (#("0" 0 1 (face font-lock-constant-face fontified nil match-data (0 3 0 1 1 2 2 3))) . 449) (439 . 446) (#(" 1" 0 1 (fontified nil match-data (0 3 0 1 1 2 2 3)) 1 2 (face font-lock-constant-face fontified nil match-data (0 3 0 1 1 2 2 3))) . 415) (undo-tree-id8423 . -2) (undo-tree-id8424 . -2) (undo-tree-id8425 . -2) (undo-tree-id8426 . -2) (undo-tree-id8427 . -2) (undo-tree-id8428 . -2) (undo-tree-id8429 . -2) (undo-tree-id8430 . -2) (undo-tree-id8431 . -2) (undo-tree-id8432 . -2) (409 . 417) (#("NNReal -- " 0 1 (fontified nil match-data (0 3 0 1 1 2 2 3)) 1 2 (fontified nil match-data (0 3 0 1 1 2 2 3)) 2 3 (fontified nil match-data (0 3 0 1 1 2 2 3)) 3 4 (fontified nil match-data (0 3 0 1 1 2 2 3)) 4 5 (fontified nil match-data (0 3 0 1 1 2 2 3)) 5 6 (fontified nil match-data (0 3 0 1 1 2 2 3)) 6 7 (fontified nil match-data (0 3 0 1 1 2 2 3)) 7 8 (face font-lock-comment-delimiter-face fontified nil match-data (0 3 0 1 1 2 2 3)) 8 9 (face font-lock-comment-delimiter-face fontified nil match-data (0 3 0 1 1 2 2 3)) 9 10 (face font-lock-comment-delimiter-face fontified nil match-data (0 3 0 1 1 2 2 3))) . 434) (undo-tree-id8433 . -2) (undo-tree-id8434 . -7) (undo-tree-id8435 . -7) (undo-tree-id8436 . -7) (undo-tree-id8437 . -7) (undo-tree-id8438 . -7) (undo-tree-id8439 . -7) (undo-tree-id8440 . -7) (undo-tree-id8441 . -7) (undo-tree-id8442 . -8) (undo-tree-id8443 . -8) (undo-tree-id8444 . -8) (undo-tree-id8445 . -8) (undo-tree-id8446 . -8) (undo-tree-id8447 . -8) (undo-tree-id8448 . -2) (undo-tree-id8449 . -2) (undo-tree-id8450 . -2) (undo-tree-id8451 . -2) (undo-tree-id8452 . -2) (undo-tree-id8453 . -2) (undo-tree-id8454 . -2) (undo-tree-id8455 . -2) (undo-tree-id8456 . -2) (undo-tree-id8457 . -2) (undo-tree-id8458 . -2) (undo-tree-id8459 . -2) (undo-tree-id8460 . -2) (undo-tree-id8461 . -2) (undo-tree-id8462 . -2) (undo-tree-id8463 . -2) (undo-tree-id8464 . -2) (undo-tree-id8465 . -2) (undo-tree-id8466 . -2) (undo-tree-id8467 . -2) (undo-tree-id8468 . -2) (undo-tree-id8469 . -2) (undo-tree-id8470 . -2) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (undo-tree-id8474 . -2) (undo-tree-id8475 . -2) (undo-tree-id8476 . -2) (#(": Type" 0 2 (fontified t match-data (0 3 0 1 1 2 2 3)) 2 6 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . 409) (89 . 94) (#("Defs" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 89) (439 . 449)) (26418 7083 128710 118000) 0 nil])
([nil nil ((407 . 408) 417) nil (26418 7126 383261 37000) 0 nil])
nil
([nil nil ((406 . 426) (453 . 456) (#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -453) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (#("N" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -454) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (#("R" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -455) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -456) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -457) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (#("l" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -458) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) 459) nil (26418 7126 383237 277000) 0 nil])
([nil nil ((496 . 497) (t 26418 7126 427858 10000)) nil (26418 7154 548997 21000) 0 nil])
([nil nil ((497 . 499)) nil (26418 7154 548996 488000) 0 nil])
([nil nil ((499 . 504)) nil (26418 7154 548996 34000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -503) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) 504) nil (26418 7154 548995 478000) 0 nil])
([nil nil ((503 . 506)) nil (26418 7154 548991 835000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -504) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (#(" " 0 1 (fontified t)) . -505) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) 506) nil (26418 7154 548990 754000) 0 nil])
([nil nil ((504 . 506)) nil (26418 7154 548980 105000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -504) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t)) . -505) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) 506) nil (26418 7154 548979 315000) 0 nil])
([nil nil ((504 . 507)) nil (26418 7154 548971 511000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -499) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (#("n" 0 1 (fontified t)) . -500) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (#("i" 0 1 (fontified t)) . -501) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (#("t" 0 1 (fontified t)) . -502) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (#(" " 0 1 (fontified t)) . -503) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) 504) nil (26418 7154 548968 351000) 0 nil])
([nil nil ((499 . 500)) nil (26418 7154 548914 773000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -499) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) 500) nil (26418 7154 548913 632000) 0 nil])
([nil nil ((499 . 501)) nil (26418 7154 548910 95000) 0 nil])
([nil nil ((501 . 502)) nil (26418 7154 548909 715000) 0 nil])
([nil nil ((481 . 482)) nil (26418 7154 548909 305000) 0 nil])
([nil nil ((459 . 460)) nil (26418 7154 548908 834000) 0 nil])
([nil nil ((504 . 505)) nil (26418 7154 548907 929000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -504) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) 505) nil (26418 7154 548904 435000) 0 nil])
([nil nil ((508 . 511) (t 26418 7154 594507 101000)) nil (26418 10564 58311 329000) 0 nil])
([nil nil ((510 . 520)) nil (26418 10564 58310 824000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -518) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (#("b" 0 1 (face font-lock-function-name-face fontified t)) . -519) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) 520) nil (26418 10564 58310 145000) 0 nil])
([nil nil ((518 . 522)) nil (26418 10564 58306 289000) 0 nil])
([nil nil ((522 . 529)) nil (26418 10564 58305 916000) 0 nil])
([nil nil ((521 . 525)) nil (26418 10564 58305 552000) 0 nil])
([nil nil ((521 . 528) (#("χ" 0 1 (fontified t)) . -521) (undo-tree-id9341 . -1) (#("a" 0 1 (fontified t)) . -522) (undo-tree-id9342 . -1) (#("l" 0 1 (fontified t)) . -523) (undo-tree-id9343 . -1) (#("i" 0 1 (fontified t)) . -524) (undo-tree-id9344 . -1) 525) nil (26418 10564 58304 726000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -520) (undo-tree-id9333 . -1) (#("μ" 0 1 (fontified t)) . -521) (undo-tree-id9334 . -1) (#("a" 0 1 (fontified t)) . -522) (undo-tree-id9335 . -1) (#("t" 0 1 (fontified t)) . -523) (undo-tree-id9336 . -1) (#("h" 0 1 (fontified t)) . -524) (undo-tree-id9337 . -1) (#("c" 0 1 (fontified t)) . -525) (undo-tree-id9338 . -1) (#("a" 0 1 (fontified t)) . -526) (undo-tree-id9339 . -1) (#("l" 0 1 (fontified t)) . -527) (undo-tree-id9340 . -1) 528) nil (26418 10564 58301 166000) 0 nil])
([nil nil ((520 . 521)) nil (26418 10564 58296 183000) 0 nil])
([nil nil ((509 . 512)) nil (26418 10564 58295 820000) 0 nil])
([nil nil ((512 . 513)) nil (26418 10564 58295 405000) 0 nil])
([nil nil ((513 . 515)) nil (26418 10564 58294 902000) 0 nil])
([nil nil ((512 . 513)) nil (26418 10564 58294 300000) 0 nil])
([nil nil ((513 . 534)) nil (26418 10564 58293 930000) 0 nil])
([nil nil ((534 . 550)) nil (26418 10564 58293 299000) 0 nil])
([nil nil ((573 . 583)) nil (26418 10564 58292 430000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -582) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) 583) nil (26418 10564 58290 973000) 0 nil])
([nil nil ((582 . 590)) nil (26418 10564 58279 897000) 0 nil])
([nil nil ((590 . 593)) nil (26418 10564 58279 110000) 0 nil])
([nil nil ((593 . 594)) nil (26418 10564 58278 687000) 0 nil])
([nil nil ((594 . 596)) nil (26418 10564 58278 69000) 0 nil])
([nil nil ((508 . 510)) nil (26418 10564 58277 386000) 0 nil])
([nil nil ((595 . 601)) nil (26418 10564 58276 290000) 0 nil])
([nil nil ((509 . 510)) nil (26418 10564 58272 125000) 0 nil])
([nil nil ((594 . 600) (t 26418 10564 111049 130000)) nil (26418 10726 804597 63000) 0 nil])
([nil nil ((#("w" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -449) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (#("h" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -450) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -451) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -452) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -453) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) 454) nil (26418 10726 804595 693000) 0 nil])
([nil nil ((449 . 451)) nil (26418 10726 804583 170000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -449) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3))) . -450) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) 451) nil (26418 10726 804582 88000) 0 nil])
([nil nil ((449 . 454)) nil (26418 10726 804573 637000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -567) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) 568) nil (26418 10726 804573 15000) 0 nil])
([nil nil ((567 . 568)) nil (26418 10726 804571 473000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -443) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (#("T" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -444) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (#("y" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -445) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (#("p" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -446) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (#("e" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -447) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) 448) nil (26418 10726 804569 930000) 0 nil])
([nil nil ((442 . 447)) nil (26418 10726 804554 58000) 0 nil])
([nil nil ((443 . 444)) nil (26418 10726 804553 603000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -744) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (#(" " 0 1 (fontified t)) . -745) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (#("i" 0 1 (fontified t)) . -746) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (#("n" 0 1 (fontified t)) . -747) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (#("i" 0 1 (fontified t)) . -748) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (#("t" 0 1 (fontified t)) . -749) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (#(" " 0 1 (fontified t)) . -750) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -751) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (#(" " 0 1 (fontified t)) . -752) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -753) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t)) . -754) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (#(" " 0 1 (fontified t)) . -755) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (#("0" 0 1 (face font-lock-constant-face fontified t)) . -756) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) 757) nil (26418 10726 804539 814000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -754) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (#(" " 0 1 (fontified t)) . -755) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -756) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (#(" " 0 1 (fontified t)) . -757) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -758) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (#(" " 0 1 (fontified t)) . -759) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -760) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t)) . -761) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (#(" " 0 1 (fontified t)) . -762) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t)) . -763) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (#(" " 0 1 (fontified t)) . -764) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (#("+" 0 1 (face font-lock-constant-face fontified t)) . -765) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (#(" " 0 1 (fontified t)) . -766) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (#("h" 0 1 (fontified t)) . -767) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (#("." 0 1 (fontified t)) . -768) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (#("l" 0 1 (fontified t)) . -769) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (#("e" 0 1 (fontified t)) . -770) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (#("n" 0 1 (fontified t)) . -771) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (#("g" 0 1 (fontified t)) . -772) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (#("t" 0 1 (fontified t)) . -773) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (#("h" 0 1 (fontified t)) . -774) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) 775) nil (26418 10726 804498 291000) 0 nil])
([nil nil ((#("→" 0 1 (face font-lock-constant-face fontified t)) . -738) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (#(" " 0 1 (fontified t)) . -739) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -740) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (#("
" 0 1 (fontified t)) . -741) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (#(" " 0 1 (fontified t)) . -742) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (#(" " 0 1 (fontified t)) . -743) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (#("
" 0 1 (fontified t)) . -744) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (#(" " 0 1 (fontified t)) . -745) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (#(" " 0 1 (fontified t)) . -746) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (#("|" 0 1 (fontified t)) . -747) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (#(" " 0 1 (fontified t)) . -748) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (#("t" 0 1 (fontified t)) . -749) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (#("a" 0 1 (fontified t)) . -750) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (#("i" 0 1 (fontified t)) . -751) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (#("l" 0 1 (fontified t)) . -752) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (#(" " 0 1 (fontified t)) . -753) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) 754) nil (26418 10726 804411 471000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -712) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (#("{" 0 1 (fontified t)) . -713) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -714) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (#(" " 0 1 (fontified t)) . -715) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -716) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (#(" " 0 1 (fontified t)) . -717) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (#(":" 0 1 (fontified t)) . -718) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (#(" " 0 1 (fontified t)) . -719) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (#("T" 0 1 (face font-lock-type-face fontified t)) . -720) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (#("y" 0 1 (face font-lock-type-face fontified t)) . -721) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (#("p" 0 1 (face font-lock-type-face fontified t)) . -722) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -723) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (#("}" 0 1 (fontified t)) . -724) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (#(" " 0 1 (fontified t)) . -725) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (#(":" 0 1 (fontified t)) . -726) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (#(" " 0 1 (fontified t)) . -727) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) 728) nil (26418 10726 803373 6000) 0 nil])
([nil nil ((722 . 726)) nil (26418 10726 803316 623000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -717) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -718) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (#(" " 0 1 (fontified t)) . -719) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -720) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) 721) nil (26418 10726 803315 365000) 0 nil])
([nil nil ((717 . 718)) nil (26418 10726 803301 854000) 0 nil])
([nil nil ((713 . 717)) nil (26418 10726 803301 416000) 0 nil])
([nil nil ((721 . 726)) nil (26418 10726 803301 15000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -725) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) 726) nil (26418 10726 803300 230000) 0 nil])
([nil nil ((725 . 728)) nil (26418 10726 803295 83000) 0 nil])
([nil nil ((713 . 716)) nil (26418 10726 803294 662000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -719) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (#("i" 0 1 (fontified t)) . -720) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (#("s" 0 1 (fontified t)) . -721) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (#("t" 0 1 (fontified t)) . -722) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (#(" " 0 1 (fontified t)) . -723) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (714 . 724)) nil (26418 10726 803291 234000) 0 nil])
([nil nil ((117 . 118)) nil (26418 10834 952706 746000) 0 nil])
([nil nil ((442 . 443) (t 26418 10836 393701 524000)) nil (26418 11081 373488 920000) 0 nil] [nil nil ((118 . 127)) ((#("varaible " 0 1 (face lsp-face-semhl-keyword fontified t) 1 2 (face lsp-face-semhl-keyword fontified t) 2 3 (face lsp-face-semhl-keyword fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 118) (undo-tree-id10979 . -8) (undo-tree-id10980 . -8) (undo-tree-id10981 . -3) (undo-tree-id10982 . -3) (undo-tree-id10983 . -3) (undo-tree-id10984 . -3) (undo-tree-id10985 . -3) (undo-tree-id10986 . -3) (undo-tree-id10987 . -3) (undo-tree-id10988 . -3) (undo-tree-id10989 . -3) (undo-tree-id10990 . -3) (undo-tree-id10991 . -3) (undo-tree-id10992 . -3) (undo-tree-id10993 . -3) (undo-tree-id10994 . -3) (undo-tree-id10995 . -3) (undo-tree-id10996 . -3) (undo-tree-id10997 . -3) (undo-tree-id10998 . -3) (undo-tree-id10999 . -3) (undo-tree-id11000 . -3) (undo-tree-id11001 . -3) (undo-tree-id11002 . -3) (undo-tree-id11003 . -3) (undo-tree-id11004 . -3) (undo-tree-id11005 . -3) (undo-tree-id11006 . -3) (undo-tree-id11007 . -3) (undo-tree-id11008 . -3) (undo-tree-id11009 . -3) (undo-tree-id11010 . -3) (undo-tree-id11011 . -3) (undo-tree-id11012 . -3) (undo-tree-id11013 . -3) (undo-tree-id11014 . -3) (undo-tree-id11015 . -3) (undo-tree-id11016 . -3) (undo-tree-id11017 . -3) (undo-tree-id11018 . -3) (undo-tree-id11019 . -3) (undo-tree-id11020 . -3) (undo-tree-id11021 . -3) (undo-tree-id11022 . -3) (undo-tree-id11023 . -3) (undo-tree-id11024 . -3) (undo-tree-id11025 . -3) (undo-tree-id11026 . -2) (undo-tree-id11027 . -2) (undo-tree-id11028 . -8)) (26418 10834 557537 3000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -442) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) 443) nil (26418 11081 373488 33000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -121) (undo-tree-id9377 . -1) (#("i" 0 1 (fontified t)) . -122) (undo-tree-id9379 . -1) (#("b" 0 1 (fontified t)) . -123) (undo-tree-id9381 . -1) (#("l" 0 1 (fontified t)) . -124) (undo-tree-id9383 . -1) (#("e" 0 1 (fontified t)) . -125) (undo-tree-id9385 . -1) (#(" " 0 1 (fontified t)) . -126) (undo-tree-id9387 . -1) 127) ((121 . 127)) (26418 10834 91354 105000) 0 nil])
([nil nil ((442 . 445)) nil (26418 11081 373483 96000) 0 nil])
([nil nil ((121 . 134)) ((#("iable SASeq :" 0 1 (face lsp-face-semhl-keyword fontified t) 1 2 (face lsp-face-semhl-keyword fontified t) 2 3 (face lsp-face-semhl-keyword fontified t) 3 4 (face lsp-face-semhl-keyword fontified t) 4 5 (face lsp-face-semhl-keyword fontified t) 5 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 121) (undo-tree-id10932 . -12) (undo-tree-id10933 . -12) (undo-tree-id10934 . -11) (undo-tree-id10935 . -11) (undo-tree-id10936 . -11) (undo-tree-id10937 . -11) (undo-tree-id10938 . -11) (undo-tree-id10939 . -11) (undo-tree-id10940 . -11) (undo-tree-id10941 . -11) (undo-tree-id10942 . -11) (undo-tree-id10943 . -11) (undo-tree-id10944 . 2) (undo-tree-id10945 . -12) (undo-tree-id10946 . -12) (undo-tree-id10947 . -12) (undo-tree-id10948 . -12) (undo-tree-id10949 . -12) (undo-tree-id10950 . -12) (undo-tree-id10951 . -12) (undo-tree-id10952 . -12) (undo-tree-id10953 . -12) (undo-tree-id10954 . -12) (undo-tree-id10955 . -12) (undo-tree-id10956 . -12) (undo-tree-id10957 . -12) (undo-tree-id10958 . -12) (undo-tree-id10959 . -12) (undo-tree-id10960 . -12) (undo-tree-id10961 . -12) (undo-tree-id10962 . -12) (undo-tree-id10963 . -11) (undo-tree-id10964 . -11) (undo-tree-id10965 . -11) (undo-tree-id10966 . -11) (undo-tree-id10967 . -12) (undo-tree-id10968 . -11) (undo-tree-id10969 . -11) (undo-tree-id10970 . -5) (undo-tree-id10971 . -5) (undo-tree-id10972 . -5) (undo-tree-id10973 . -5) (undo-tree-id10974 . -5) (undo-tree-id10975 . -5) (undo-tree-id10976 . -5) (undo-tree-id10977 . -5) (undo-tree-id10978 . -12)) (26418 10833 681892 235000) 0 nil])
([nil nil ((444 . 454)) nil (26418 11081 373482 690000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -133) (undo-tree-id9369 . -1) (undo-tree-id9371 . -1) (undo-tree-id9373 . -1) (undo-tree-id9375 . -1) 134) ((133 . 134)) (26418 10833 65723 755000) 0 nil])
([nil nil ((580 . 583)) nil (26418 11081 373482 284000) 0 nil])
([nil nil ((#("v" 0 1 (face lsp-face-semhl-keyword fontified t)) . -118) (undo-tree-id9353 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t)) . -119) (undo-tree-id9355 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t)) . -120) (undo-tree-id9357 . -1) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t)) . -121) (undo-tree-id9359 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t)) . -122) (undo-tree-id9361 . -1) (#("b" 0 1 (face lsp-face-semhl-keyword fontified t)) . -123) (undo-tree-id9363 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t)) . -124) (undo-tree-id9365 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -125) (undo-tree-id9367 . -1) 126) ((118 . 126)) (26418 10832 579093 723000) 0 nil])
([nil nil ((581 . 584)) nil (26418 11081 373481 859000) 0 nil])
([nil nil ((118 . 119)) ((#("
" 0 1 (fontified t)) . 118) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1)) (26418 10831 782754 217000) 0 nil])
([nil nil ((585 . 588)) nil (26418 11081 373481 448000) 0 nil])
([nil nil ((119 . 125)) ((#("abbrev" 0 6 (face font-lock-keyword-face fontified t)) . 119)) (26418 10831 264986 841000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -586) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (#("}" 0 1 (fontified t)) . -587) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) 588) nil (26418 11081 373480 482000) 0 nil])
([nil nil ((132 . 140)) ((#(":= List " 0 2 (face font-lock-constant-face fontified t) 2 8 (fontified t)) . 132) (undo-tree-id10896 . -7) (undo-tree-id10897 . -7) (undo-tree-id10898 . -8) (undo-tree-id10899 . -8) (undo-tree-id10900 . -8) (undo-tree-id10901 . -8) (undo-tree-id10902 . -8) (undo-tree-id10903 . -8) (undo-tree-id10904 . -8) (undo-tree-id10905 . -8) (undo-tree-id10906 . -8) (undo-tree-id10907 . -8) (undo-tree-id10908 . -8) (undo-tree-id10909 . -8) (undo-tree-id10910 . -7) (undo-tree-id10911 . -7) (undo-tree-id10912 . -7) (undo-tree-id10913 . -7) (undo-tree-id10914 . -8) (undo-tree-id10915 . -7)) (26418 10830 743408 124000) 0 nil])
([nil nil ((586 . 588)) nil (26418 11081 373473 864000) 0 nil])
([nil nil ((140 . 146)) ((#("σ × α)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 140)) (26418 10829 448233 423000) 0 nil])
([nil nil ((587 . 588)) nil (26418 11081 373473 450000) 0 nil])
([nil nil ((140 . 141)) ((#("(" 0 1 (fontified t)) . 140) (t 26418 10726 850626 170000)) (26418 10829 280742 296000) 0 nil])
([nil nil ((588 . 591)) nil (26418 11081 373473 115000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -381) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (#("σ" 0 1 (fontified t)) . -382) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (#(" " 0 1 (fontified t)) . -383) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (#("α" 0 1 (fontified t)) . -384) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) 385 (137 . 143) (#("L" 0 1 (face lsp-face-semhl-variable fontified t)) . -137) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) 138 (133 . 138) (131 . 134) (#(" " 0 1 (face lsp-face-semhl-variable fontified t)) . -371) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . 1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) 372 (369 . 370) (#("\\" 0 1 (fontified t)) . -369) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (#("s" 0 1 (fontified t)) . -370) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (#("i" 0 1 (fontified t)) . -371) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (#("g" 0 1 (fontified t)) . -372) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (#("m" 0 1 (fontified t)) . -373) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (#("a" 0 1 (fontified t)) . -374) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (#(" " 0 1 (fontified t)) . -375) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (#(" " 0 1 (fontified t)) . -376) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (#(" " 0 1 (fontified t)) . -377) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (#(" " 0 1 (fontified t)) . -378) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) 379 (375 . 380) (371 . 375) (368 . 373) (363 . 368) (#("L" 0 1 (fontified t)) . -363) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (#("i" 0 1 (fontified t)) . -364) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (#("s" 0 1 (fontified t)) . -365) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (#("t" 0 1 (fontified t)) . -366) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (#(" " 0 1 (fontified t)) . -367) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (#("(" 0 1 (fontified t)) . -368) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -369) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (#("×" 0 1 (face font-lock-constant-face fontified t)) . -371) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (#(" " 0 1 (fontified t)) . -372) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -373) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (#(")" 0 1 (fontified t)) . -374) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) 375 (t 26418 10726 850626 170000)) ((363 . 375) (#("SASeq" 0 5 (fontified nil)) . 363) (undo-tree-id10607 . -4) (undo-tree-id10608 . -5) (undo-tree-id10609 . -5) (undo-tree-id10610 . -5) (undo-tree-id10611 . -5) (undo-tree-id10612 . -5) (undo-tree-id10613 . -5) (undo-tree-id10614 . -5) (undo-tree-id10615 . -5) (undo-tree-id10616 . -5) (undo-tree-id10617 . -5) (undo-tree-id10618 . -5) (undo-tree-id10619 . -5) (undo-tree-id10620 . -5) (undo-tree-id10621 . -5) (undo-tree-id10622 . -5) (undo-tree-id10623 . -5) (undo-tree-id10624 . -5) (undo-tree-id10625 . -5) (undo-tree-id10626 . -5) (undo-tree-id10627 . -5) (undo-tree-id10628 . -5) (undo-tree-id10629 . -5) (undo-tree-id10630 . -5) (undo-tree-id10631 . -5) (undo-tree-id10632 . -5) (undo-tree-id10633 . -5) (undo-tree-id10634 . -5) (undo-tree-id10635 . -5) (undo-tree-id10636 . -5) (undo-tree-id10637 . -5) (undo-tree-id10638 . -5) (undo-tree-id10639 . -5) (undo-tree-id10640 . -5) (undo-tree-id10641 . -5) (undo-tree-id10642 . -5) (undo-tree-id10643 . -5) (undo-tree-id10644 . -5) (undo-tree-id10645 . -5) (undo-tree-id10646 . -5) (undo-tree-id10647 . -5) (undo-tree-id10648 . -5) (undo-tree-id10649 . -5) (undo-tree-id10650 . -5) (undo-tree-id10651 . -5) (undo-tree-id10652 . -5) (undo-tree-id10653 . -5) (undo-tree-id10654 . -5) (undo-tree-id10655 . -5) (undo-tree-id10656 . -4) (undo-tree-id10657 . -4) (undo-tree-id10658 . -5) (undo-tree-id10659 . -5) (undo-tree-id10660 . -5) (undo-tree-id10661 . -5) (undo-tree-id10662 . -5) (undo-tree-id10663 . -5) (undo-tree-id10664 . -5) (undo-tree-id10665 . -5) (undo-tree-id10666 . -5) (undo-tree-id10667 . -5) (undo-tree-id10668 . -5) (undo-tree-id10669 . -5) (undo-tree-id10670 . -5) (undo-tree-id10671 . -5) (undo-tree-id10672 . -5) (undo-tree-id10673 . -5) (undo-tree-id10674 . -5) (undo-tree-id10675 . -5) (undo-tree-id10676 . -5) (undo-tree-id10677 . -5) (undo-tree-id10678 . -5) (undo-tree-id10679 . -5) (undo-tree-id10680 . -5) (undo-tree-id10681 . -5) (undo-tree-id10682 . -5) (undo-tree-id10683 . -5) (undo-tree-id10684 . -5) (undo-tree-id10685 . -5) (undo-tree-id10686 . -5) (undo-tree-id10687 . -5) (undo-tree-id10688 . -5) (undo-tree-id10689 . -5) (undo-tree-id10690 . -5) (undo-tree-id10691 . -5) (undo-tree-id10692 . -5) (undo-tree-id10693 . -5) (undo-tree-id10694 . -5) (undo-tree-id10695 . -5) (undo-tree-id10696 . -5) (undo-tree-id10697 . -5) (undo-tree-id10698 . -5) (undo-tree-id10699 . -5) (undo-tree-id10700 . -5) (undo-tree-id10701 . -5) (undo-tree-id10702 . -5) (undo-tree-id10703 . -5) (undo-tree-id10704 . -5) (undo-tree-id10705 . -5) (undo-tree-id10706 . -5) (undo-tree-id10707 . -5) (undo-tree-id10708 . -5) (undo-tree-id10709 . -5) (undo-tree-id10710 . -5) (undo-tree-id10711 . -4) (#(" \\s α" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (face lsp-face-semhl-variable fontified nil) 4 5 (fontified nil)) . 368) (undo-tree-id10712 . -3) (undo-tree-id10713 . -2) (undo-tree-id10714 . -3) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -4) (undo-tree-id10728 . -4) (undo-tree-id10729 . -4) (undo-tree-id10730 . -4) (undo-tree-id10731 . -4) (undo-tree-id10732 . -4) (undo-tree-id10733 . -4) (undo-tree-id10734 . -4) (undo-tree-id10735 . -4) (undo-tree-id10736 . -4) (undo-tree-id10737 . -4) (undo-tree-id10738 . -4) (undo-tree-id10739 . -4) (undo-tree-id10740 . -4) (undo-tree-id10741 . -2) (undo-tree-id10742 . -2) (undo-tree-id10743 . -3) (undo-tree-id10744 . -3) (undo-tree-id10745 . -3) (undo-tree-id10746 . -3) (undo-tree-id10747 . -3) (undo-tree-id10748 . -3) (undo-tree-id10749 . -3) (undo-tree-id10750 . -3) (undo-tree-id10751 . -3) (undo-tree-id10752 . -3) (undo-tree-id10753 . -3) (undo-tree-id10754 . -3) (undo-tree-id10755 . -3) (undo-tree-id10756 . -3) (undo-tree-id10757 . -3) (undo-tree-id10758 . -3) (undo-tree-id10759 . -3) (undo-tree-id10760 . -3) (undo-tree-id10761 . -4) (undo-tree-id10762 . -4) (undo-tree-id10763 . -4) (undo-tree-id10764 . -4) (undo-tree-id10765 . -4) (undo-tree-id10766 . -4) (undo-tree-id10767 . -4) (undo-tree-id10768 . -4) (undo-tree-id10769 . -4) (undo-tree-id10770 . -4) (undo-tree-id10771 . -3) (undo-tree-id10772 . -3) (undo-tree-id10773 . -3) (undo-tree-id10774 . -3) (undo-tree-id10775 . -3) (undo-tree-id10776 . -3) (undo-tree-id10777 . -3) (undo-tree-id10778 . -3) (undo-tree-id10779 . -3) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -3) (undo-tree-id10800 . -3) (undo-tree-id10801 . -3) (undo-tree-id10802 . -4) (undo-tree-id10803 . -4) (undo-tree-id10804 . -3) (undo-tree-id10805 . -3) (undo-tree-id10806 . -3) (undo-tree-id10807 . -3) (undo-tree-id10808 . -3) (undo-tree-id10809 . -3) (undo-tree-id10810 . -3) (undo-tree-id10811 . -3) (undo-tree-id10812 . -3) (#("igma" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 371) (undo-tree-id10813 . -4) (undo-tree-id10814 . -4) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -4) (undo-tree-id10826 . -4) (undo-tree-id10827 . -4) (undo-tree-id10828 . -3) (undo-tree-id10829 . -3) (undo-tree-id10830 . -2) (undo-tree-id10831 . -3) (undo-tree-id10832 . -4) (undo-tree-id10833 . -4) (undo-tree-id10834 . -4) (undo-tree-id10835 . -4) (undo-tree-id10836 . -4) (undo-tree-id10837 . -4) (undo-tree-id10838 . -4) (undo-tree-id10839 . -4) (undo-tree-id10840 . -4) (undo-tree-id10841 . -4) (undo-tree-id10842 . -4) (undo-tree-id10843 . -4) (undo-tree-id10844 . -4) (undo-tree-id10845 . -4) (undo-tree-id10846 . -4) (undo-tree-id10847 . -4) (undo-tree-id10848 . -4) (undo-tree-id10849 . -4) (undo-tree-id10850 . -4) (undo-tree-id10851 . -4) (undo-tree-id10852 . -4) (undo-tree-id10853 . -4) (#("     " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 375) (undo-tree-id10854 . -5) (undo-tree-id10855 . -5) (undo-tree-id10856 . -5) (undo-tree-id10857 . -5) (undo-tree-id10858 . -5) (undo-tree-id10859 . -5) (undo-tree-id10860 . -5) (undo-tree-id10861 . -4) (undo-tree-id10862 . -4) (undo-tree-id10863 . -5) (undo-tree-id10864 . -5) (undo-tree-id10865 . -5) (undo-tree-id10866 . -5) (undo-tree-id10867 . -5) (undo-tree-id10868 . -5) (undo-tree-id10869 . -5) (undo-tree-id10870 . -5) (undo-tree-id10871 . -5) (undo-tree-id10872 . -5) (undo-tree-id10873 . -5) (undo-tree-id10874 . -5) (369 . 379) (#("σ" 0 1 (fontified nil)) . 369) (371 . 372) (#(" {}" 0 2 (fontified nil) 2 3 (fontified nil)) . 131) (undo-tree-id10875 . -2) (undo-tree-id10876 . -2) (undo-tree-id10877 . -2) (undo-tree-id10878 . -2) (undo-tree-id10879 . -2) (undo-tree-id10880 . -2) (undo-tree-id10881 . -2) (undo-tree-id10882 . -2) (undo-tree-id10883 . -2) (undo-tree-id10884 . -2) (undo-tree-id10885 . 1) (#("σ α L" 0 1 (face lsp-face-semhl-variable fontified nil) 1 2 (fontified nil) 2 3 (face lsp-face-semhl-variable fontified nil) 3 4 (fontified nil) 4 5 (face lsp-face-semhl-variable fontified nil)) . 133) (undo-tree-id10886 . -5) (undo-tree-id10887 . -5) (undo-tree-id10888 . -5) (undo-tree-id10889 . -5) (undo-tree-id10890 . -5) (undo-tree-id10891 . -5) (undo-tree-id10892 . -5) (undo-tree-id10893 . -5) (undo-tree-id10894 . -5) (undo-tree-id10895 . -5) (137 . 138) (#(": Type" 0 2 (fontified t) 2 6 (face font-lock-type-face fontified t)) . 137) (381 . 385)) (26418 10829 276927 834000) 0 nil])
([nil nil ((#("P" 0 1 (face lsp-face-semhl-variable fontified t)) . -587) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (#("r" 0 1 (fontified t)) . -588) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (#("e" 0 1 (fontified t)) . -589) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (#("f" 0 1 (fontified t)) . -590) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) 591) nil (26418 11081 373470 749000) 0 nil])
nil
([nil nil ((587 . 591)) nil (26418 11081 373125 708000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -590) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) 591) nil (26418 11081 373125 18000) 0 nil])
([nil nil ((590 . 601)) nil (26418 11081 373120 27000) 0 nil])
([nil nil ((597 . 598)) nil (26418 11081 373119 639000) 0 nil])
([nil nil ((591 . 592)) nil (26418 11081 373119 217000) 0 nil])
([nil nil ((593 . 594)) nil (26418 11081 373118 889000) 0 nil])
([nil nil ((325 . 328)) nil (26418 11081 373118 517000) 0 nil])
([nil nil ((327 . 335)) nil (26418 11081 373118 86000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -330) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -331) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -332) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -333) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -334) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) 335) nil (26418 11081 373116 648000) 0 nil])
([nil nil ((330 . 331)) nil (26418 11081 373101 454000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -329) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -330) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) 331) nil (26418 11081 373100 389000) 0 nil])
([nil nil ((329 . 333)) nil (26418 11081 373091 690000) 0 nil])
([nil nil ((333 . 337)) nil (26418 11081 373091 285000) 0 nil])
([nil nil ((593 . 596)) nil (26418 11081 373090 882000) 0 nil])
([nil nil ((594 . 604)) nil (26418 11081 373090 533000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -600) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (#("y" 0 1 (fontified t)) . -601) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (#("p" 0 1 (fontified t)) . -602) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (#("e" 0 1 (fontified t)) . -603) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) 604) nil (26418 11081 373088 602000) 0 nil])
([nil nil ((600 . 604)) nil (26418 11081 373064 889000) 0 nil])
([nil nil ((640 . 642)) nil (26418 11081 373064 491000) 0 nil])
([nil nil ((#("α" 0 1 (fontified t)) . -641) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) 642) nil (26418 11081 373063 819000) 0 nil])
([nil nil ((641 . 649)) nil (26418 11081 373059 414000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -641) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) 642) nil (26418 11081 373058 267000) 0 nil])
([nil nil ((641 . 642)) nil (26418 11081 373044 146000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -648) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) 649) nil (26418 11081 373043 439000) 0 nil])
([nil nil ((648 . 649)) nil (26418 11081 373038 885000) 0 nil])
([nil nil ((642 . 646)) nil (26418 11081 373038 493000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -644) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (#(" " 0 1 (fontified t)) . -645) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) 646) nil (26418 11081 373037 416000) 0 nil])
([nil nil ((644 . 650)) nil (26418 11081 373029 290000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -648) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) 649) nil (26418 11081 373028 287000) 0 nil])
([nil nil ((648 . 649)) nil (26418 11081 373023 665000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -648) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) 649) nil (26418 11081 373022 816000) 0 nil])
([nil nil ((648 . 649)) nil (26418 11081 373016 538000) 0 nil])
([nil nil ((649 . 651)) nil (26418 11081 373015 943000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -649) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (#(" " 0 1 (fontified t)) . -650) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) 651) nil (26418 11081 373014 621000) 0 nil])
([nil nil ((650 . 651)) nil (26418 11081 372977 705000) 0 nil])
([nil nil ((660 . 661)) nil (26418 11081 372977 325000) 0 nil])
([nil nil ((661 . 663)) nil (26418 11081 372976 873000) 0 nil])
([nil nil ((663 . 665)) nil (26418 11081 372976 98000) 0 nil])
([nil nil ((661 . 670) (#("    " 0 4 (fontified t)) . 661) (undo-tree-id11029 . -2) (undo-tree-id11030 . -4) (undo-tree-id11031 . -2) (undo-tree-id11032 . -2) (undo-tree-id11033 . -2) (undo-tree-id11034 . -4) (undo-tree-id11035 . -4) (undo-tree-id11036 . -4) 665) nil (26418 11081 372972 940000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -536) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (#("
" 0 1 (fontified t)) . -537) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) 538 (t 26418 11081 389846 963000)) nil (26418 11091 623447 245000) 0 nil])
([nil nil ((96 . 98)) nil (26418 11091 623442 144000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-constant-face fontified t)) . -96) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (#("/" 0 1 (face font-lock-constant-face fontified t)) . -97) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) 98) nil (26418 11091 623440 11000) 0 nil])
([nil nil ((96 . 98)) nil (26418 11091 623419 348000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -458) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 3 0 1 1 2 2 3))) . -459) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -460) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 3 0 1 1 2 2 3))) . -461) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -462) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -463) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -464) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (#("T" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -465) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (#("y" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -466) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (#("p" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -467) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (#("e" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -468) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (#("}" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -469) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) 470 (t 26418 11091 643159 803000)) nil (26418 11178 121721 698000) 0 nil])
([nil nil ((458 . 460)) nil (26418 11178 121158 788000) 0 nil])
([nil nil ((#("s" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 3 0 1 1 2 2 3))) . -459) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) 460) nil (26418 11178 121158 90000) 0 nil])
([nil nil ((459 . 472)) nil (26418 11178 121153 839000) 0 nil])
([nil nil ((472 . 479)) nil (26418 11178 121153 244000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -650) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (#("σ" 0 1 (fontified t)) . -651) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (#(" " 0 1 (fontified t)) . -652) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (#(":" 0 1 (face font-lock-constant-face fontified t)) . -653) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -654) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (#(" " 0 1 (fontified t)) . -655) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -656) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (#(")" 0 1 (fontified t)) . -657) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (#(" " 0 1 (fontified t)) . -658) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (#("(" 0 1 (fontified t)) . -659) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (#("α" 0 1 (fontified t)) . -660) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (#(" " 0 1 (fontified t)) . -661) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (#(":" 0 1 (face font-lock-constant-face fontified t)) . -662) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -663) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (#(" " 0 1 (fontified t)) . -664) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -665) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (#(")" 0 1 (fontified t)) . -666) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) 667) nil (26418 11178 121150 602000) 0 nil])
([nil nil ((650 . 653)) nil (26418 11178 121121 744000) 0 nil])
([nil nil ((#("f" 0 1 (face lsp-face-semhl-variable fontified t)) . -624) (undo-tree-id11569 . -1) 625 (#("f" 0 1 (face lsp-face-semhl-variable fontified t)) . -345) (undo-tree-id11570 . -1) 346 (705 . 709) (#("post" 0 4 (fontified nil)) . -705) (705 . 709) (703 . 705) (#("p" 0 1 (fontified t)) . -703) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (#("r" 0 1 (fontified t)) . -704) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (#("e" 0 1 (fontified t)) . -705) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (#("," 0 1 (fontified t)) . -706) (undo-tree-id11583 . -1) (#(" " 0 1 (fontified t)) . -707) (undo-tree-id11584 . -1) 708 (703 . 708) (#("p" 0 1 (fontified t)) . -703) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (#("o" 0 1 (fontified t)) . -704) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (#("s" 0 1 (fontified t)) . -705) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (#("t" 0 1 (fontified t)) . -706) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) 707 (697 . 707) (693 . 697) (692 . 693) (#("s" 0 1 (face font-lock-warning-face fontified t)) . -692) (undo-tree-id11601 . -1) (#("o" 0 1 (face font-lock-warning-face fontified t)) . -693) (undo-tree-id11602 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t)) . -694) (undo-tree-id11603 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t)) . -695) (undo-tree-id11604 . -1) (#("y" 0 1 (face font-lock-warning-face fontified t)) . -696) (undo-tree-id11605 . -1) 697 (406 . 407) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -406) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -407) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) 408 (406 . 408) (#("α" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -406) (undo-tree-id11610 . -1) 407 (402 . 403) (#(";" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -402) (undo-tree-id11611 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -403) (undo-tree-id11612 . -1) 404 (402 . 404) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -402) (undo-tree-id11613 . -1) 403 (#("," 0 1 (face font-lock-comment-face fontified t)) . -308) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -309) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -310) (undo-tree-id11618 . -1) 311 (302 . 304) (301 . 302) (t 26418 11178 139656 948000)) nil (26418 17518 997563 863000) 0 nil])
([nil nil ((#("pre : List (σ × α)" 0 2 (face lsp-face-semhl-variable fontified t) 2 3 (face lsp-face-semhl-variable fontified t) 3 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (face lsp-face-semhl-variable fontified t) 13 14 (fontified t) 14 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 17 (face lsp-face-semhl-variable fontified t) 17 18 (fontified t)) . 342) (undo-tree-id11560 . -17) (undo-tree-id11561 . 18) (undo-tree-id11562 . -17) (undo-tree-id11563 . -17) (undo-tree-id11564 . -6) (undo-tree-id11565 . -6) (undo-tree-id11566 . -18) (undo-tree-id11567 . -18) (undo-tree-id11568 . -17) 359) nil (26418 17518 997533 852000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -365) (undo-tree-id11559 . -1) 366 (365 . 366) (365 . 366)) nil (26418 17518 997528 893000) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified nil 365 . 383) (365 . 383)) nil (26418 17518 997527 560000) 0 nil])
([nil nil ((365 . 367)) nil (26418 17518 997526 654000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -388) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (#(" " 0 1 (fontified t)) . -389) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (#(" " 0 1 (fontified t)) . -390) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) 391) nil (26418 17518 997525 189000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -340) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -341) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (#(")" 0 1 (fontified t)) . -342) (undo-tree-id11550 . 1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) 343) nil (26418 17518 997517 745000) 0 nil])
([nil nil ((#("(s : σ)" 0 1 (fontified t) 1 2 (face lsp-face-semhl-variable fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (face lsp-face-semhl-variable fontified t) 6 7 (fontified t rear-nonsticky t)) . 341) (undo-tree-id11920 . -6) (undo-tree-id11921 . -6) (undo-tree-id11922 . -6) (undo-tree-id11923 . -6) (undo-tree-id11924 . -6) (undo-tree-id11925 . -7) (undo-tree-id11926 . -7) 347 (t 26418 17519 6469 666000)) nil (26418 17571 989289 599000) 0 nil])
([nil nil ((375 . 378) 372) nil (26418 17571 989285 902000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -376) (undo-tree-id11916 . -2) (undo-tree-id11917 . -2) (undo-tree-id11918 . -2) (undo-tree-id11919 . -2) 378) nil (26418 17571 989285 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified nil 376 . 383) (376 . 383)) nil (26418 17571 989282 685000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -612) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) 613 (#(" " 0 1 (fontified t)) . -612) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (#("{" 0 1 (fontified t)) . -613) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t)) . -614) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t)) . -615) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t)) . -616) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (#(" " 0 1 (fontified t)) . -617) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (#(":" 0 1 (fontified t)) . -618) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (#(" " 0 1 (fontified t)) . -619) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (#("L" 0 1 (fontified t)) . -620) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (#("i" 0 1 (fontified t)) . -621) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (#("s" 0 1 (fontified t)) . -622) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (#("t" 0 1 (fontified t)) . -623) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (#(" " 0 1 (fontified t)) . -624) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (#("(" 0 1 (fontified t)) . -625) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -626) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (#("×" 0 1 (face font-lock-constant-face fontified t)) . -627) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (#("α" 0 1 (face lsp-face-semhl-variable fontified t)) . -628) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (#(")" 0 1 (fontified t)) . -629) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (#("}" 0 1 (fontified t)) . -630) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) 631 (#("{" 0 1 (fontified t)) . -612) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t)) . -613) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (#(":" 0 1 (fontified t)) . -614) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -615) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (#("}" 0 1 (fontified t)) . -616) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) 617 (#(" " 0 1 (fontified t)) . -670) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (#("p" 0 1 (fontified t)) . -671) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (#("r" 0 1 (fontified t)) . -672) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (#("e" 0 1 (fontified t)) . -673) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (#("f" 0 1 (fontified t)) . -674) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (#(" " 0 1 (fontified t)) . -675) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (#("s" 0 1 (fontified t)) . -676) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) 677 (376 . 378) (#("(" 0 1 (fontified t)) . -376) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) 377 (#(")" 0 1 (rear-nonsticky t fontified t)) . -382) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) 383) nil (26418 17571 989272 203000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#(" " 0 1 (fontified t)) . 626) (#("
" 0 1 (fontified t)) . 626) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1)) nil (26418 17571 988536 366000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -328) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) 329 (t 26418 17572 6376 545000)) nil (26418 17618 62683 504000) 0 nil])
([nil nil ((328 . 329)) nil (26418 17618 62681 790000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -339) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) 340) nil (26418 17618 62681 10000) 0 nil])
([nil nil ((339 . 340)) nil (26418 17618 62676 131000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -458) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -459) (undo-tree-id11963 . -1) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (#("T" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -460) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (#("y" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -461) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (#("p" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -462) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (#("e" 0 1 (face font-lock-type-face fontified t match-data (0 3 0 1 1 2 2 3))) . -463) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (#(")" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -464) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) (undo-tree-id11996 . -1) (undo-tree-id11997 . -1) (undo-tree-id11998 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -465) (undo-tree-id11999 . -1) (undo-tree-id12000 . -1) (undo-tree-id12001 . -1) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (#("(" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -466) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) 467) nil (26418 17618 62673 442000) 0 nil])
([nil nil ((626 . 630)) nil (26418 17618 62649 48000) 0 nil])
([nil nil ((#("Σ" 0 1 (fontified t)) . -627) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (#("I" 0 1 (fontified t)) . -628) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (#(" " 0 1 (fontified t)) . -629) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) 630) nil (26418 17618 62646 497000) 0 nil])
([nil nil ((627 . 630)) nil (26418 17618 62621 456000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -27) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (#("L" 0 1 (fontified t)) . -28) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (undo-tree-id12114 . -1) (undo-tree-id12115 . -1) (undo-tree-id12116 . -1) (undo-tree-id12117 . -1) (undo-tree-id12118 . -1) (undo-tree-id12119 . -1) (undo-tree-id12120 . -1) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) (undo-tree-id12127 . -1) (#("i" 0 1 (fontified t)) . -29) (undo-tree-id12128 . -1) (undo-tree-id12129 . -1) (undo-tree-id12130 . -1) (undo-tree-id12131 . -1) (undo-tree-id12132 . -1) (undo-tree-id12133 . -1) (undo-tree-id12134 . -1) (undo-tree-id12135 . -1) (undo-tree-id12136 . -1) (undo-tree-id12137 . -1) (undo-tree-id12138 . -1) 30 (27 . 30) (682 . 683) (#(" " 0 1 (fontified t match-data (0 0))) . -683) (undo-tree-id12139 . -1) (undo-tree-id12140 . -1) (undo-tree-id12141 . -1) (undo-tree-id12142 . -1) (undo-tree-id12143 . -1) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1) 684 (682 . 683) (#("," 0 1 (fontified t match-data (0 0))) . -682) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) 683 (701 . 718) (694 . 701) (677 . 694) (675 . 677) (671 . 675) (670 . 671) (665 . 670) (#("," 0 1 (fontified t match-data (0 0))) . -665) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1) (undo-tree-id12157 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -666) (undo-tree-id12158 . -1) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1) (undo-tree-id12165 . -1) 667 (664 . 667) (#("o" 0 1 (fontified t match-data (0 0))) . -664) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1) 665 (658 . 665) (t 26418 17618 72963 95000)) nil (26418 18872 828951 721000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . 298) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1)) nil (26418 18872 828910 454000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-comment-face)) . -301) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -302) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -303) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -304) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (undo-tree-id12079 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -305) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -306) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) 307) nil (26418 18872 828906 594000) 0 nil])
([nil nil ((379 . 381)) nil (26418 18872 828863 823000) 0 nil])
([nil nil ((896 . 906) (#("\\" 0 1 (fontified t)) . -896) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (#("s" 0 1 (fontified t)) . -897) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (#("i" 0 1 (fontified t)) . -898) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) 899 (898 . 899) (#(" " 0 1 (fontified t)) . -898) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) 899 (896 . 899) (#("\\" 0 1 (fontified t)) . -897) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) 898 (895 . 898) (#("P" 0 1 (fontified t)) . -895) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (#("{" 0 1 (fontified t)) . -896) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) 897 (895 . 897) (#("{" 0 1 (fontified t)) . -895) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (#("p" 0 1 (face lsp-face-semhl-variable fontified t)) . -896) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (#("r" 0 1 (face lsp-face-semhl-variable fontified t)) . -897) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t)) . -898) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (#("f" 0 1 (face lsp-face-semhl-variable fontified t)) . -899) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (#(":" 0 1 (fontified t)) . -900) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (#("}" 0 1 (fontified t)) . -901) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) 902 (764 . 766) (779 . 780) (784 . 785) (758 . 759) (762 . 763) (#("(" 0 1 (fontified t match-data (0 0))) . -762) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) 763 (776 . 782) (764 . 776) (763 . 765) (758 . 763) (754 . 755) (739 . 740) (742 . 743) (#("(" 0 1 (fontified t match-data (0 0))) . -742) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) 743 (745 . 746) (#("," 0 1 (fontified t match-data (0 0))) . -745) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) 746 (748 . 749) (#("," 0 1 (fontified t match-data (0 0))) . -748) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) 749 (#(")" 0 1 (fontified t match-data (0 0))) . -753) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) 754 (750 . 757) (745 . 750) (#("." 0 1 (fontified t match-data (0 0))) . -745) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -746) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) 747 (742 . 747) (740 . 742) (#("." 0 1 (fontified t match-data (0 0))) . -740) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) 741 (738 . 741) (726 . 727) (#(" " 0 1 (fontified t match-data (0 0))) . -728) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) 729 (725 . 728) (724 . 727) (#("<" 0 1 (face font-lock-constant-face fontified t match-data (0 0))) . -724) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t match-data (0 0))) . -725) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) 726 (724 . 726) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -724) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (#("e" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -725) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -726) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (#("d" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -727) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) 728 (736 . 737) (726 . 733) (723 . 726) (724 . 727) (723 . 724) (#("t" 0 1 (fontified t match-data (0 0))) . -723) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) 724 (712 . 724) (710 . 712) (706 . 710) (705 . 706) (667 . 671) (666 . 667) (#("," 0 1 (fontified t match-data (0 0))) . -669) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -670) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (#("n" 0 1 (fontified t match-data (0 0))) . -671) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -672) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (#("l" 0 1 (fontified t match-data (0 0))) . -673) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) 674 (#(" " 0 1 (fontified t)) . -646) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -647) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (#("." 0 1 (fontified t)) . -648) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (#("p" 0 1 (fontified t match-data (0 0))) . -649) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -650) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -651) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -652) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (#("," 0 1 (fontified t match-data (0 0))) . -653) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) 654 (t 26418 18872 837589 621000)) nil (26418 19131 628765 536000) 0 nil])
([nil nil ((#("/--
The length of the history corresponds to the zero-based step of the decision
-/
def Hist.length {σ α : Type} (h: Hist pref s) := h
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 4 (face font-lock-comment-face fontified t) 4 81 (face font-lock-comment-face fontified t) 81 83 (face font-lock-comment-delimiter-face fontified t) 83 84 (fontified t) 84 87 (face lsp-face-semhl-keyword fontified t) 87 88 (fontified t) 88 99 (face font-lock-function-name-face fontified t) 99 101 (fontified t) 101 102 (face lsp-face-semhl-variable fontified t) 102 103 (fontified t) 103 104 (face lsp-face-semhl-variable fontified t) 104 107 (fontified t) 107 111 (face font-lock-type-face fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (face lsp-face-semhl-variable fontified t) 115 117 (fontified t) 117 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 132 (face font-lock-constant-face fontified t) 132 133 (fontified t) 133 134 (face lsp-face-semhl-variable fontified t) 134 135 (fontified t)) . 795) (undo-tree-id12582 . -86) (undo-tree-id12583 . 25) (undo-tree-id12584 . -2) (undo-tree-id12585 . -86) (undo-tree-id12586 . -134) (undo-tree-id12587 . -109) (undo-tree-id12588 . -86) (undo-tree-id12589 . -100) (undo-tree-id12590 . -100) (undo-tree-id12591 . -100) (undo-tree-id12592 . -100) (undo-tree-id12593 . -100) (undo-tree-id12594 . -100) (undo-tree-id12595 . -135) (undo-tree-id12596 . -100) (undo-tree-id12597 . -100) (undo-tree-id12598 . -100) (undo-tree-id12599 . -112) (undo-tree-id12600 . -112) (undo-tree-id12601 . -112) (undo-tree-id12602 . -112) (undo-tree-id12603 . -112) (undo-tree-id12604 . -112) (undo-tree-id12605 . -112) (undo-tree-id12606 . -112) (undo-tree-id12607 . -112) (undo-tree-id12608 . -112) (undo-tree-id12609 . -112) (undo-tree-id12610 . -112) (undo-tree-id12611 . -112) (undo-tree-id12612 . -112) (undo-tree-id12613 . -101) (undo-tree-id12614 . -101) (undo-tree-id12615 . -101) (undo-tree-id12616 . -101) (undo-tree-id12617 . -101) (undo-tree-id12618 . -101) (undo-tree-id12619 . -101) (undo-tree-id12620 . -101) (undo-tree-id12621 . -101) (undo-tree-id12622 . -101) (undo-tree-id12623 . -101) (undo-tree-id12624 . -101) (undo-tree-id12625 . -101) (undo-tree-id12626 . -101) (undo-tree-id12627 . -101) (undo-tree-id12628 . -101) (undo-tree-id12629 . -135) (undo-tree-id12630 . -101) (undo-tree-id12631 . -101) (undo-tree-id12632 . -101) (undo-tree-id12633 . -101) (undo-tree-id12634 . -101) (undo-tree-id12635 . -101) (undo-tree-id12636 . -101) (undo-tree-id12637 . -101) (undo-tree-id12638 . -101) (undo-tree-id12639 . -101) (undo-tree-id12640 . -101) (undo-tree-id12641 . -101) (undo-tree-id12642 . -103) (undo-tree-id12643 . -103) (undo-tree-id12644 . -103) (undo-tree-id12645 . -103) (undo-tree-id12646 . -103) (undo-tree-id12647 . -103) (undo-tree-id12648 . -103) (undo-tree-id12649 . -103) (undo-tree-id12650 . -103) (undo-tree-id12651 . -134) (undo-tree-id12652 . -103) (undo-tree-id12653 . -103) (undo-tree-id12654 . -103) (undo-tree-id12655 . 24) (undo-tree-id12656 . -111) (undo-tree-id12657 . -111) (undo-tree-id12658 . -111) (undo-tree-id12659 . -135) (undo-tree-id12660 . -111) (undo-tree-id12661 . -111) (undo-tree-id12662 . -111) (undo-tree-id12663 . -111) (undo-tree-id12664 . -111) (undo-tree-id12665 . -111) (undo-tree-id12666 . -111) (undo-tree-id12667 . -109) (undo-tree-id12668 . -109) (undo-tree-id12669 . -109) (undo-tree-id12670 . -109) (undo-tree-id12671 . -109) (undo-tree-id12672 . -109) (undo-tree-id12673 . -109) (undo-tree-id12674 . -109) (undo-tree-id12675 . -109) (undo-tree-id12676 . -109) (undo-tree-id12677 . -84) (undo-tree-id12678 . -109) (undo-tree-id12679 . -84) (undo-tree-id12680 . -109) (undo-tree-id12681 . -109) (undo-tree-id12682 . -109) (undo-tree-id12683 . -109) (undo-tree-id12684 . -109) (undo-tree-id12685 . -2) (undo-tree-id12686 . -2) (undo-tree-id12687 . -2) (undo-tree-id12688 . -2) (undo-tree-id12689 . -2) (undo-tree-id12690 . -2) (undo-tree-id12691 . -84) (undo-tree-id12692 . -86) (undo-tree-id12693 . -135) 881) nil (26418 19170 746451 476000) 0 nil] [nil nil ((#("def Hist.length {σ α : Type} (h: Hist pref s) := h
" 0 3 (face lsp-face-semhl-keyword fontified t) 3 4 (fontified t) 4 15 (face font-lock-function-name-face fontified t) 15 17 (fontified t) 17 18 (face lsp-face-semhl-variable fontified t) 18 19 (fontified t) 19 20 (face lsp-face-semhl-variable fontified t) 20 23 (fontified t) 23 27 (face font-lock-type-face fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (face lsp-face-semhl-variable fontified t) 31 33 (fontified t) 33 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 48 (face font-lock-constant-face fontified t) 48 49 (fontified t) 49 50 (face lsp-face-semhl-variable fontified t) 50 51 (fontified t)) . 879) (undo-tree-id12174 . 25) (undo-tree-id12175 . -50) (undo-tree-id12176 . -25) (undo-tree-id12177 . -25) (undo-tree-id12178 . -16) (undo-tree-id12179 . -16) (undo-tree-id12180 . -16) (undo-tree-id12181 . -16) (undo-tree-id12182 . -16) (undo-tree-id12183 . -16) (undo-tree-id12184 . -51) (undo-tree-id12185 . -16) (undo-tree-id12186 . -16) (undo-tree-id12187 . -16) (undo-tree-id12188 . -28) (undo-tree-id12189 . -28) (undo-tree-id12190 . -28) (undo-tree-id12191 . -28) (undo-tree-id12192 . -28) (undo-tree-id12193 . -28) (undo-tree-id12194 . -28) (undo-tree-id12195 . -28) (undo-tree-id12196 . -28) (undo-tree-id12197 . -28) (undo-tree-id12198 . -28) (undo-tree-id12199 . -28) (undo-tree-id12200 . -28) (undo-tree-id12201 . -28) (undo-tree-id12202 . -17) (undo-tree-id12203 . -17) (undo-tree-id12204 . -17) (undo-tree-id12205 . -17) (undo-tree-id12206 . -17) (undo-tree-id12207 . -17) (undo-tree-id12208 . -17) (undo-tree-id12209 . -17) (undo-tree-id12210 . -17) (undo-tree-id12211 . -17) (undo-tree-id12212 . -17) (undo-tree-id12213 . -17) (undo-tree-id12214 . -17) (undo-tree-id12215 . -17) (undo-tree-id12216 . -17) (undo-tree-id12217 . -17) (undo-tree-id12218 . -51) (undo-tree-id12219 . -17) (undo-tree-id12220 . -17) (undo-tree-id12221 . -17) (undo-tree-id12222 . -17) (undo-tree-id12223 . -17) (undo-tree-id12224 . -17) (undo-tree-id12225 . -17) (undo-tree-id12226 . -17) (undo-tree-id12227 . -17) (undo-tree-id12228 . -17) (undo-tree-id12229 . -17) (undo-tree-id12230 . -17) (undo-tree-id12231 . -19) (undo-tree-id12232 . -19) (undo-tree-id12233 . -19) (undo-tree-id12234 . -19) (undo-tree-id12235 . -19) (undo-tree-id12236 . -19) (undo-tree-id12237 . -19) (undo-tree-id12238 . -19) (undo-tree-id12239 . -19) (undo-tree-id12240 . -50) (undo-tree-id12241 . -19) (undo-tree-id12242 . -19) (undo-tree-id12243 . -19) (undo-tree-id12244 . 24) (undo-tree-id12245 . -27) (undo-tree-id12246 . -27) (undo-tree-id12247 . -27) (undo-tree-id12248 . -51) (undo-tree-id12249 . -27) (undo-tree-id12250 . -27) (undo-tree-id12251 . -27) (undo-tree-id12252 . -27) (undo-tree-id12253 . -27) (undo-tree-id12254 . -27) (undo-tree-id12255 . -27) (undo-tree-id12256 . -25) (undo-tree-id12257 . -25) (undo-tree-id12258 . -25) (undo-tree-id12259 . -25) (undo-tree-id12260 . -25) (undo-tree-id12261 . -25) (undo-tree-id12262 . -25) (undo-tree-id12263 . -25) (undo-tree-id12264 . -25) (undo-tree-id12265 . -25) (undo-tree-id12266 . -25) (undo-tree-id12267 . -51) 904) ((879 . 930)) (26418 19131 628068 835000) 0 nil])
([nil nil ((402 . 403) (401 . 402) 401) nil (26418 19170 746399 157000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 402 . 403) (#("
" 0 1 (fontified nil)) . -537) (402 . 538)) nil (26418 19170 746398 448000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 539) (undo-tree-id12581 . -1)) nil (26418 19170 746397 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -524) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (#("p" 0 1 (fontified t)) . -525) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (#("r" 0 1 (fontified t)) . -526) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (#("e" 0 1 (fontified t)) . -527) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (#("f" 0 1 (fontified t)) . -528) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (#(" " 0 1 (fontified t)) . -529) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (#("s" 0 1 (fontified t)) . -530) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) 531) nil (26418 19170 746395 200000) 0 nil])
([nil nil ((524 . 528)) nil (26418 19170 746366 899000) 0 nil])
([nil nil ((529 . 533)) nil (26418 19170 746365 909000) 0 nil])
([nil nil ((538 . 549)) nil (26418 19170 746361 744000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-constant-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -962) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -963) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -964) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) 965 (958 . 959) (#("_" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -958) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) 959 (962 . 973) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -962) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -963) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -964) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -965) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -966) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -967) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -968) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) 969 (#("_" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -969) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) 970 (969 . 970) (961 . 969) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . 961) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) 962 (961 . 962) (947 . 961) (#("termination" 0 11 (fontified nil)) . -947) (947 . 958) (#("termination_by" 0 14 (fontified nil)) . -947) (947 . 961) (#("termination" 0 11 (face lsp-face-semhl-function fontified t)) . -947) (undo-tree-id12974 . -11) (undo-tree-id12975 . -11) (undo-tree-id12976 . -6) (undo-tree-id12977 . -7) (undo-tree-id12978 . -7) (undo-tree-id12979 . -7) (undo-tree-id12980 . -7) (undo-tree-id12981 . -8) (undo-tree-id12982 . -9) (undo-tree-id12983 . -9) (undo-tree-id12984 . -10) (undo-tree-id12985 . -10) (undo-tree-id12986 . -10) (undo-tree-id12987 . -11) (undo-tree-id12988 . -11) (undo-tree-id12989 . -11) (undo-tree-id12990 . -11) (undo-tree-id12991 . -11) (undo-tree-id12992 . -11) (undo-tree-id12993 . -11) (undo-tree-id12994 . -11) 958 (947 . 958) (945 . 947) (#("d" 0 1 (fontified t)) . -945) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (#("e" 0 1 (fontified t)) . -946) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) 947 (945 . 947) (#("  " 0 2 (fontified t)) . -945) (undo-tree-id13007 . -2) (undo-tree-id13008 . -2) (undo-tree-id13009 . -2) (undo-tree-id13010 . -2) (undo-tree-id13011 . 2) (944 . 945) (939 . 944) (t 26418 19170 790453 972000)) nil (26418 19578 387753 978000) 0 nil])
([nil nil ((#("where
" 0 5 (face lsp-face-semhl-keyword fontified t) 5 6 (fontified t)) . 939) (undo-tree-id12800 . 1) (undo-tree-id12801 . -5) (undo-tree-id12802 . -6) (undo-tree-id12803 . -6) (undo-tree-id12804 . -6) (undo-tree-id12805 . -1) (undo-tree-id12806 . -5) (undo-tree-id12807 . -5) (undo-tree-id12808 . -5) (undo-tree-id12809 . -5) (undo-tree-id12810 . -5) (undo-tree-id12811 . -5) (undo-tree-id12812 . -6) (undo-tree-id12813 . -6) (undo-tree-id12814 . -6) (undo-tree-id12815 . -6) (undo-tree-id12816 . -6) (undo-tree-id12817 . -6) (undo-tree-id12818 . -6) (undo-tree-id12819 . -6) (undo-tree-id12820 . -6) (undo-tree-id12821 . -6) (undo-tree-id12822 . -6) (undo-tree-id12823 . -6) (undo-tree-id12824 . -6) (undo-tree-id12825 . -6) (undo-tree-id12826 . -6) (undo-tree-id12827 . -6) (undo-tree-id12828 . -6) (undo-tree-id12829 . -6) (undo-tree-id12830 . -6) (undo-tree-id12831 . -6) (undo-tree-id12832 . -6) (undo-tree-id12833 . -6) (undo-tree-id12834 . -6) (undo-tree-id12835 . -6) (undo-tree-id12836 . -6) (undo-tree-id12837 . -6) (undo-tree-id12838 . -6) (undo-tree-id12839 . -4) (undo-tree-id12840 . -6) (undo-tree-id12841 . -6) (undo-tree-id12842 . -6) (undo-tree-id12843 . -6) (undo-tree-id12844 . -6) (undo-tree-id12845 . -6) (undo-tree-id12846 . -6) (undo-tree-id12847 . -6) (undo-tree-id12848 . -6) (undo-tree-id12849 . -6) (undo-tree-id12850 . -6) (undo-tree-id12851 . -6) (undo-tree-id12852 . -6) (undo-tree-id12853 . -6) (undo-tree-id12854 . -6) (undo-tree-id12855 . -6) (undo-tree-id12856 . -6) (undo-tree-id12857 . -6) (undo-tree-id12858 . -6) (undo-tree-id12859 . -6) (undo-tree-id12860 . -6) (undo-tree-id12861 . -6) (undo-tree-id12862 . -6) (undo-tree-id12863 . -6) (undo-tree-id12864 . -6) (undo-tree-id12865 . -6) (undo-tree-id12866 . -6) (undo-tree-id12867 . -6) (undo-tree-id12868 . -4) (undo-tree-id12869 . -4) (undo-tree-id12870 . -4) (undo-tree-id12871 . -4) (undo-tree-id12872 . -4) (undo-tree-id12873 . -4) (undo-tree-id12874 . -4) (undo-tree-id12875 . -4) (undo-tree-id12876 . -4) (undo-tree-id12877 . -6) 943) nil (26418 19578 387454 797000) 0 nil])
([nil nil ((746 . 747) (#("s" 0 1 (fontified t)) . -746) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) 747 (734 . 747) (733 . 736) (836 . 838)) nil (26418 19578 387407 246000) 0 nil])
([nil nil ((#("[DecidableEq σ]" 0 14 (fontified t) 14 15 (fontified t)) . 733) (undo-tree-id12707 . -14) (undo-tree-id12708 . -12) (undo-tree-id12709 . 1) (undo-tree-id12710 . -14) (undo-tree-id12711 . -14) (undo-tree-id12712 . -1) (undo-tree-id12713 . -12) (undo-tree-id12714 . -15) (undo-tree-id12715 . -15) (undo-tree-id12716 . -15) (undo-tree-id12717 . -15) (undo-tree-id12718 . -15) (undo-tree-id12719 . -15) (undo-tree-id12720 . -15) (undo-tree-id12721 . -3) (undo-tree-id12722 . -3) (undo-tree-id12723 . -3) (undo-tree-id12724 . -3) (undo-tree-id12725 . -3) (undo-tree-id12726 . -3) (undo-tree-id12727 . -3) (undo-tree-id12728 . -3) (undo-tree-id12729 . -7) (undo-tree-id12730 . -8) (undo-tree-id12731 . -9) (undo-tree-id12732 . -9) (undo-tree-id12733 . -10) (undo-tree-id12734 . -10) (undo-tree-id12735 . -10) (undo-tree-id12736 . -10) (undo-tree-id12737 . -10) (undo-tree-id12738 . -10) (undo-tree-id12739 . -10) (undo-tree-id12740 . -11) (undo-tree-id12741 . -11) (undo-tree-id12742 . -12) (undo-tree-id12743 . 1) (undo-tree-id12744 . -13) (undo-tree-id12745 . -12) (undo-tree-id12746 . -12) (undo-tree-id12747 . -12) (undo-tree-id12748 . -12) (undo-tree-id12749 . -12) (undo-tree-id12750 . -13) (undo-tree-id12751 . -13) (undo-tree-id12752 . -13) (undo-tree-id12753 . -13) (undo-tree-id12754 . -13) (undo-tree-id12755 . -13) (undo-tree-id12756 . -13) (undo-tree-id12757 . -13) (undo-tree-id12758 . -13) (undo-tree-id12759 . -13) (undo-tree-id12760 . -13) (undo-tree-id12761 . -13) (undo-tree-id12762 . -13) (undo-tree-id12763 . -13) (undo-tree-id12764 . -13) (undo-tree-id12765 . -13) (undo-tree-id12766 . -13) (undo-tree-id12767 . -13) (undo-tree-id12768 . -13) (undo-tree-id12769 . -13) (undo-tree-id12770 . -13) (undo-tree-id12771 . -13) (undo-tree-id12772 . -13) (undo-tree-id12773 . -13) (undo-tree-id12774 . -13) (undo-tree-id12775 . -13) (undo-tree-id12776 . -13) (undo-tree-id12777 . -13) (undo-tree-id12778 . -13) (undo-tree-id12779 . -13) (undo-tree-id12780 . -13) (undo-tree-id12781 . -13) (undo-tree-id12782 . -13) (undo-tree-id12783 . -13) (undo-tree-id12784 . -13) (undo-tree-id12785 . -13) (undo-tree-id12786 . -13) (undo-tree-id12787 . -13) (undo-tree-id12788 . -14) (undo-tree-id12789 . -14) (undo-tree-id12790 . -15) (undo-tree-id12791 . -15)) nil (26418 19578 387401 583000) 0 nil])
([nil nil ((nil rear-nonsticky nil 761 . 762) (nil fontified nil 747 . 762) (747 . 762) 746) nil (26418 19578 387360 880000) 0 nil])
([nil nil ((762 . 763)) nil (26418 19578 387359 541000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -733) (undo-tree-id12694 . 1) (undo-tree-id12695 . 1) (undo-tree-id12696 . 1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) 734) nil (26418 19585 136682 752000) 0 nil])
([nil nil ((561 . 568) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -561) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -562) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -563) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) 564 (555 . 564) (#("i" 0 1 (fontified t)) . -555) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (#("s" 0 1 (fontified t)) . -556) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (#("t" 0 1 (fontified t)) . -557) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) 558 (555 . 558) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -555) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -556) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -557) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -558) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) 559 (551 . 559) (550 . 551) (549 . 550) (t 26418 19578 405003 118000) 506) nil (26418 19802 772465 653000) 0 nil] [nil nil ((#("  termination_by h.length
" 0 2 (fontified t) 2 16 (face lsp-face-semhl-keyword fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 16 17 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 17 18 (face lsp-face-semhl-variable fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 18 19 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 19 25 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11)) 25 26 (fontified t)) . 957) (undo-tree-id13012 . 9) (undo-tree-id13013 . -25) (undo-tree-id13014 . -2) (undo-tree-id13015 . -2) (undo-tree-id13016 . -2) (undo-tree-id13017 . -2) (undo-tree-id13018 . -2) (undo-tree-id13019 . -2) (undo-tree-id13020 . -2) (undo-tree-id13021 . -2) (undo-tree-id13022 . -2) (undo-tree-id13023 . -2) (undo-tree-id13024 . -2) (undo-tree-id13025 . -2) (undo-tree-id13026 . -2) (undo-tree-id13027 . -2) (undo-tree-id13028 . -2) (undo-tree-id13029 . -2) (undo-tree-id13030 . -17) (undo-tree-id13031 . -17) (undo-tree-id13032 . -17) (undo-tree-id13033 . -17) (undo-tree-id13034 . -17) (undo-tree-id13035 . -17) (undo-tree-id13036 . -17) (undo-tree-id13037 . -17) (undo-tree-id13038 . -17) (undo-tree-id13039 . -17) (undo-tree-id13040 . -17) (undo-tree-id13041 . -17) (undo-tree-id13042 . -17) (undo-tree-id13043 . -17) (undo-tree-id13044 . -17) (undo-tree-id13045 . -17) (undo-tree-id13046 . -17) (undo-tree-id13047 . -17) (undo-tree-id13048 . -13) (undo-tree-id13049 . -13) (undo-tree-id13050 . -13) (undo-tree-id13051 . -13) (undo-tree-id13052 . -16) (undo-tree-id13053 . -16) (undo-tree-id13054 . -16) (undo-tree-id13055 . -16) (undo-tree-id13056 . -16) (undo-tree-id13057 . -16) (undo-tree-id13058 . -26) 973 (t 26418 19578 405003 118000)) ((957 . 983)) (26418 19585 136227 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 594 . 595) (nil fontified nil 568 . 595) (568 . 595) 567) nil (26418 19802 771731 131000) 0 nil])
nil
([nil nil ((595 . 598)) nil (26418 19802 771730 471000) 0 nil])
([nil nil ((#("{pre:= tail, s := s₁}" 0 4 (fontified t match-data (0 0)) 4 6 (face font-lock-constant-face fontified t match-data (0 0)) 6 7 (fontified t match-data (0 0)) 7 11 (face lsp-face-semhl-variable fontified t match-data (0 0)) 11 15 (fontified t match-data (0 0)) 15 16 (face font-lock-constant-face fontified t match-data (0 0)) 16 17 (face font-lock-constant-face fontified t match-data (0 0)) 17 18 (fontified t match-data (0 0)) 18 20 (face lsp-face-semhl-variable fontified t match-data (0 0)) 20 21 (fontified t match-data (0 0))) . 981) (undo-tree-id13146 . -20) (undo-tree-id13147 . 20) (undo-tree-id13148 . -20) (undo-tree-id13149 . -20) (undo-tree-id13150 . -20) (undo-tree-id13151 . -20) (undo-tree-id13152 . -21) (undo-tree-id13153 . -21) 1001) nil (26418 19802 771729 705000) 0 nil])
([nil nil ((981 . 993)) nil (26418 19802 771725 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 618 . 619) (nil fontified nil 598 . 619) (598 . 619) 597) nil (26418 19802 771725 247000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -653) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) 654 (648 . 653) (647 . 650) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -647) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) 648 (654 . 657) (#("-" 0 1 (fontified t)) . -654) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) 655 (645 . 655) (#("c" 0 1 (face lsp-face-semhl-variable fontified t)) . -645) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) 646 (644 . 646) (640 . 644) (638 . 640) (637 . 638) (630 . 637) (627 . 630) (625 . 627) (624 . 625) (612 . 624) (#("m" 0 1 (fontified t)) . -612) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (#("a" 0 1 (fontified t)) . -613) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (#("t" 0 1 (fontified t)) . -614) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (#("h" 0 1 (fontified t)) . -615) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) 616 (612 . 616) (610 . 612) (609 . 610) (609 . 610) (#("l" 0 1 (fontified t)) . -605) (undo-tree-id13140 . -1) 606 (597 . 606) (#("h" 0 1 (fontified t)) . -597) (undo-tree-id13141 . -1) (#("i" 0 1 (fontified t)) . -598) (undo-tree-id13142 . -1) (#("s" 0 1 (fontified t)) . -599) (undo-tree-id13143 . -1) (#("t" 0 1 (fontified t)) . -600) (undo-tree-id13144 . -1) (#(" " 0 1 (fontified t)) . -601) (undo-tree-id13145 . -1) 602 (594 . 602)) nil (26418 19802 771721 69000) 0 nil])
([nil nil ((662 . 663) (#(" " 0 1 (fontified nil)) . 662) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (#("
" 0 1 (fontified t)) . -663) (undo-tree-id13075 . -1) (undo-tree-id13076 . 1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) 655) nil (26418 19802 771496 886000) 0 nil])
([nil nil ((619 . 623)) nil (26418 19802 771476 805000) 0 nil])
([nil nil ((631 . 633)) nil (26418 19802 771476 368000) 0 nil])
([nil nil ((646 . 648)) nil (26418 19802 771475 986000) 0 nil])
([nil nil ((635 . 640)) nil (26418 19802 771475 587000) 0 nil])
([nil nil ((655 . 660)) nil (26418 19802 771475 139000) 0 nil])
([nil nil ((703 . 706)) nil (26418 19802 771474 164000) 0 nil])
([nil nil ((704 . 710)) nil (26418 19802 771469 673000) 0 nil])
([nil nil ((710 . 714) (t 26418 19802 817213 203000)) nil (26418 20004 945226 764000) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-function-name-face fontified t)) . -710) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -1) (undo-tree-id13962 . -1) (undo-tree-id13963 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -711) (undo-tree-id13964 . -1) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -712) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -713) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) 714) nil (26418 20004 945224 688000) 0 nil])
([nil nil ((710 . 714)) nil (26418 20004 945204 471000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -712) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (#("t" 0 1 (fontified t)) . -713) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) 714) nil (26418 20004 945203 401000) 0 nil])
([nil nil ((712 . 713)) nil (26418 20004 945195 783000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -709) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -710) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -711) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -712) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) 713) nil (26418 20004 945193 184000) 0 nil])
([nil nil ((709 . 710)) nil (26418 20004 945152 64000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -702) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (#("
" 0 1 (fontified t)) . -703) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t)) . -704) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -705) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t)) . -706) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t)) . -707) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t)) . -708) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (#(" " 0 1 (fontified t)) . -709) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) 710) nil (26418 20004 945141 884000) 0 nil])
([nil nil ((703 . 705)) nil (26418 20004 943952 374000) 0 nil])
([nil nil ((704 . 720)) nil (26418 20004 943951 845000) 0 nil])
([nil nil ((710 . 715)) nil (26418 20004 943951 441000) 0 nil])
([nil nil ((725 . 734)) nil (26418 20004 943951 58000) 0 nil])
([nil nil ((734 . 740)) nil (26418 20004 943950 680000) 0 nil])
([nil nil ((739 . 742)) nil (26418 20004 943950 280000) 0 nil])
([nil nil ((#("L" 0 1 (face lsp-face-semhl-variable fontified t)) . -741) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) 742) nil (26418 20004 943949 540000) 0 nil])
([nil nil ((741 . 742)) nil (26418 20004 943943 379000) 0 nil])
([nil nil ((742 . 751)) nil (26418 20004 943943 55000) 0 nil])
([nil nil ((752 . 755)) nil (26418 20004 943942 670000) 0 nil])
([nil nil ((754 . 757)) nil (26418 20004 943942 286000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -754) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (#("." 0 1 (fontified t)) . -755) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (#("l" 0 1 (fontified t)) . -756) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) 757) nil (26418 20004 943940 822000) 0 nil])
([nil nil ((754 . 770)) nil (26418 20004 943923 928000) 0 nil])
([nil nil ((770 . 776)) nil (26418 20004 943923 610000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -771) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (#(" " 0 1 (fontified t)) . -772) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (#(" " 0 1 (fontified t)) . -773) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (#(" " 0 1 (fontified t)) . -774) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (#(" " 0 1 (fontified t)) . -775) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) 776) nil (26418 20004 943921 698000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -770) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) 771) nil (26418 20004 943897 302000) 0 nil])
([nil nil ((771 . 779)) nil (26418 20004 943889 192000) 0 nil])
([nil nil ((776 . 783) (#("eat" 0 3 (fontified nil)) . -776) (776 . 779) (#("eattail" 0 7 (fontified nil)) . -776) (776 . 783) (#("eat" 0 3 (fontified t)) . -776) (undo-tree-id13317 . -3) (undo-tree-id13318 . -3) (undo-tree-id13319 . -3) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -3) (undo-tree-id13323 . -3) (undo-tree-id13324 . -3) (undo-tree-id13325 . -3) (undo-tree-id13326 . -3) (undo-tree-id13327 . -3) (undo-tree-id13328 . -3) (undo-tree-id13329 . -3) (undo-tree-id13330 . -3) 779) nil (26418 20004 943888 0) 0 nil])
([nil nil ((783 . 792)) nil (26418 20004 943880 456000) 0 nil])
([nil nil ((792 . 801)) nil (26418 20004 943879 983000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -798) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (#("h" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -799) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -800) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) 801) nil (26418 20004 943878 730000) 0 nil])
([nil nil ((798 . 810)) nil (26418 20004 943723 732000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -807) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -808) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) (#("y" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -809) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) 810) nil (26418 20004 943721 441000) 0 nil])
([nil nil ((807 . 809)) nil (26418 20004 943698 255000) 0 nil])
([nil nil ((809 . 810)) nil (26418 20004 943694 457000) 0 nil])
([nil nil ((805 . 811) (#("s" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -805) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (#("o" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -806) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -807) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -808) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (#("y" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -809) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) 810 (1168 . 1176) (#("      " 0 6 (fontified t match-data (0 0))) . 1168) (undo-tree-id14337 . -4) (undo-tree-id14338 . -6) (undo-tree-id14339 . -4) (undo-tree-id14340 . -4) (undo-tree-id14341 . -4) (undo-tree-id14342 . -6) (undo-tree-id14343 . -6) (undo-tree-id14344 . -6) 1174 (1172 . 1174) (1168 . 1172) (1167 . 1168) (1168 . 1176) (#("      " 0 6 (fontified t match-data (0 0))) . 1168) (undo-tree-id14345 . -6) (undo-tree-id14346 . -4) (undo-tree-id14347 . -6) (undo-tree-id14348 . -6) (undo-tree-id14349 . -6) 1174 (1172 . 1174) (1168 . 1172) (1167 . 1168) (t 26418 20004 992125 315000)) nil (26418 20186 274652 250000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 810) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . 1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1)) nil (26418 20186 274069 555000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -805) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -1) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -1) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (#("x" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -806) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -807) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (#("c" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -808) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . 1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -809) (undo-tree-id14238 . 1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) 810) nil (26418 20186 274056 132000) 0 nil])
([nil nil ((805 . 810)) nil (26418 20186 273176 889000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -805) (undo-tree-id15417 . -1) (#("o" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -806) (undo-tree-id15418 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -807) (undo-tree-id15419 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -808) (undo-tree-id15420 . -1) (#("y" 0 1 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3))) . -809) (undo-tree-id15421 . -1) 810 (t 26418 20186 291984 616000)) nil (26418 21052 910149 695000) 0 nil])
([nil nil ((805 . 812)) nil (26418 21052 910146 327000) 0 nil])
([nil nil ((805 . 808)) nil (26418 21052 910145 712000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -805) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (#("y" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -806) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -807) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (#("s" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -808) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -809) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -810) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (#("p" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 3 0 1 1 2 2 3))) . -811) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (#("[" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -812) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (#("q" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 3 0 1 1 2 2 3))) . -813) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (#("]" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -814) (undo-tree-id15416 . -1) 815) nil (26418 21052 910143 702000) 0 nil])
([nil nil ((805 . 810)) nil (26418 21052 910126 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 0))) . -1167) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1168) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1169) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1170) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1171) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1172) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1173) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1174) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1175) (undo-tree-id15383 . -1) 1176) nil (26418 21052 910124 911000) 0 nil])
([nil nil ((#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1238) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (#("e" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1239) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (#("n" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1240) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (#("g" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1241) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1242) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (#("h" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1243) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) 1244) nil (26418 21052 910112 916000) 0 nil])
([nil nil ((1238 . 1241)) nil (26418 21052 910105 613000) 0 nil])
([nil nil ((1203 . 1209)) nil (26418 21052 910105 221000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 0))) . -1207) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (#("." 0 1 (fontified t match-data (0 0))) . -1208) (undo-tree-id15350 . -1) 1209) nil (26418 21052 910104 637000) 0 nil])
([nil nil ((1207 . 1216)) nil (26418 21052 910102 619000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 0))) . -1220) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1221) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -1222) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1223) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1224) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -1225) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1226) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (#("l" 0 1 (fontified t match-data (0 0))) . -1227) (undo-tree-id15347 . -1) 1228) nil (26418 21052 910101 22000) 0 nil])
([nil nil ((1220 . 1221)) nil (26418 21052 910092 337000) 0 nil])
([nil nil ((1203 . 1204)) nil (26418 21052 910091 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 0))) . -1216) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1217) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1218) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (#("i" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1219) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (#("l" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1220) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) 1221) nil (26418 21052 910090 898000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t match-data (0 0))) . -1204) (undo-tree-id15319 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1205) (undo-tree-id15320 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1206) (undo-tree-id15321 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1207) (undo-tree-id15322 . -1) 1208) nil (26418 21052 910084 873000) 0 nil])
([nil nil ((1204 . 1208)) nil (26418 21052 910081 724000) 0 nil])
([nil nil ((#("t" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1204) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (#("a" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1205) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (#("i" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1206) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (#("l" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1207) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) 1208) nil (26418 21052 910080 520000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 0))) . -1204) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) 1205) nil (26418 21052 910072 559000) 0 nil])
([nil nil ((1204 . 1206)) nil (26418 21052 910070 957000) 0 nil])
([nil nil ((940 . 942)) nil (26418 21052 910070 487000) 0 nil])
([nil nil ((941 . 953)) nil (26418 21052 910070 29000) 0 nil])
([nil nil ((947 . 952)) nil (26418 21052 910069 552000) 0 nil])
([nil nil ((#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -942) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (#("v" 0 1 (face lsp-face-semhl-keyword fontified t)) . -943) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t)) . -944) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (#("l" 0 1 (face lsp-face-semhl-keyword fontified t)) . -945) (undo-tree-id15300 . -1) 946) nil (26418 21052 910068 662000) 0 nil])
([nil nil ((942 . 947)) nil (26418 21052 910064 189000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -940) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) (undo-tree-id15220 . -1) (#("#" 0 1 (face lsp-face-semhl-keyword fontified t)) . -941) (undo-tree-id15221 . -1) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -942) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (#("h" 0 1 (face lsp-face-semhl-keyword fontified t)) . -943) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -944) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -945) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (#("k" 0 1 (face lsp-face-semhl-keyword fontified t)) . -946) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (#(" " 0 1 (fontified t)) . -947) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . 1) (#("L" 0 1 (fontified t)) . -948) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (#("i" 0 1 (fontified t)) . -949) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (#("s" 0 1 (fontified t)) . -950) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (#("t" 0 1 (fontified t)) . -951) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (#("." 0 1 (fontified t)) . -952) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (#("s" 0 1 (fontified t)) . -953) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (#("i" 0 1 (fontified t)) . -954) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (#("z" 0 1 (fontified t)) . -955) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (#("e" 0 1 (fontified t)) . -956) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (#("O" 0 1 (fontified t)) . -957) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (#("f" 0 1 (fontified t)) . -958) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) 959) nil (26418 21052 910060 729000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -939) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) 940) nil (26418 21052 910022 197000) 0 nil])
([nil nil ((1240 . 1241)) nil (26418 21052 910018 647000) 0 nil])
([nil nil ((1241 . 1242)) nil (26418 21052 910018 219000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1241) (undo-tree-id15210 . -1) 1242) nil (26418 21052 910017 622000) 0 nil])
([nil nil ((1241 . 1243)) nil (26418 21052 910016 295000) 0 nil])
([nil nil ((1243 . 1256)) nil (26418 21052 910015 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1253) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) 1254) nil (26418 21052 910015 120000) 0 nil])
([nil nil ((1253 . 1254)) nil (26418 21052 910013 646000) 0 nil])
([nil nil ((#("p" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1237) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (#("r" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1238) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (#("e" 0 1 (face lsp-face-semhl-property fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1239) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) 1240) nil (26418 21052 910012 479000) 0 nil])
([nil nil ((1237 . 1243)) nil (26418 21052 910000 909000) 0 nil])
([nil nil ((1260 . 1262)) nil (26418 21052 910000 543000) 0 nil])
([nil nil ((1262 . 1264)) nil (26418 21052 909999 926000) 0 nil])
([nil nil ((719 . 720)) nil (26418 21052 909999 389000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -719) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) 720) nil (26418 21052 909998 724000) 0 nil])
([nil nil ((1732 . 1733)) nil (26418 21052 909997 43000) 0 nil])
([nil nil ((720 . 721)) nil (26418 21052 909996 533000) 0 nil])
([nil nil ((1260 . 1266)) nil (26418 21052 909996 74000) 0 nil])
([nil nil ((1261 . 1262)) nil (26418 21052 909995 563000) 0 nil])
([nil nil ((1262 . 1264)) nil (26418 21052 909995 167000) 0 nil])
([nil nil ((1264 . 1266)) nil (26418 21052 909994 763000) 0 nil])
([nil nil ((991 . 1005)) nil (26418 21052 909994 269000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face fontified t)) . -991) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -992) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -993) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -994) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -995) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -996) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -997) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -998) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -999) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1000) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (#("b" 0 1 (face font-lock-function-name-face fontified t)) . -1001) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -1002) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1003) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) 1004) nil (26418 21052 909990 285000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -991) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) (undo-tree-id15085 . -1) (undo-tree-id15086 . -1) 992) nil (26418 21052 909930 410000) 0 nil])
([nil nil ((987 . 1001)) nil (26418 21052 909925 500000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-warning-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1280) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (#("o" 0 1 (face font-lock-warning-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1281) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1282) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (#("r" 0 1 (face font-lock-warning-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1283) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (undo-tree-id15061 . -1) (#("y" 0 1 (face font-lock-warning-face fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1284) (undo-tree-id15062 . -1) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) (undo-tree-id15075 . -1) (undo-tree-id15076 . -1) (undo-tree-id15077 . -1) (undo-tree-id15078 . -1) 1285) nil (26418 21052 909922 287000) 0 nil])
([nil nil ((1280 . 1294)) nil (26418 21052 909879 311000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1293) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) 1294) nil (26418 21052 909878 402000) 0 nil])
([nil nil ((1293 . 1298)) nil (26418 21052 909873 309000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1280) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (undo-tree-id14373 . -1) (undo-tree-id14374 . -1) (undo-tree-id14375 . -1) (undo-tree-id14376 . -1) (undo-tree-id14377 . -1) (undo-tree-id14378 . -1) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) (undo-tree-id14385 . -1) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (#("i" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1281) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) (undo-tree-id14408 . -1) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -1) (undo-tree-id14412 . -1) (undo-tree-id14413 . -1) (undo-tree-id14414 . -1) (undo-tree-id14415 . -1) (undo-tree-id14416 . -1) (undo-tree-id14417 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) (undo-tree-id14423 . -1) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (undo-tree-id14438 . -1) (undo-tree-id14439 . -1) (undo-tree-id14440 . -1) (undo-tree-id14441 . -1) (undo-tree-id14442 . -1) (undo-tree-id14443 . -1) (undo-tree-id14444 . -1) (undo-tree-id14445 . -1) (undo-tree-id14446 . -1) (undo-tree-id14447 . -1) (undo-tree-id14448 . -1) (undo-tree-id14449 . -1) (undo-tree-id14450 . -1) (undo-tree-id14451 . -1) (undo-tree-id14452 . -1) (undo-tree-id14453 . -1) (#("s" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1282) (undo-tree-id14454 . -1) (undo-tree-id14455 . -1) (undo-tree-id14456 . -1) (undo-tree-id14457 . -1) (undo-tree-id14458 . -1) (undo-tree-id14459 . -1) (undo-tree-id14460 . -1) (undo-tree-id14461 . -1) (undo-tree-id14462 . -1) (undo-tree-id14463 . -1) (undo-tree-id14464 . -1) (undo-tree-id14465 . -1) (undo-tree-id14466 . -1) (undo-tree-id14467 . -1) (undo-tree-id14468 . -1) (undo-tree-id14469 . -1) (undo-tree-id14470 . -1) (undo-tree-id14471 . -1) (undo-tree-id14472 . -1) (undo-tree-id14473 . -1) (undo-tree-id14474 . -1) (undo-tree-id14475 . -1) (undo-tree-id14476 . -1) (undo-tree-id14477 . -1) (undo-tree-id14478 . -1) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (#("t" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1283) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) (undo-tree-id14541 . -1) (undo-tree-id14542 . -1) (undo-tree-id14543 . -1) (undo-tree-id14544 . -1) (undo-tree-id14545 . -1) (undo-tree-id14546 . -1) (undo-tree-id14547 . -1) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (#("." 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1284) (undo-tree-id14550 . -1) (undo-tree-id14551 . -1) (undo-tree-id14552 . -1) (undo-tree-id14553 . -1) (undo-tree-id14554 . -1) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (undo-tree-id14557 . -1) (undo-tree-id14558 . -1) (undo-tree-id14559 . -1) (undo-tree-id14560 . -1) (undo-tree-id14561 . -1) (undo-tree-id14562 . -1) (undo-tree-id14563 . -1) (undo-tree-id14564 . -1) (undo-tree-id14565 . -1) (undo-tree-id14566 . -1) (undo-tree-id14567 . -1) (undo-tree-id14568 . -1) (undo-tree-id14569 . -1) (undo-tree-id14570 . -1) (undo-tree-id14571 . -1) (undo-tree-id14572 . -1) (undo-tree-id14573 . -1) (undo-tree-id14574 . -1) (undo-tree-id14575 . -1) (undo-tree-id14576 . -1) (undo-tree-id14577 . -1) (undo-tree-id14578 . -1) (undo-tree-id14579 . -1) (undo-tree-id14580 . -1) (undo-tree-id14581 . -1) (undo-tree-id14582 . -1) (undo-tree-id14583 . -1) (undo-tree-id14584 . -1) (undo-tree-id14585 . -1) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (#("e" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1285) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) (undo-tree-id14629 . -1) (undo-tree-id14630 . -1) (undo-tree-id14631 . -1) (undo-tree-id14632 . -1) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (#("a" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1286) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (#("t" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1287) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (undo-tree-id14690 . -1) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (undo-tree-id14709 . -1) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (#("s" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1288) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (undo-tree-id14714 . -1) (undo-tree-id14715 . -1) (undo-tree-id14716 . -1) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (#("h" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1289) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (#("r" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1290) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (#("i" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1291) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (#("n" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1292) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (#("k" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1293) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (#("s" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1294) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1295) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (#("h" 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1296) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (#(" " 0 1 (fontified t match-data (0 11 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11))) . -1297) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) 1298) nil (26418 21052 909851 424000) 0 nil])
([nil nil ((1280 . 1285)) nil (26418 21052 907670 123000) 0 nil])
([nil nil ((1009 . 1016) (1292 . 1310) (1291 . 1293) (t 26418 21052 958009 118000)) nil (26418 21269 502219 891000) 0 nil])
([nil nil ((1221 . 1223) (#("a" 0 1 (fontified t match-data (0 0))) . -1221) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1222) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) 1223 (1221 . 1222) (#("b" 0 1 (fontified t match-data (0 0))) . -1221) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) 1222 (1222 . 1229)) nil (26418 21269 502218 391000) 0 nil])
([nil nil ((1218 . 1229) (#("probabi" 0 7 (fontified nil)) . -1218) (1218 . 1225) (#("probability" 0 11 (fontified nil)) . -1218) (1218 . 1229) (#("probabi" 0 7 (fontified t match-data (0 0))) . -1218) (undo-tree-id15646 . -7) (undo-tree-id15647 . 2) (undo-tree-id15648 . -7) (undo-tree-id15649 . -3) (undo-tree-id15650 . -3) (undo-tree-id15651 . -3) (undo-tree-id15652 . -3) (undo-tree-id15653 . -3) (undo-tree-id15654 . -3) (undo-tree-id15655 . -3) (undo-tree-id15656 . -3) (undo-tree-id15657 . -5) (undo-tree-id15658 . -5) (undo-tree-id15659 . -5) (undo-tree-id15660 . -5) (undo-tree-id15661 . -5) (undo-tree-id15662 . -5) (undo-tree-id15663 . -4) (undo-tree-id15664 . -4) (undo-tree-id15665 . -4) (undo-tree-id15666 . -5) (undo-tree-id15667 . -6) (undo-tree-id15668 . -7) (undo-tree-id15669 . -7) (undo-tree-id15670 . -7) (undo-tree-id15671 . -7) (undo-tree-id15672 . -7) (undo-tree-id15673 . -7) (undo-tree-id15674 . -7) 1225) nil (26418 21269 502210 452000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 0))) . 1229) (undo-tree-id15643 . 1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1)) nil (26418 21269 502196 338000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 0))) . 1229) (undo-tree-id15640 . 1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1)) nil (26418 21269 502194 479000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 0))) . 1229) (undo-tree-id15637 . 1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1)) nil (26418 21269 502192 942000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t match-data (0 0))) . 1229) (undo-tree-id15632 . 1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1)) nil (26418 21269 502191 75000) 0 nil])
([nil nil ((1381 . 1383) (1380 . 1381) (1366 . 1380) (1345 . 1366) (#("*" 0 1 (fontified t)) . -1345) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) 1346 (1345 . 1346) (1332 . 1345) (#("P" 0 1 (face lsp-face-semhl-variable fontified t)) . -1332) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (1331 . 1333) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -1331) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) 1332 (1324 . 1332)) nil (26418 21269 502186 475000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1085) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15597 . -1) 1086) nil (26418 21269 502053 554000) 0 nil])
([nil nil ((1085 . 1087)) nil (26418 21269 502048 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1383 . 1384) (#("
" 0 1 (fontified nil)) . -1594) (1381 . 1595) 1380) nil (26418 21269 502048 240000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 1379) (undo-tree-id15575 . -2) (undo-tree-id15576 . -1) (undo-tree-id15577 . -2) (undo-tree-id15578 . -2) (undo-tree-id15579 . -2) (undo-tree-id15580 . -2) (undo-tree-id15581 . -2) (undo-tree-id15582 . -2) (undo-tree-id15583 . -2) (undo-tree-id15584 . -1) (undo-tree-id15585 . -1) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -3) 1380) nil (26418 21269 502046 479000) 0 nil])
([nil nil ((#("if m.s₀ = h.s then 1. else 0." 0 2 (face lsp-face-semhl-keyword fontified t match-data (0 0)) 2 3 (fontified t match-data (0 0)) 3 4 (face lsp-face-semhl-variable fontified t match-data (0 0)) 4 5 (fontified t match-data (0 0)) 5 7 (face lsp-face-semhl-property fontified t match-data (0 0)) 7 8 (fontified t match-data (0 0)) 8 9 (face font-lock-constant-face fontified t match-data (0 0)) 9 10 (fontified t match-data (0 0)) 10 11 (face lsp-face-semhl-variable fontified t match-data (0 0)) 11 12 (fontified t match-data (0 0)) 12 13 (face lsp-face-semhl-property fontified t match-data (0 0)) 13 14 (fontified t match-data (0 0)) 14 18 (face lsp-face-semhl-keyword fontified t match-data (0 0)) 18 19 (fontified t match-data (0 0)) 19 20 (face font-lock-constant-face fontified t match-data (0 0)) 20 22 (fontified t match-data (0 0)) 22 26 (face lsp-face-semhl-keyword fontified t match-data (0 0)) 26 27 (fontified t match-data (0 0)) 27 28 (face font-lock-constant-face fontified t match-data (0 0)) 28 29 (fontified t match-data (0 0))) . 1418) (undo-tree-id15572 . -28) (undo-tree-id15573 . -29) (undo-tree-id15574 . -29)) nil (26418 21269 501419 217000) 0 nil])
([nil nil ((1587 . 1593) (1566 . 1587) (1565 . 1566) (1567 . 1568) (#(">" 0 1 (face font-lock-comment-face fontified t)) . -1567) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) 1568 (1566 . 1568) (1565 . 1566) (1562 . 1565) (#("/" 0 1 (face font-lock-constant-face fontified t)) . -1562) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (#("/" 0 1 (face font-lock-constant-face fontified t)) . -1563) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) 1564 (1562 . 1564) (1561 . 1562) (1637 . 1638) (1637 . 1640) (1560 . 1561) (1634 . 1645) (#("N" 0 1 (fontified t)) . -1634) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) 1635 (1629 . 1635) (1624 . 1629) (#("\\" 0 1 (fontified t)) . -1624) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (#("s" 0 1 (fontified t)) . -1625) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (#(" " 0 1 (fontified t)) . -1626) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) 1627 (1619 . 1627) (1617 . 1619) (#("L" 0 1 (fontified t)) . -1617) (undo-tree-id15469 . -1) (undo-tree-id15470 . -1) (#(" " 0 1 (fontified t)) . -1618) (undo-tree-id15471 . -1) (undo-tree-id15472 . -1) 1619 (1606 . 1619) (#("P" 0 1 (fontified t)) . -1606) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (#("D" 0 1 (fontified t)) . -1607) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (#(" " 0 1 (fontified t)) . -1608) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) 1609 (1600 . 1609) (#("*" 0 1 (face font-lock-constant-face fontified t)) . -1600) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) 1601 (1594 . 1601) (#(" " 0 1 (fontified t)) . -1594) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (#("E" 0 1 (fontified t)) . -1595) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (#("q" 0 1 (fontified t)) . -1596) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) 1597 (1586 . 1597) (1564 . 1586) (1561 . 1564) (1560 . 1563) (1466 . 1467) (#("P" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -1466) (undo-tree-id15557 . -1) 1467 (1483 . 1489) (#("p" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1483) (undo-tree-id15558 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1484) (undo-tree-id15559 . -1) (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1485) (undo-tree-id15560 . -1) (#("b" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1486) (undo-tree-id15561 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1487) (undo-tree-id15562 . -1) (#("b" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1488) (undo-tree-id15563 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1489) (undo-tree-id15564 . -1) (#("l" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1490) (undo-tree-id15565 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1491) (undo-tree-id15566 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1492) (undo-tree-id15567 . -1) (#("y" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1493) (undo-tree-id15568 . -1) 1494 (1480 . 1481) (#("_" 0 1 (fontified t match-data (0 0))) . -1480) (undo-tree-id15569 . -1) 1481 (1480 . 1481) (#(")" 0 1 (fontified t match-data (0 0))) . -1480) (undo-tree-id15570 . -1) 1481 (1480 . 1481) (#("*" 0 1 (face font-lock-constant-face fontified t match-data (0 0))) . -1480) (undo-tree-id15571 . -1) 1481 (1418 . 1420)) nil (26418 21269 501407 643000) 0 nil])
([nil nil ((431 . 435) (431 . 432) (431 . 432) (421 . 431) (409 . 421) (405 . 409) (406 . 418) (405 . 407) (404 . 406) (#("
" 0 1 (fontified t)) . -942) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) 943 (96 . 97) (95 . 96) (t 26418 21269 550682 997000) 95) nil (26418 21709 733942 926000) 0 nil])
([nil nil ((440 . 441) (431 . 432) (434 . 438)) nil (26418 21709 733933 307000) 0 nil])
([nil nil ((442 . 443) (#("
" 0 1 (fontified t)) . -442) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) 440) nil (26418 21709 733931 966000) 0 nil])
([nil nil ((438 . 446)) nil (26418 21709 733919 315000) 0 nil])
([nil nil ((464 . 477)) nil (26418 21709 733918 686000) 0 nil])
([nil nil ((122 . 123)) nil (26418 21709 733918 138000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-constant-face fontified t)) . -122) (undo-tree-id15809 . -1) 123) nil (26418 21709 733917 469000) 0 nil])
([nil nil ((122 . 128)) nil (26418 21709 733916 211000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -122) (undo-tree-id15803 . -1) (#("h" 0 1 (fontified t)) . -123) (undo-tree-id15804 . -1) (#("e" 0 1 (fontified t)) . -124) (undo-tree-id15805 . -1) (#("c" 0 1 (fontified t)) . -125) (undo-tree-id15806 . -1) (#("k" 0 1 (fontified t)) . -126) (undo-tree-id15807 . -1) (#(" " 0 1 (fontified t)) . -127) (undo-tree-id15808 . -1) 128) nil (26418 21709 733914 912000) 0 nil])
([nil nil ((122 . 135)) nil (26418 21709 733910 378000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -129) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (#("a" 0 1 (fontified t)) . -130) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (#("s" 0 1 (fontified t)) . -131) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (#("S" 0 1 (fontified t)) . -132) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (#("u" 0 1 (fontified t)) . -133) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (#("m" 0 1 (fontified t)) . -134) (undo-tree-id15802 . -1) 135) nil (26418 21709 733908 989000) 0 nil])
([nil nil ((129 . 132)) nil (26418 21709 733894 935000) 0 nil])
([nil nil ((96 . 97)) nil (26418 21709 733894 623000) 0 nil])
([nil nil ((96 . 105)) nil (26418 21709 733894 61000) 0 nil])
([nil nil ((105 . 126)) nil (26418 21709 733893 659000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -123) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (#("P" 0 1 (fontified t)) . -124) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (#("r" 0 1 (fontified t)) . -125) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) 126) nil (26418 21709 733892 825000) 0 nil])
([nil nil ((123 . 138)) nil (26418 21709 733888 973000) 0 nil])
([nil nil ((138 . 151)) nil (26418 21709 733888 480000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -146) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (#("a" 0 1 (fontified t)) . -147) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (#("s" 0 1 (fontified t)) . -148) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (#("i" 0 1 (fontified t)) . -149) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (#("c" 0 1 (fontified t)) . -150) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) 151) nil (26418 21709 733887 259000) 0 nil])
([nil nil ((146 . 152)) nil (26418 21709 733877 527000) 0 nil])
([nil nil ((153 . 174)) nil (26418 21709 733877 218000) 0 nil])
([nil nil ((174 . 179)) nil (26418 21709 733876 776000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -168) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (#("r" 0 1 (fontified t)) . -169) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (#("o" 0 1 (fontified t)) . -170) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (#("b" 0 1 (fontified t)) . -171) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (#("a" 0 1 (fontified t)) . -172) (undo-tree-id15728 . -1) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (#("b" 0 1 (fontified t)) . -173) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (#("i" 0 1 (fontified t)) . -174) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (#("l" 0 1 (fontified t)) . -175) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (#("i" 0 1 (fontified t)) . -176) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (#("t" 0 1 (fontified t)) . -177) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (#("y" 0 1 (fontified t)) . -178) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) 179) nil (26418 21709 733873 476000) 0 nil])
([nil nil ((168 . 174)) nil (26418 21709 733836 6000) 0 nil])
([nil nil ((174 . 176)) nil (26418 21709 733835 118000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -173) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) (#("n" 0 1 (fontified t)) . -174) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (#("s" 0 1 (fontified t)) . -175) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) 176) nil (26418 21709 733833 265000) 0 nil])
([nil nil ((173 . 183)) nil (26418 21709 733823 714000) 0 nil])
([nil nil ((180 . 185) (#("Basic" 0 5 (fontified nil)) . -180) (180 . 185) (#("Bas" 0 3 (fontified t)) . -180) (undo-tree-id15689 . -3) (undo-tree-id15690 . -3) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -3) (undo-tree-id15694 . -3) (undo-tree-id15695 . -3) 183) nil (26418 21709 733819 184000) 0 nil])
([nil nil ((550 . 555) (#("{" 0 1 (fontified t)) . -550) (undo-tree-id15902 . -1) (undo-tree-id15903 . -1) (undo-tree-id15904 . -1) (undo-tree-id15905 . -1) (undo-tree-id15906 . -1) (undo-tree-id15907 . -1) (undo-tree-id15908 . -1) (undo-tree-id15909 . -1) (undo-tree-id15910 . -1) (undo-tree-id15911 . -1) (undo-tree-id15912 . -1) (undo-tree-id15913 . -1) (undo-tree-id15914 . -1) (undo-tree-id15915 . -1) (undo-tree-id15916 . -1) (undo-tree-id15917 . -1) (undo-tree-id15918 . -1) (undo-tree-id15919 . -1) (undo-tree-id15920 . -1) (undo-tree-id15921 . -1) (undo-tree-id15922 . -1) (undo-tree-id15923 . -1) (#("h" 0 1 (fontified t)) . -551) (undo-tree-id15924 . -1) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (#(" " 0 1 (fontified t)) . -552) (undo-tree-id15946 . -1) (undo-tree-id15947 . -1) (undo-tree-id15948 . -1) (undo-tree-id15949 . -1) (undo-tree-id15950 . -1) (undo-tree-id15951 . -1) (undo-tree-id15952 . -1) (undo-tree-id15953 . -1) (undo-tree-id15954 . -1) (undo-tree-id15955 . -1) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (#(":" 0 1 (fontified t)) . -553) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (#(" " 0 1 (fontified t)) . -554) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (#("H" 0 1 (fontified t)) . -555) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) 556 (#("i" 0 1 (fontified t)) . -556) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (#("s" 0 1 (fontified t)) . -557) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (#("t" 0 1 (fontified t)) . -558) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) (undo-tree-id16084 . -1) (undo-tree-id16085 . -1) (undo-tree-id16086 . -1) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (#(" " 0 1 (fontified t)) . -559) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (#("/" 0 1 (fontified t face font-lock-constant-face)) . -560) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (#("/" 0 1 (fontified t face font-lock-constant-face)) . -561) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (#(" " 0 1 (fontified t)) . -562) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (#("H" 0 1 (fontified t)) . -563) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (#("a" 0 1 (fontified t)) . -564) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (#("s" 0 1 (fontified t)) . -565) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (#("P" 0 1 (fontified t)) . -566) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (#("r" 0 1 (fontified t)) . -567) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (#("e" 0 1 (fontified t)) . -568) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (#("f" 0 1 (fontified t)) . -569) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (#("i" 0 1 (fontified t)) . -570) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (#("x" 0 1 (fontified t)) . -571) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (#(" " 0 1 (fontified t)) . -572) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (#("p" 0 1 (fontified t)) . -573) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (#("r" 0 1 (fontified t)) . -574) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (#("e" 0 1 (fontified t)) . -575) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (#("}" 0 1 (fontified t)) . -576) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) 577 (t 26418 21709 743594 937000)) nil (26418 21736 126523 553000) 0 nil])
([nil nil ((#("def HistPref {σ α : Type} (pre : Hist σ α) := sorry
" 0 3 (face lsp-face-semhl-keyword fontified t) 3 4 (fontified t) 4 12 (face font-lock-function-name-face fontified t) 12 14 (fontified t) 14 15 (face lsp-face-semhl-variable fontified t) 15 16 (fontified t) 16 17 (face lsp-face-semhl-variable fontified t) 17 20 (fontified t) 20 24 (face font-lock-type-face fontified t) 24 27 (fontified t) 27 30 (face lsp-face-semhl-variable fontified t) 30 38 (fontified t) 38 39 (face lsp-face-semhl-variable fontified t) 39 40 (fontified t) 40 41 (face lsp-face-semhl-variable fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (face font-lock-constant-face fontified t) 44 45 (face font-lock-constant-face fontified t) 45 46 (fontified t) 46 51 (face font-lock-warning-face fontified t) 51 52 (fontified t)) . 504) (undo-tree-id15836 . 10) (undo-tree-id15837 . -51) (undo-tree-id15838 . -45) (undo-tree-id15839 . -45) (undo-tree-id15840 . -45) (undo-tree-id15841 . -45) (undo-tree-id15842 . -45) (undo-tree-id15843 . -45) (undo-tree-id15844 . -45) (undo-tree-id15845 . -45) (undo-tree-id15846 . -45) (undo-tree-id15847 . -45) (undo-tree-id15848 . -45) (undo-tree-id15849 . -45) (undo-tree-id15850 . -45) (undo-tree-id15851 . -42) (undo-tree-id15852 . -41) (undo-tree-id15853 . -46) (undo-tree-id15854 . -46) (undo-tree-id15855 . -46) (undo-tree-id15856 . -46) (undo-tree-id15857 . -46) (undo-tree-id15858 . -46) (undo-tree-id15859 . -46) (undo-tree-id15860 . -46) (undo-tree-id15861 . -46) (undo-tree-id15862 . -46) (undo-tree-id15863 . -46) (undo-tree-id15864 . -46) (undo-tree-id15865 . -46) (undo-tree-id15866 . -46) (undo-tree-id15867 . -46) (undo-tree-id15868 . -46) (undo-tree-id15869 . -46) (undo-tree-id15870 . -46) (undo-tree-id15871 . -46) (undo-tree-id15872 . 1) (undo-tree-id15873 . -51) (undo-tree-id15874 . -51) (undo-tree-id15875 . -51) (undo-tree-id15876 . -51) (undo-tree-id15877 . -51) (undo-tree-id15878 . -51) (undo-tree-id15879 . -51) (undo-tree-id15880 . -52) (undo-tree-id15881 . -51) (undo-tree-id15882 . -51) (undo-tree-id15883 . -51) (undo-tree-id15884 . -42) (undo-tree-id15885 . -42) (undo-tree-id15886 . -42) (undo-tree-id15887 . -42) (undo-tree-id15888 . -42) (undo-tree-id15889 . -42) (undo-tree-id15890 . -42) (undo-tree-id15891 . -42) (undo-tree-id15892 . -41) (undo-tree-id15893 . -41) (undo-tree-id15894 . -41) (undo-tree-id15895 . -41) (undo-tree-id15896 . -41) (undo-tree-id15897 . -41) (undo-tree-id15898 . -41) (undo-tree-id15899 . -41) (undo-tree-id15900 . -41) (undo-tree-id15901 . -52) 545) nil (26418 21736 125400 773000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 503) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (t 26418 21736 146511 986000)) nil (26418 22174 919537 13000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-constant-face fontified t)) . -504) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) 505 (504 . 505) (503 . 505) (502 . 503) 502) nil (26418 22174 919533 870000) 0 nil])
([nil nil ((#("import Mathlib.Probability.ProbabilityMassFunction.Basic
" 0 6 (face lsp-face-semhl-keyword fontified t) 6 56 (fontified t) 56 57 (fontified t)) . 96) (undo-tree-id16479 . -55) (undo-tree-id16480 . 14) (undo-tree-id16481 . -56) (undo-tree-id16482 . -55) (undo-tree-id16483 . -42) (undo-tree-id16484 . -43) (undo-tree-id16485 . -43) (undo-tree-id16486 . -43) (undo-tree-id16487 . -43) (undo-tree-id16488 . -43) (undo-tree-id16489 . -43) (undo-tree-id16490 . -43) (undo-tree-id16491 . -43) (undo-tree-id16492 . -43) (undo-tree-id16493 . -43) (undo-tree-id16494 . -42) (undo-tree-id16495 . -42) (undo-tree-id16496 . -42) (undo-tree-id16497 . -42) (undo-tree-id16498 . -42) (undo-tree-id16499 . -57) 138) nil (26418 22174 919249 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 129 . 130) (#("
" 0 1 (fontified nil)) . -186) (129 . 187)) nil (26418 22174 919239 19000) 0 nil])
([nil nil ((222 . 223) 222) nil (26418 22174 919238 340000) 0 nil])
([nil nil ((222 . 226)) nil (26418 22174 919237 702000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -223) (undo-tree-id16476 . -1) (#("c" 0 1 (fontified t)) . -224) (undo-tree-id16477 . -1) (#("h" 0 1 (fontified t)) . -225) (undo-tree-id16478 . -1) 226) nil (26418 22174 919236 97000) 0 nil])
([nil nil ((223 . 229)) nil (26418 22174 919225 731000) 0 nil])
([nil nil ((229 . 235)) nil (26418 22174 919221 286000) 0 nil])
([nil nil ((211 . 213) (t 26418 22174 941647 470000)) nil (26418 22549 569508 638000) 0 nil])
([nil nil ((224 . 225)) nil (26418 22549 569507 927000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -221) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (#("F" 0 1 (fontified t)) . -222) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) 223) nil (26418 22549 569506 777000) 0 nil])
([nil nil ((221 . 224)) nil (26418 22549 569503 581000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -222) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (#("F" 0 1 (fontified t)) . -223) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) 224) nil (26418 22549 569502 510000) 0 nil])
([nil nil ((222 . 223)) nil (26418 22549 569496 998000) 0 nil])
([nil nil ((239 . 241)) nil (26418 22549 569496 465000) 0 nil])
([nil nil ((240 . 244)) nil (26418 22549 569495 635000) 0 nil])
([nil nil ((#("ȩ" 0 1 (fontified t)) . -241) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (#("h" 0 1 (fontified t)) . -242) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (#("c" 0 1 (fontified t)) . -243) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) 244) nil (26418 22549 569494 30000) 0 nil])
([nil nil ((241 . 250)) nil (26418 22549 569478 630000) 0 nil])
([nil nil ((#("Σ" 0 1 (face font-lock-constant-face fontified t)) . -247) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (#("u" 0 1 (face lsp-face-semhl-variable fontified t)) . -248) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (#("m" 0 1 (face lsp-face-semhl-variable fontified t)) . -249) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) 250) nil (26418 22549 569477 224000) 0 nil])
([nil nil ((247 . 249)) nil (26418 22549 569466 239000) 0 nil])
([nil nil ((#("Σ" 0 1 (face font-lock-constant-face fontified t)) . -247) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) 248) nil (26418 22549 569465 318000) 0 nil])
([nil nil ((247 . 252)) nil (26418 22549 569459 688000) 0 nil])
([nil nil ((247 . 252) (#("Sigm" 0 4 (fontified nil)) . -247) (247 . 251) (#("Sigma" 0 5 (fontified nil)) . -247) (247 . 252) (#("Sigm" 0 4 (fontified t)) . -247) (undo-tree-id16573 . -4) (undo-tree-id16574 . -4) (undo-tree-id16575 . -4) (undo-tree-id16576 . -4) (undo-tree-id16577 . -4) (undo-tree-id16578 . -4) (undo-tree-id16579 . -4) (undo-tree-id16580 . -4) (undo-tree-id16581 . -4) (undo-tree-id16582 . -4) (undo-tree-id16583 . -4) (undo-tree-id16584 . -4) 251) nil (26418 22549 569458 77000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -252) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) 253) nil (26418 22549 569449 364000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -534) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (#("
" 0 1 (fontified t)) . -535) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (#("
" 0 1 (fontified t)) . -536) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (#("
" 0 1 (fontified t)) . -537) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) 538) nil (26418 22549 569442 372000) 0 nil])
([nil nil ((835 . 838)) nil (26418 22549 569284 494000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -494) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (#("r" 0 1 (fontified t)) . -495) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (#("e" 0 1 (fontified t)) . -496) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) 497 (456 . 459) (450 . 456) (#("s" 0 1 (face lsp-face-semhl-keyword fontified t)) . -450) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -451) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t)) . -452) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -453) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -454) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -455) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -456) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (#("r" 0 1 (face lsp-face-semhl-keyword fontified t)) . -457) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (#("e" 0 1 (face lsp-face-semhl-keyword fontified t)) . -458) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) 459 (515 . 520) (254 . 264) (253 . 254) (874 . 875) (#("h" 0 1 (fontified t)) . -874) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) 875 (870 . 878) (857 . 871) (#("\\" 0 1 (fontified t)) . -857) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (#("s" 0 1 (fontified t)) . -858) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (#(" " 0 1 (fontified t)) . -859) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) 860 (848 . 860) (#("P" 0 1 (face font-lock-function-name-face fontified t)) . -848) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) (undo-tree-id17027 . -1) (undo-tree-id17028 . -1) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -1) (undo-tree-id17033 . -1) (undo-tree-id17034 . -1) (undo-tree-id17035 . -1) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -849) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) (undo-tree-id17088 . -1) (undo-tree-id17089 . -1) (undo-tree-id17090 . -1) (undo-tree-id17091 . -1) (undo-tree-id17092 . -1) (undo-tree-id17093 . -1) (undo-tree-id17094 . -1) (undo-tree-id17095 . -1) (undo-tree-id17096 . -1) (undo-tree-id17097 . -1) (undo-tree-id17098 . -1) (undo-tree-id17099 . -1) (undo-tree-id17100 . -1) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -850) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) (undo-tree-id17109 . -1) (undo-tree-id17110 . -1) (undo-tree-id17111 . -1) (undo-tree-id17112 . -1) (undo-tree-id17113 . -1) (undo-tree-id17114 . -1) (undo-tree-id17115 . -1) (undo-tree-id17116 . -1) (undo-tree-id17117 . -1) (undo-tree-id17118 . -1) (undo-tree-id17119 . -1) (undo-tree-id17120 . -1) (undo-tree-id17121 . -1) (undo-tree-id17122 . -1) (undo-tree-id17123 . -1) (undo-tree-id17124 . -1) (undo-tree-id17125 . -1) (undo-tree-id17126 . -1) (undo-tree-id17127 . -1) (undo-tree-id17128 . -1) (undo-tree-id17129 . -1) (undo-tree-id17130 . -1) (undo-tree-id17131 . -1) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -851) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) (undo-tree-id17186 . -1) (undo-tree-id17187 . -1) (undo-tree-id17188 . -1) (undo-tree-id17189 . -1) (undo-tree-id17190 . -1) (undo-tree-id17191 . -1) (undo-tree-id17192 . -1) (undo-tree-id17193 . -1) (undo-tree-id17194 . -1) (undo-tree-id17195 . -1) (undo-tree-id17196 . -1) (undo-tree-id17197 . -1) (undo-tree-id17198 . -1) (undo-tree-id17199 . -1) (undo-tree-id17200 . -1) (undo-tree-id17201 . -1) (undo-tree-id17202 . -1) (undo-tree-id17203 . -1) (undo-tree-id17204 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -852) (undo-tree-id17205 . -1) (undo-tree-id17206 . -1) (undo-tree-id17207 . -1) (undo-tree-id17208 . -1) (undo-tree-id17209 . -1) (undo-tree-id17210 . -1) (undo-tree-id17211 . -1) (undo-tree-id17212 . -1) (undo-tree-id17213 . -1) (undo-tree-id17214 . -1) (undo-tree-id17215 . -1) (undo-tree-id17216 . -1) (undo-tree-id17217 . -1) (undo-tree-id17218 . -1) (undo-tree-id17219 . -1) (undo-tree-id17220 . -1) (undo-tree-id17221 . -1) (undo-tree-id17222 . -1) (undo-tree-id17223 . -1) (undo-tree-id17224 . -1) (undo-tree-id17225 . -1) (undo-tree-id17226 . -1) (undo-tree-id17227 . -1) (undo-tree-id17228 . -1) (undo-tree-id17229 . -1) (undo-tree-id17230 . -1) (undo-tree-id17231 . -1) (undo-tree-id17232 . -1) (undo-tree-id17233 . -1) (undo-tree-id17234 . -1) (undo-tree-id17235 . -1) (undo-tree-id17236 . -1) (undo-tree-id17237 . -1) (undo-tree-id17238 . -1) (undo-tree-id17239 . -1) (undo-tree-id17240 . -1) (undo-tree-id17241 . -1) (undo-tree-id17242 . -1) (undo-tree-id17243 . -1) (undo-tree-id17244 . -1) (undo-tree-id17245 . -1) (undo-tree-id17246 . -1) (undo-tree-id17247 . -1) (undo-tree-id17248 . -1) (undo-tree-id17249 . -1) (undo-tree-id17250 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -853) (undo-tree-id17251 . -1) (undo-tree-id17252 . -1) (undo-tree-id17253 . -1) (undo-tree-id17254 . -1) (undo-tree-id17255 . -1) (undo-tree-id17256 . -1) (undo-tree-id17257 . -1) (undo-tree-id17258 . -1) (undo-tree-id17259 . -1) (undo-tree-id17260 . -1) (undo-tree-id17261 . -1) (undo-tree-id17262 . -1) (undo-tree-id17263 . -1) (undo-tree-id17264 . -1) (undo-tree-id17265 . -1) (undo-tree-id17266 . -1) (undo-tree-id17267 . -1) (undo-tree-id17268 . -1) (undo-tree-id17269 . -1) (undo-tree-id17270 . -1) (undo-tree-id17271 . -1) (undo-tree-id17272 . -1) (undo-tree-id17273 . -1) (undo-tree-id17274 . -1) (undo-tree-id17275 . -1) (undo-tree-id17276 . -1) (undo-tree-id17277 . -1) (undo-tree-id17278 . -1) (undo-tree-id17279 . -1) (undo-tree-id17280 . -1) (undo-tree-id17281 . -1) (undo-tree-id17282 . -1) (undo-tree-id17283 . -1) (undo-tree-id17284 . -1) (undo-tree-id17285 . -1) (undo-tree-id17286 . -1) (undo-tree-id17287 . -1) (undo-tree-id17288 . -1) 854 (853 . 854) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -853) (undo-tree-id17289 . -1) (undo-tree-id17290 . -1) (undo-tree-id17291 . -1) (undo-tree-id17292 . -1) (undo-tree-id17293 . -1) (undo-tree-id17294 . -1) (undo-tree-id17295 . -1) (undo-tree-id17296 . -1) (undo-tree-id17297 . -1) (undo-tree-id17298 . -1) 854 (836 . 854) (t 26418 22549 618747 310000)) nil (26418 22932 37087 232000) 0 nil])
([nil nil ((#("  init s : σ
" 0 7 (fontified t) 7 8 (fontified t) 8 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . 510) (undo-tree-id16874 . -12) (undo-tree-id16875 . -2) (undo-tree-id16876 . -2) (undo-tree-id16877 . -2) (undo-tree-id16878 . -2) (undo-tree-id16879 . -2) (undo-tree-id16880 . -2) (undo-tree-id16881 . -2) (undo-tree-id16882 . -2) (undo-tree-id16883 . -2) (undo-tree-id16884 . -2) (undo-tree-id16885 . -2) (undo-tree-id16886 . -7) (undo-tree-id16887 . -7) (undo-tree-id16888 . -7) (undo-tree-id16889 . -13) (undo-tree-id16890 . -7) (undo-tree-id16891 . -7) (undo-tree-id16892 . -7) (undo-tree-id16893 . -2) (undo-tree-id16894 . -2) (undo-tree-id16895 . -2) (undo-tree-id16896 . -13) 512) nil (26418 22932 36879 582000) 0 nil])
([nil nil ((492 . 505) 494) nil (26418 22932 36288 512000) 0 nil])
([nil nil ((544 . 545) (#("\\" 0 1 (fontified t)) . -544) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (#("s" 0 1 (fontified t)) . -545) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) 546 (539 . 548) (#("h" 0 1 (fontified t)) . -539) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (#("i" 0 1 (fontified t)) . -540) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (#("s" 0 1 (fontified t)) . -541) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (#("t" 0 1 (fontified t)) . -542) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (#(" " 0 1 (fontified t)) . -543) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (#("s" 0 1 (fontified t)) . -544) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) 545 (542 . 545) (520 . 542) (#("c" 0 1 (fontified t)) . -520) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (#("o" 0 1 (fontified t)) . -521) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (#("n" 0 1 (fontified t)) . -522) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (#("s" 0 1 (fontified t)) . -523) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) 524 (518 . 524) (518 . 520) 516 (518 . 519) (500 . 502) (502 . 513) (#(" " 0 1 (fontified t)) . -500) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (#("s" 0 1 (face lsp-face-semhl-variable fontified t)) . -501) (undo-tree-id16871 . -1) (#(" " 0 1 (fontified t)) . -502) (undo-tree-id16872 . -1) (#(":" 0 1 (fontified t)) . -503) (undo-tree-id16873 . -1) 504 (494 . 496)) nil (26418 22932 36283 67000) 0 nil])
([nil nil ((#(" : List (σ × α)
" 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (face font-lock-constant-face fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t rear-nonsticky t) 15 16 (fontified t)) . 550) (undo-tree-id16715 . 1) (undo-tree-id16716 . -15) (undo-tree-id16717 . -3) (undo-tree-id16718 . -16) (undo-tree-id16719 . -16) (undo-tree-id16720 . -16) (undo-tree-id16721 . -16) (undo-tree-id16722 . -16) (undo-tree-id16723 . -16) (undo-tree-id16724 . -16) (undo-tree-id16725 . -16) (undo-tree-id16726 . -16) (undo-tree-id16727 . -16) (undo-tree-id16728 . -16) (undo-tree-id16729 . -16) (undo-tree-id16730 . -16) (undo-tree-id16731 . -16) (undo-tree-id16732 . -16) (undo-tree-id16733 . -16) (undo-tree-id16734 . -16) (undo-tree-id16735 . -16) (undo-tree-id16736 . -16) (undo-tree-id16737 . -14) (undo-tree-id16738 . -14) (undo-tree-id16739 . -14) (undo-tree-id16740 . -14) (undo-tree-id16741 . -14) (undo-tree-id16742 . -14) (undo-tree-id16743 . -14) (undo-tree-id16744 . -14) (undo-tree-id16745 . -14) (undo-tree-id16746 . -14) (undo-tree-id16747 . -16) 564) nil (26418 22932 35697 987000) 0 nil])
([nil nil ((#("  --post : List (α × σ)
" 0 2 (fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 8 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 8 17 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 17 18 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 18 19 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 19 20 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 20 21 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 21 22 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 22 23 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 23 24 (face font-lock-comment-face fontified t rear-nonsticky t)) . 550) (undo-tree-id16695 . 24) (undo-tree-id16696 . -23) (undo-tree-id16697 . -24) (undo-tree-id16698 . -14) (undo-tree-id16699 . -22) (undo-tree-id16700 . -22) (undo-tree-id16701 . -23) (undo-tree-id16702 . -14) (undo-tree-id16703 . -14) (undo-tree-id16704 . -14) (undo-tree-id16705 . -14) (undo-tree-id16706 . -14) (undo-tree-id16707 . -24) (undo-tree-id16708 . -14) (undo-tree-id16709 . -14) (undo-tree-id16710 . -14) (undo-tree-id16711 . -14) (undo-tree-id16712 . -14) (undo-tree-id16713 . -14) (undo-tree-id16714 . -24) 564) nil (26418 22932 35680 891000) 0 nil])
([nil nil ((537 . 539) (#(":" 0 1 (fontified t)) . -537) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (#(" " 0 1 (fontified t)) . -538) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) 539) nil (26418 22932 35667 340000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -685) (undo-tree-id17949 . -1) (#("." 0 1 (fontified t)) . -686) (undo-tree-id17950 . -1) (#("p" 0 1 (fontified t)) . -687) (undo-tree-id17951 . -1) (#("r" 0 1 (fontified t)) . -688) (undo-tree-id17952 . -1) (#("e" 0 1 (fontified t)) . -689) (undo-tree-id17953 . -1) (#("." 0 1 (fontified t)) . -690) (undo-tree-id17954 . -1) (#("l" 0 1 (fontified t)) . -691) (undo-tree-id17955 . -1) (#("e" 0 1 (fontified t)) . -692) (undo-tree-id17956 . -1) (#("n" 0 1 (fontified t)) . -693) (undo-tree-id17957 . -1) (#("g" 0 1 (fontified t)) . -694) (undo-tree-id17958 . -1) (#("t" 0 1 (fontified t)) . -695) (undo-tree-id17959 . -1) (#("h" 0 1 (fontified t)) . -696) (undo-tree-id17960 . -1) 697 (t 26418 22932 49212 16000)) nil (26418 23399 323321 733000) 0 nil])
([nil nil ((685 . 689)) nil (26418 23399 323309 787000) 0 nil])
([nil nil ((689 . 694)) nil (26418 23399 323309 228000) 0 nil])
([nil nil ((694 . 700)) nil (26418 23399 323308 631000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-constant-face fontified t)) . -699) (undo-tree-id17948 . -1) 700) nil (26418 23399 323307 827000) 0 nil])
([nil nil ((699 . 707)) nil (26418 23399 323306 46000) 0 nil])
([nil nil ((685 . 686)) nil (26418 23399 323305 250000) 0 nil])
([nil nil ((686 . 688)) nil (26418 23399 323304 721000) 0 nil])
([nil nil ((550 . 553)) nil (26418 23399 323304 339000) 0 nil])
([nil nil ((552 . 565)) nil (26418 23399 323303 948000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -564) (undo-tree-id17947 . -1) 565) nil (26418 23399 323303 423000) 0 nil])
([nil nil ((564 . 567)) nil (26418 23399 323302 434000) 0 nil])
([nil nil ((527 . 532)) nil (26418 23399 323302 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -531) (undo-tree-id17945 . -1) (undo-tree-id17946 . -1) 532) nil (26418 23399 323301 452000) 0 nil])
([nil nil ((531 . 535)) nil (26418 23399 323300 86000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -532) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (#("s" 0 1 (fontified t)) . -533) (undo-tree-id17941 . -1) (undo-tree-id17942 . -1) (#(" " 0 1 (fontified t)) . -534) (undo-tree-id17943 . -1) (undo-tree-id17944 . -1) 535) nil (26418 23399 323299 150000) 0 nil])
([nil nil ((532 . 535)) nil (26418 23399 323295 766000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -534) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) 535) nil (26418 23399 323295 24000) 0 nil])
([nil nil ((534 . 539)) nil (26418 23399 323293 598000) 0 nil])
([nil nil ((536 . 538) (#("-" 0 1 (fontified t)) . -536) (undo-tree-id17934 . -1) (#(">" 0 1 (fontified t)) . -537) (undo-tree-id17935 . -1) (#(" " 0 1 (fontified t)) . -538) (undo-tree-id17936 . -1) 539) nil (26418 23399 323292 649000) 0 nil])
([nil nil ((739 . 742)) nil (26418 23399 323290 269000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -739) (undo-tree-id17931 . -1) (#("u" 0 1 (fontified t)) . -740) (undo-tree-id17932 . -1) (#("n" 0 1 (fontified t)) . -741) (undo-tree-id17933 . -1) 742) nil (26418 23399 323289 148000) 0 nil])
([nil nil ((739 . 752)) nil (26418 23399 323286 713000) 0 nil])
([nil nil ((752 . 758)) nil (26418 23399 323286 128000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -756) (undo-tree-id17929 . -1) (#("p" 0 1 (fontified t)) . -757) (undo-tree-id17930 . -1) 758) nil (26418 23399 323285 355000) 0 nil])
([nil nil ((756 . 764)) nil (26418 23399 323283 332000) 0 nil])
([nil nil ((760 . 766) (#("leng" 0 4 (fontified nil)) . -760) (760 . 764) (#("length" 0 6 (fontified nil)) . -760) (760 . 766) (#("leng" 0 4 (fontified t)) . -760) (undo-tree-id17925 . -4) (undo-tree-id17926 . -4) (undo-tree-id17927 . -4) (undo-tree-id17928 . -4) 764) nil (26418 23399 323282 323000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -760) (undo-tree-id17919 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -761) (undo-tree-id17920 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -762) (undo-tree-id17921 . -1) (#("g" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -763) (undo-tree-id17922 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -764) (undo-tree-id17923 . -1) (#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -765) (undo-tree-id17924 . -1) 766) nil (26418 23399 323278 501000) 0 nil])
([nil nil ((760 . 770)) nil (26418 23399 323274 580000) 0 nil])
([nil nil ((726 . 729)) nil (26418 23399 323274 76000) 0 nil])
([nil nil ((727 . 742)) nil (26418 23399 323273 674000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -741) (undo-tree-id17918 . -1) 742) nil (26418 23399 323272 919000) 0 nil])
([nil nil ((741 . 747)) nil (26418 23399 323271 993000) 0 nil])
([nil nil ((747 . 748)) nil (26418 23399 323271 570000) 0 nil])
([nil nil ((742 . 746)) nil (26418 23399 323271 58000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -743) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (#(" " 0 1 (fontified t)) . -744) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -745) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) 746) nil (26418 23399 323270 31000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -742) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) 743) nil (26418 23399 323266 89000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -729) (undo-tree-id17875 . -1) (undo-tree-id17876 . -1) (#("i" 0 1 (fontified t)) . -730) (undo-tree-id17877 . -1) (undo-tree-id17878 . -1) (#("v" 0 1 (fontified t)) . -731) (undo-tree-id17879 . -1) (undo-tree-id17880 . -1) (#("e" 0 1 (fontified t)) . -732) (undo-tree-id17881 . -1) (undo-tree-id17882 . -1) (#(" " 0 1 (fontified t)) . -733) (undo-tree-id17883 . -1) (undo-tree-id17884 . -1) (#(":" 0 1 (face font-lock-constant-face fontified t)) . -734) (undo-tree-id17885 . -1) (undo-tree-id17886 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -735) (undo-tree-id17887 . -1) (undo-tree-id17888 . -1) (#(" " 0 1 (fontified t)) . -736) (undo-tree-id17889 . -1) (undo-tree-id17890 . -1) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t)) . -737) (undo-tree-id17891 . -1) (undo-tree-id17892 . -1) (#("u" 0 1 (face lsp-face-semhl-keyword fontified t)) . -738) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (#("n" 0 1 (face lsp-face-semhl-keyword fontified t)) . -739) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (#(" " 0 1 (fontified t)) . -740) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -741) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (#(" " 0 1 (fontified t)) . -742) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -743) (undo-tree-id17903 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t)) . -744) (undo-tree-id17904 . -1) (#(" " 0 1 (fontified t)) . -745) (undo-tree-id17905 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -746) (undo-tree-id17906 . -1) (#(" " 0 1 (fontified t)) . -747) (undo-tree-id17907 . -1) (#("}" 0 1 (fontified t)) . -748) (undo-tree-id17908 . -1) (#(" " 0 1 (fontified t)) . -749) (undo-tree-id17909 . -1) 750) nil (26418 23399 323261 996000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -726) (undo-tree-id17869 . -1) (undo-tree-id17870 . -1) (#("m" 0 1 (fontified t)) . -727) (undo-tree-id17871 . -1) (undo-tree-id17872 . -1) (#("o" 0 1 (fontified t)) . -728) (undo-tree-id17873 . -1) (undo-tree-id17874 . -1) 729) nil (26418 23399 323181 379000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -707) (undo-tree-id17865 . -1) (#(" " 0 1 (fontified t)) . -708) (undo-tree-id17866 . -1) (#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -709) (undo-tree-id17867 . -1) (#(" " 0 1 (fontified t)) . -710) (undo-tree-id17868 . -1) 711) nil (26418 23399 323177 120000) 0 nil])
([nil nil ((706 . 710)) nil (26418 23399 323173 773000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . -717) (undo-tree-id17858 . -1) (undo-tree-id17859 . -1) (#("i" 0 1 (fontified t)) . -718) (undo-tree-id17860 . -1) (undo-tree-id17861 . -1) (#("s" 0 1 (fontified t)) . -719) (undo-tree-id17862 . -1) (undo-tree-id17863 . -1) (#("t" 0 1 (fontified t)) . -720) (undo-tree-id17864 . -1) 721) nil (26418 23399 323172 673000) 0 nil])
([nil nil ((717 . 718)) nil (26418 23399 323168 596000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -717) (undo-tree-id17857 . -1) 718) nil (26418 23399 323167 856000) 0 nil])
([nil nil ((717 . 721)) nil (26418 23399 323166 794000) 0 nil])
([nil nil ((770 . 772)) nil (26418 23399 323166 336000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -425) (undo-tree-id17816 . -1) (undo-tree-id17817 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -426) (undo-tree-id17818 . -1) (undo-tree-id17819 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -427) (undo-tree-id17820 . -1) (undo-tree-id17821 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -428) (undo-tree-id17822 . -1) (undo-tree-id17823 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -429) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -430) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -431) (undo-tree-id17828 . -1) (undo-tree-id17829 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -432) (undo-tree-id17830 . -1) (undo-tree-id17831 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -433) (undo-tree-id17832 . -1) (undo-tree-id17833 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -434) (undo-tree-id17834 . -1) (undo-tree-id17835 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -435) (undo-tree-id17836 . -1) (undo-tree-id17837 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -436) (undo-tree-id17838 . -1) (undo-tree-id17839 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -437) (undo-tree-id17840 . -1) (undo-tree-id17841 . -1) (#("<" 0 1 (face font-lock-comment-face fontified t)) . -438) (undo-tree-id17842 . -1) (undo-tree-id17843 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -439) (undo-tree-id17844 . -1) (undo-tree-id17845 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -440) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -441) (undo-tree-id17848 . -1) (undo-tree-id17849 . -1) (#("," 0 1 (face font-lock-comment-face fontified t)) . -442) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -443) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -444) (undo-tree-id17854 . -1) (undo-tree-id17855 . -1) (#(">" 0 1 (face font-lock-comment-face fontified t)) . -445) (undo-tree-id17856 . -1) 446) nil (26418 23399 323162 827000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -404) (undo-tree-id17774 . -1) (undo-tree-id17775 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -405) (undo-tree-id17776 . -1) (undo-tree-id17777 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -406) (undo-tree-id17778 . -1) (undo-tree-id17779 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -407) (undo-tree-id17780 . -1) (undo-tree-id17781 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -408) (undo-tree-id17782 . -1) (undo-tree-id17783 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -409) (undo-tree-id17784 . -1) (undo-tree-id17785 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -410) (undo-tree-id17786 . -1) (undo-tree-id17787 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -411) (undo-tree-id17788 . -1) (undo-tree-id17789 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -412) (undo-tree-id17790 . -1) (undo-tree-id17791 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -413) (undo-tree-id17792 . -1) (undo-tree-id17793 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -414) (undo-tree-id17794 . -1) (undo-tree-id17795 . -1) (#("." 0 1 (fontified t face font-lock-comment-face)) . -415) (undo-tree-id17796 . -1) (undo-tree-id17797 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -416) (undo-tree-id17798 . -1) (undo-tree-id17799 . -1) (#("S" 0 1 (fontified t face font-lock-comment-face)) . -417) (undo-tree-id17800 . -1) (undo-tree-id17801 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -418) (undo-tree-id17802 . -1) (undo-tree-id17803 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -419) (undo-tree-id17804 . -1) (undo-tree-id17805 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -420) (undo-tree-id17806 . -1) (undo-tree-id17807 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -421) (undo-tree-id17808 . -1) (undo-tree-id17809 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -422) (undo-tree-id17810 . -1) (undo-tree-id17811 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -423) (undo-tree-id17812 . -1) (undo-tree-id17813 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -424) (undo-tree-id17814 . -1) (undo-tree-id17815 . -1) 425) nil (26418 23399 323137 328000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -383) (undo-tree-id17732 . -1) (undo-tree-id17733 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -384) (undo-tree-id17734 . -1) (undo-tree-id17735 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -385) (undo-tree-id17736 . -1) (undo-tree-id17737 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -386) (undo-tree-id17738 . -1) (undo-tree-id17739 . -1) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -387) (undo-tree-id17740 . -1) (undo-tree-id17741 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -388) (undo-tree-id17742 . -1) (undo-tree-id17743 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -389) (undo-tree-id17744 . -1) (undo-tree-id17745 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -390) (undo-tree-id17746 . -1) (undo-tree-id17747 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -391) (undo-tree-id17748 . -1) (undo-tree-id17749 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -392) (undo-tree-id17750 . -1) (undo-tree-id17751 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -393) (undo-tree-id17752 . -1) (undo-tree-id17753 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -394) (undo-tree-id17754 . -1) (undo-tree-id17755 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -395) (undo-tree-id17756 . -1) (undo-tree-id17757 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -396) (undo-tree-id17758 . -1) (undo-tree-id17759 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -397) (undo-tree-id17760 . -1) (undo-tree-id17761 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -398) (undo-tree-id17762 . -1) (undo-tree-id17763 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -399) (undo-tree-id17764 . -1) (undo-tree-id17765 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -400) (undo-tree-id17766 . -1) (undo-tree-id17767 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -401) (undo-tree-id17768 . -1) (undo-tree-id17769 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -402) (undo-tree-id17770 . -1) (undo-tree-id17771 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -403) (undo-tree-id17772 . -1) (undo-tree-id17773 . -1) 404) nil (26418 23399 323110 203000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -362) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -363) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -364) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -365) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -366) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -367) (undo-tree-id17700 . -1) (undo-tree-id17701 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -368) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -369) (undo-tree-id17704 . -1) (undo-tree-id17705 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -370) (undo-tree-id17706 . -1) (undo-tree-id17707 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -371) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -372) (undo-tree-id17710 . -1) (undo-tree-id17711 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -373) (undo-tree-id17712 . -1) (undo-tree-id17713 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -374) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -375) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -376) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -377) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -378) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -379) (undo-tree-id17724 . -1) (undo-tree-id17725 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -380) (undo-tree-id17726 . -1) (undo-tree-id17727 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -381) (undo-tree-id17728 . -1) (undo-tree-id17729 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -382) (undo-tree-id17730 . -1) (undo-tree-id17731 . -1) 383) nil (26418 23399 323084 749000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -341) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -342) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -343) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -344) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -345) (undo-tree-id17656 . -1) (undo-tree-id17657 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -346) (undo-tree-id17658 . -1) (undo-tree-id17659 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -347) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -348) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -349) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -350) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -351) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -352) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -353) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -354) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -355) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -356) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -357) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -358) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -359) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -360) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -361) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) 362) nil (26418 23399 323059 309000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -333) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -334) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -335) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -336) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -337) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -338) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -339) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -340) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) 341) nil (26418 23399 323033 948000) 0 nil])
([nil nil ((600 . 601)) nil (26418 23399 322976 773000) 0 nil])
([nil nil ((603 . 605)) nil (26418 23399 322976 318000) 0 nil])
([nil nil ((602 . 603) 601) nil (26418 23399 322975 816000) 0 nil])
([nil nil ((603 . 609)) nil (26418 23399 322975 121000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -606) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (#("c" 0 1 (fontified t)) . -607) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (#(" " 0 1 (fontified t)) . -608) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) 609) nil (26418 23399 322973 508000) 0 nil])
([nil nil ((606 . 611)) nil (26418 23399 322520 953000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -602) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) (undo-tree-id17447 . -1) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (#("m" 0 1 (face lsp-face-semhl-keyword fontified t)) . -603) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) (undo-tree-id17474 . -1) (undo-tree-id17475 . -1) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (#("a" 0 1 (face lsp-face-semhl-keyword fontified t)) . -604) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (#("t" 0 1 (face lsp-face-semhl-keyword fontified t)) . -605) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (#("c" 0 1 (face lsp-face-semhl-keyword fontified t)) . -606) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) (undo-tree-id17538 . -1) (undo-tree-id17539 . -1) (undo-tree-id17540 . -1) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (undo-tree-id17543 . -1) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) (undo-tree-id17548 . -1) (undo-tree-id17549 . -1) (#("h" 0 1 (face lsp-face-semhl-keyword fontified t)) . -607) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (#(" " 0 1 (fontified t)) . -608) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -609) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (#(" " 0 1 (fontified t)) . -610) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) 611) nil (26418 23399 322513 868000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -580) (undo-tree-id17413 . -1) (undo-tree-id17414 . -1) (undo-tree-id17415 . -1) (undo-tree-id17416 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -581) (undo-tree-id17417 . -1) (undo-tree-id17418 . -1) (undo-tree-id17419 . -1) (undo-tree-id17420 . -1) (#(":" 0 1 (fontified t)) . -582) (undo-tree-id17421 . -1) (undo-tree-id17422 . -1) (undo-tree-id17423 . -1) (undo-tree-id17424 . -1) (#(" " 0 1 (fontified t)) . -583) (undo-tree-id17425 . -1) (undo-tree-id17426 . -1) (undo-tree-id17427 . -1) (undo-tree-id17428 . -1) 584) nil (26418 23399 321756 543000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -588) (undo-tree-id17406 . -1) (undo-tree-id17407 . -1) (undo-tree-id17408 . -1) (#(" " 0 1 (fontified t)) . -589) (undo-tree-id17409 . -1) (undo-tree-id17410 . -1) (#(":" 0 1 (fontified t)) . -590) (undo-tree-id17411 . -1) (undo-tree-id17412 . -1) 591) nil (26418 23399 321748 499000) 0 nil])
([nil nil ((588 . 591)) nil (26418 23399 321744 719000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -590) (undo-tree-id17398 . -1) (undo-tree-id17399 . -1) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) (undo-tree-id17404 . -1) (undo-tree-id17405 . -1) 591) nil (26418 23399 321743 893000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -589) (undo-tree-id17390 . -1) (undo-tree-id17391 . -1) (undo-tree-id17392 . -1) (undo-tree-id17393 . -1) (undo-tree-id17394 . -1) (undo-tree-id17395 . -1) (undo-tree-id17396 . -1) (undo-tree-id17397 . -1) 590) nil (26418 23399 321739 549000) 0 nil])
([nil nil ((589 . 590)) nil (26418 23399 321735 275000) 0 nil])
([nil nil ((597 . 598)) nil (26418 23399 321734 833000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -596) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) (undo-tree-id17333 . -1) (undo-tree-id17334 . -1) (undo-tree-id17335 . -1) (undo-tree-id17336 . -1) (undo-tree-id17337 . -1) (undo-tree-id17338 . -1) (undo-tree-id17339 . -1) (undo-tree-id17340 . -1) (undo-tree-id17341 . -1) (undo-tree-id17342 . -1) (undo-tree-id17343 . -1) (undo-tree-id17344 . -1) (undo-tree-id17345 . -1) (undo-tree-id17346 . -1) (undo-tree-id17347 . -1) (undo-tree-id17348 . -1) (undo-tree-id17349 . -1) (undo-tree-id17350 . -1) (undo-tree-id17351 . -1) (undo-tree-id17352 . -1) (undo-tree-id17353 . -1) (undo-tree-id17354 . -1) (undo-tree-id17355 . -1) (undo-tree-id17356 . -1) (undo-tree-id17357 . -1) (undo-tree-id17358 . -1) (undo-tree-id17359 . -1) (undo-tree-id17360 . -1) (undo-tree-id17361 . -1) (undo-tree-id17362 . -1) (undo-tree-id17363 . -1) (undo-tree-id17364 . -1) (undo-tree-id17365 . -1) (undo-tree-id17366 . -1) (undo-tree-id17367 . -1) (undo-tree-id17368 . -1) (undo-tree-id17369 . -1) (undo-tree-id17370 . -1) (undo-tree-id17371 . -1) (undo-tree-id17372 . -1) (undo-tree-id17373 . -1) (undo-tree-id17374 . -1) (undo-tree-id17375 . -1) (undo-tree-id17376 . -1) (undo-tree-id17377 . -1) (undo-tree-id17378 . -1) (undo-tree-id17379 . -1) (undo-tree-id17380 . -1) (#(" " 0 1 (fontified t)) . -597) (undo-tree-id17381 . -1) (undo-tree-id17382 . -1) (undo-tree-id17383 . -1) (undo-tree-id17384 . -1) (undo-tree-id17385 . -1) (undo-tree-id17386 . -1) (undo-tree-id17387 . -1) (undo-tree-id17388 . -1) (undo-tree-id17389 . -1) 598) nil (26418 23399 321733 31000) 0 nil])
([nil nil ((596 . 598)) nil (26418 23399 321546 597000) 0 nil])
([nil nil ((598 . 606)) nil (26418 23399 321546 163000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -605) (undo-tree-id17322 . -1) (undo-tree-id17323 . -1) (undo-tree-id17324 . -1) (undo-tree-id17325 . -1) (undo-tree-id17326 . -1) (undo-tree-id17327 . -1) (undo-tree-id17328 . -1) (undo-tree-id17329 . -1) (undo-tree-id17330 . -1) 606) nil (26418 23399 321545 324000) 0 nil])
([nil nil ((605 . 608)) nil (26418 23399 321540 727000) 0 nil])
([nil nil ((608 . 611)) nil (26418 23399 321540 305000) 0 nil])
([nil nil ((611 . 612)) nil (26418 23399 321539 920000) 0 nil])
([nil nil ((612 . 614)) nil (26418 23399 321539 509000) 0 nil])
([nil nil ((614 . 616)) nil (26418 23399 321539 128000) 0 nil])
([nil nil ((580 . 582)) nil (26418 23399 321538 730000) 0 nil])
([nil nil ((618 . 634)) nil (26418 23399 321538 317000) 0 nil])
([nil nil ((634 . 655)) nil (26418 23399 321537 881000) 0 nil])
([nil nil ((655 . 656)) nil (26418 23399 321537 367000) 0 nil])
([nil nil ((656 . 657)) nil (26418 23399 321536 293000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -594) (undo-tree-id17299 . -1) (undo-tree-id17300 . -1) (undo-tree-id17301 . -1) (undo-tree-id17302 . -1) (undo-tree-id17303 . -1) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) (#(":" 0 1 (face font-lock-constant-face fontified t)) . -595) (undo-tree-id17308 . -1) (undo-tree-id17309 . -1) (undo-tree-id17310 . -1) (undo-tree-id17311 . -1) (undo-tree-id17312 . -1) (undo-tree-id17313 . -1) (undo-tree-id17314 . -1) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -596) (undo-tree-id17315 . -1) (undo-tree-id17316 . -1) (undo-tree-id17317 . -1) (undo-tree-id17318 . -1) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (undo-tree-id17321 . -1) 597) nil (26418 23399 321532 228000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -638) (undo-tree-id17961 . -1) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1) (#("a" 0 1 (fontified t)) . -639) (undo-tree-id17964 . -1) (undo-tree-id17965 . -1) 640 (t 26418 23399 345686 809000)) nil (26418 23411 630375 162000) 0 nil])
([nil nil ((638 . 640)) nil (26418 23411 630359 724000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 0))) . -1431) (undo-tree-id18079 . -1) (undo-tree-id18080 . -1) 1432 (#(")" 0 1 (fontified t match-data (0 0))) . -1434) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) 1435 (1433 . 1434) (#("." 0 1 (fontified t match-data (0 0))) . -1433) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1434) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -1435) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1436) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (#("t" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -1437) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (#("a" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -1438) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (undo-tree-id18199 . -1) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (#("i" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -1439) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (undo-tree-id18210 . -1) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (#("l" 0 1 (face lsp-face-semhl-property fontified t match-data (0 0))) . -1440) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) 1441 (1410 . 1412) (#(" " 0 1 (fontified t match-data (0 0))) . -1410) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1411) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (#("." 0 1 (fontified t match-data (0 0))) . -1412) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1413) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) 1414 (1406 . 1407) (#("a" 0 1 (fontified t match-data (0 0))) . -1406) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) 1407 (1406 . 1407) (#("s" 0 1 (fontified t match-data (0 0))) . -1406) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) (undo-tree-id18247 . -1) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (#("₁" 0 1 (fontified t match-data (0 0))) . -1407) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1408) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) 1409 (1383 . 1388) (1382 . 1383) (#("l" 0 1 (fontified t match-data (0 0))) . 1382) (#("⟨" 0 1 (fontified t match-data (0 0))) . -1382) (undo-tree-id18258 . -1) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1383) (undo-tree-id18282 . -1) (undo-tree-id18283 . -1) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -1) (undo-tree-id18292 . -1) (undo-tree-id18293 . -1) (undo-tree-id18294 . -1) (undo-tree-id18295 . -1) (undo-tree-id18296 . -1) (undo-tree-id18297 . -1) (undo-tree-id18298 . -1) (undo-tree-id18299 . -1) (undo-tree-id18300 . -1) (undo-tree-id18301 . -1) (undo-tree-id18302 . -1) (undo-tree-id18303 . -1) (undo-tree-id18304 . -1) (undo-tree-id18305 . -1) 1384 (#("i" 0 1 (fontified t match-data (0 0))) . 1384) (#("a" 0 1 (fontified t match-data (0 0))) . 1384) (#("t" 0 1 (fontified t match-data (0 0))) . 1384) (#(" " 0 1 (fontified t match-data (0 0))) . 1384) (#("₁" 0 1 (fontified t match-data (0 0))) . -1384) (undo-tree-id18306 . -1) (undo-tree-id18307 . -1) (undo-tree-id18308 . -1) (undo-tree-id18309 . -1) (undo-tree-id18310 . -1) (undo-tree-id18311 . -1) (undo-tree-id18312 . -1) (undo-tree-id18313 . -1) (undo-tree-id18314 . -1) (undo-tree-id18315 . -1) (undo-tree-id18316 . -1) (undo-tree-id18317 . -1) (undo-tree-id18318 . -1) (undo-tree-id18319 . -1) (undo-tree-id18320 . -1) (undo-tree-id18321 . -1) (undo-tree-id18322 . -1) (undo-tree-id18323 . -1) (#("," 0 1 (fontified t match-data (0 0))) . -1385) (undo-tree-id18324 . -1) (undo-tree-id18325 . -1) (undo-tree-id18326 . -1) (undo-tree-id18327 . -1) (undo-tree-id18328 . -1) (undo-tree-id18329 . -1) (undo-tree-id18330 . -1) (undo-tree-id18331 . -1) (undo-tree-id18332 . -1) (undo-tree-id18333 . -1) (undo-tree-id18334 . -1) (undo-tree-id18335 . -1) (undo-tree-id18336 . -1) (undo-tree-id18337 . -1) (undo-tree-id18338 . -1) (undo-tree-id18339 . -1) (undo-tree-id18340 . -1) (undo-tree-id18341 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -1386) (undo-tree-id18342 . -1) (undo-tree-id18343 . -1) (undo-tree-id18344 . -1) (undo-tree-id18345 . -1) (undo-tree-id18346 . -1) (undo-tree-id18347 . -1) (undo-tree-id18348 . -1) (undo-tree-id18349 . -1) (undo-tree-id18350 . -1) (undo-tree-id18351 . -1) (undo-tree-id18352 . -1) (undo-tree-id18353 . -1) (undo-tree-id18354 . -1) (undo-tree-id18355 . -1) (undo-tree-id18356 . -1) (undo-tree-id18357 . -1) (undo-tree-id18358 . -1) (undo-tree-id18359 . -1) (#("⟩" 0 1 (fontified t match-data (0 0))) . -1387) (undo-tree-id18360 . -1) (undo-tree-id18361 . -1) (undo-tree-id18362 . -1) (undo-tree-id18363 . -1) (undo-tree-id18364 . -1) (undo-tree-id18365 . -1) 1388 (1379 . 1382) (1374 . 1378) (#("c" 0 1 (fontified t match-data (0 0))) . -1374) (undo-tree-id18366 . -1) (undo-tree-id18367 . -1) (undo-tree-id18368 . -1) (undo-tree-id18369 . -1) (undo-tree-id18370 . -1) (undo-tree-id18371 . -1) (undo-tree-id18372 . -1) (undo-tree-id18373 . -1) (undo-tree-id18374 . -1) (undo-tree-id18375 . -1) (undo-tree-id18376 . -1) (undo-tree-id18377 . -1) (undo-tree-id18378 . -1) (undo-tree-id18379 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1375) (undo-tree-id18380 . -1) (undo-tree-id18381 . -1) (undo-tree-id18382 . -1) (undo-tree-id18383 . -1) (undo-tree-id18384 . -1) (undo-tree-id18385 . -1) (undo-tree-id18386 . -1) (undo-tree-id18387 . -1) (undo-tree-id18388 . -1) (undo-tree-id18389 . -1) (undo-tree-id18390 . -1) (undo-tree-id18391 . -1) (undo-tree-id18392 . -1) (undo-tree-id18393 . -1) (#("n" 0 1 (fontified t match-data (0 0))) . -1376) (undo-tree-id18394 . -1) (undo-tree-id18395 . -1) (undo-tree-id18396 . -1) (undo-tree-id18397 . -1) (undo-tree-id18398 . -1) (undo-tree-id18399 . -1) (undo-tree-id18400 . -1) (undo-tree-id18401 . -1) (undo-tree-id18402 . -1) (undo-tree-id18403 . -1) (undo-tree-id18404 . -1) (undo-tree-id18405 . -1) (undo-tree-id18406 . -1) (undo-tree-id18407 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1377) (undo-tree-id18408 . -1) (undo-tree-id18409 . -1) (undo-tree-id18410 . -1) (undo-tree-id18411 . -1) (undo-tree-id18412 . -1) (undo-tree-id18413 . -1) 1378 (1369 . 1373) (#("P" 0 1 (fontified t match-data (0 0))) . -1369) (undo-tree-id18414 . -1) (undo-tree-id18415 . -1) (undo-tree-id18416 . -1) (undo-tree-id18417 . -1) (undo-tree-id18418 . -1) (undo-tree-id18419 . -1) (undo-tree-id18420 . -1) (undo-tree-id18421 . -1) (undo-tree-id18422 . -1) (undo-tree-id18423 . -1) (undo-tree-id18424 . -1) (undo-tree-id18425 . -1) (undo-tree-id18426 . -1) 1370 (1369 . 1370) (#("L" 0 1 (fontified t match-data (0 0))) . -1369) (undo-tree-id18427 . -1) (undo-tree-id18428 . -1) (undo-tree-id18429 . -1) (undo-tree-id18430 . -1) (undo-tree-id18431 . -1) (undo-tree-id18432 . -1) (undo-tree-id18433 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1370) (undo-tree-id18434 . -1) (undo-tree-id18435 . -1) (undo-tree-id18436 . -1) (undo-tree-id18437 . -1) (undo-tree-id18438 . -1) (undo-tree-id18439 . -1) (undo-tree-id18440 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1371) (undo-tree-id18441 . -1) (undo-tree-id18442 . -1) (undo-tree-id18443 . -1) (undo-tree-id18444 . -1) (undo-tree-id18445 . -1) (undo-tree-id18446 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1372) (undo-tree-id18447 . -1) (undo-tree-id18448 . -1) 1373 (#("h" 0 1 (face lsp-face-semhl-variable fontified t match-data (0 0))) . -1343) (undo-tree-id18449 . -1) (undo-tree-id18450 . -1) (undo-tree-id18451 . -1) (undo-tree-id18452 . -1) (undo-tree-id18453 . -1) (undo-tree-id18454 . -1) (undo-tree-id18455 . -1) (undo-tree-id18456 . -1) (undo-tree-id18457 . -1) (undo-tree-id18458 . -1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (#("." 0 1 (fontified t match-data (0 0))) . -1344) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1) (undo-tree-id18481 . -1) (undo-tree-id18482 . -1) (undo-tree-id18483 . -1) (undo-tree-id18484 . -1) (undo-tree-id18485 . -1) 1345 (1318 . 1329) (#("L" 0 1 (fontified t match-data (0 0))) . -1318) (undo-tree-id18486 . -1) (undo-tree-id18487 . -1) (undo-tree-id18488 . -1) (undo-tree-id18489 . -1) (undo-tree-id18490 . -1) (undo-tree-id18491 . -1) (undo-tree-id18492 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1319) (undo-tree-id18493 . -1) (undo-tree-id18494 . -1) (undo-tree-id18495 . -1) (undo-tree-id18496 . -1) (undo-tree-id18497 . -1) (undo-tree-id18498 . -1) (undo-tree-id18499 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1320) (undo-tree-id18500 . -1) (undo-tree-id18501 . -1) (undo-tree-id18502 . -1) (undo-tree-id18503 . -1) (undo-tree-id18504 . -1) (undo-tree-id18505 . -1) (undo-tree-id18506 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1321) (undo-tree-id18507 . -1) (undo-tree-id18508 . -1) (undo-tree-id18509 . -1) (undo-tree-id18510 . -1) (undo-tree-id18511 . -1) (undo-tree-id18512 . -1) (undo-tree-id18513 . -1) (#("." 0 1 (fontified t match-data (0 0))) . -1322) (undo-tree-id18514 . -1) (undo-tree-id18515 . -1) (undo-tree-id18516 . -1) (undo-tree-id18517 . -1) (undo-tree-id18518 . -1) (undo-tree-id18519 . -1) (undo-tree-id18520 . -1) (#("n" 0 1 (fontified t match-data (0 0))) . -1323) (undo-tree-id18521 . -1) (undo-tree-id18522 . -1) (undo-tree-id18523 . -1) (undo-tree-id18524 . -1) (undo-tree-id18525 . -1) (undo-tree-id18526 . -1) (undo-tree-id18527 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -1324) (undo-tree-id18528 . -1) (undo-tree-id18529 . -1) (undo-tree-id18530 . -1) (undo-tree-id18531 . -1) (undo-tree-id18532 . -1) (undo-tree-id18533 . -1) (undo-tree-id18534 . -1) (#("l" 0 1 (fontified t match-data (0 0))) . -1325) (undo-tree-id18535 . -1) (undo-tree-id18536 . -1) (undo-tree-id18537 . -1) (undo-tree-id18538 . -1) (undo-tree-id18539 . -1) (undo-tree-id18540 . -1) (undo-tree-id18541 . -1) 1326 (#("." 0 1 (fontified t match-data (0 0))) . -1304) (undo-tree-id18542 . -1) (undo-tree-id18543 . -1) (undo-tree-id18544 . -1) (undo-tree-id18545 . -1) (undo-tree-id18546 . -1) (undo-tree-id18547 . -1) (undo-tree-id18548 . -1) (undo-tree-id18549 . -1) (#("p" 0 1 (fontified t match-data (0 0))) . -1305) (undo-tree-id18550 . -1) (undo-tree-id18551 . -1) (undo-tree-id18552 . -1) (undo-tree-id18553 . -1) (undo-tree-id18554 . -1) (undo-tree-id18555 . -1) (undo-tree-id18556 . -1) (undo-tree-id18557 . -1) (#("r" 0 1 (fontified t match-data (0 0))) . -1306) (undo-tree-id18558 . -1) (undo-tree-id18559 . -1) (undo-tree-id18560 . -1) (undo-tree-id18561 . -1) (undo-tree-id18562 . -1) (undo-tree-id18563 . -1) (undo-tree-id18564 . -1) (undo-tree-id18565 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1307) (undo-tree-id18566 . -1) (undo-tree-id18567 . -1) (undo-tree-id18568 . -1) (undo-tree-id18569 . -1) (undo-tree-id18570 . -1) (undo-tree-id18571 . -1) (undo-tree-id18572 . -1) (undo-tree-id18573 . -1) 1308 (1505 . 1507) (1455 . 1457) (1484 . 1486) (1455 . 1457) (1480 . 1481) (t 26418 23411 678957 299000)) nil (26418 23547 573990 591000) 0 nil])
([nil nil ((#("def Hist.eattail {σ α : Type} (h: Hist σ α) : Hist σ α := 
  match h.pre with
    | List.nil => h
    | List.cons ⟨s₁, _⟩ tail => {pre:= tail, s := s₁}
" 0 3 (face lsp-face-semhl-keyword fontified t) 3 4 (fontified t) 4 16 (face font-lock-function-name-face fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (face lsp-face-semhl-variable fontified t) 19 20 (fontified t) 20 21 (face lsp-face-semhl-variable fontified t) 21 24 (fontified t) 24 28 (face font-lock-type-face fontified t) 28 31 (fontified t) 31 32 (face lsp-face-semhl-variable fontified t) 32 39 (fontified t) 39 40 (face lsp-face-semhl-variable fontified t) 40 41 (fontified t) 41 42 (face lsp-face-semhl-variable fontified t) 42 51 (fontified t) 51 52 (face lsp-face-semhl-variable fontified t) 52 53 (fontified t) 53 54 (face lsp-face-semhl-variable fontified t) 54 55 (fontified t rear-nonsticky t) 55 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 61 (fontified t) 61 66 (face lsp-face-semhl-keyword fontified t) 66 67 (fontified t) 67 68 (face lsp-face-semhl-variable fontified t) 68 69 (fontified t) 69 72 (fontified t) 72 73 (fontified t) 73 77 (face lsp-face-semhl-keyword fontified t) 77 78 (fontified t) 78 89 (fontified t) 89 92 (fontified t) 92 93 (fontified t) 93 94 (face font-lock-constant-face fontified t) 94 95 (face font-lock-constant-face fontified t) 95 96 (fontified t) 96 97 (face lsp-face-semhl-variable fontified t) 97 98 (fontified t) 98 109 (fontified t) 109 113 (fontified t) 113 115 (fontified t) 115 117 (fontified t) 117 119 (fontified t) 119 120 (face font-lock-preprocessor-face fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 126 (fontified t) 126 127 (fontified t) 127 128 (face font-lock-constant-face fontified t) 128 129 (face font-lock-constant-face fontified t) 129 130 (fontified t) 130 134 (fontified t) 134 136 (face font-lock-constant-face fontified t) 136 137 (fontified t) 137 141 (fontified t) 141 145 (fontified t) 145 147 (face font-lock-constant-face fontified t) 147 148 (fontified t) 148 150 (fontified t) 150 151 (fontified t rear-nonsticky t) 151 152 (fontified t)) . 716) (undo-tree-id18058 . -98) (undo-tree-id18059 . -98) (undo-tree-id18060 . -151) (undo-tree-id18061 . -58) (undo-tree-id18062 . -152) (undo-tree-id18063 . -77) (undo-tree-id18064 . -77) (undo-tree-id18065 . -77) (undo-tree-id18066 . -77) (undo-tree-id18067 . -26) (undo-tree-id18068 . -26) (undo-tree-id18069 . -26) (undo-tree-id18070 . -26) (undo-tree-id18071 . -26) (undo-tree-id18072 . -26) (undo-tree-id18073 . -26) (undo-tree-id18074 . -26) (undo-tree-id18075 . -98) (undo-tree-id18076 . -98) (undo-tree-id18077 . -98) (undo-tree-id18078 . -152) 814) nil (26418 23547 571498 406000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 715) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) (undo-tree-id18052 . -1) (undo-tree-id18053 . -1) (undo-tree-id18054 . -1) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (undo-tree-id18057 . -1)) nil (26418 23547 571488 514000) 0 nil])
([nil nil ((#("lemma Hist.eatshrinks {σ α : Type} (h : Hist σ α) (q : h.length > 0) : h.eattail.length < h.length := sorry

" 0 5 (face lsp-face-semhl-keyword fontified t) 5 6 (fontified t) 6 11 (face font-lock-function-name-face fontified t) 11 21 (face font-lock-function-name-face fontified t) 21 23 (fontified t) 23 24 (face lsp-face-semhl-variable fontified t) 24 25 (fontified t) 25 26 (face lsp-face-semhl-variable fontified t) 26 29 (fontified t) 29 33 (face font-lock-type-face fontified t) 33 36 (fontified t) 36 37 (face lsp-face-semhl-variable fontified t) 37 45 (fontified t) 45 46 (face lsp-face-semhl-variable fontified t) 46 47 (fontified t) 47 48 (face lsp-face-semhl-variable fontified t) 48 51 (fontified t) 51 52 (face lsp-face-semhl-variable fontified t) 52 55 (fontified t) 55 56 (face lsp-face-semhl-variable fontified t) 56 57 (fontified t) 57 63 (face lsp-face-semhl-property fontified t) 63 64 (fontified t) 64 65 (face font-lock-constant-face fontified t) 65 66 (fontified t) 66 67 (face font-lock-constant-face fontified t) 67 71 (fontified t) 71 72 (face lsp-face-semhl-variable fontified t) 72 73 (fontified t) 73 80 (fontified t match-data (0 3 0 1 1 2 2 3)) 80 81 (fontified t match-data (0 3 0 1 1 2 2 3)) 81 87 (fontified t match-data (0 3 0 1 1 2 2 3)) 87 88 (fontified t match-data (0 3 0 1 1 2 2 3)) 88 89 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3)) 89 90 (fontified t match-data (0 3 0 1 1 2 2 3)) 90 91 (face lsp-face-semhl-variable fontified t match-data (0 3 0 1 1 2 2 3)) 91 92 (fontified t match-data (0 3 0 1 1 2 2 3)) 92 98 (face lsp-face-semhl-property fontified t match-data (0 3 0 1 1 2 2 3)) 98 99 (fontified t match-data (0 3 0 1 1 2 2 3)) 99 101 (face font-lock-constant-face fontified t match-data (0 3 0 1 1 2 2 3)) 101 102 (fontified t match-data (0 3 0 1 1 2 2 3)) 102 107 (face font-lock-warning-face fontified t match-data (0 3 0 1 1 2 2 3)) 107 108 (fontified t) 108 109 (fontified t)) . 762) (undo-tree-id18024 . -108) (undo-tree-id18025 . -108) (undo-tree-id18026 . -108) (undo-tree-id18027 . -108) (undo-tree-id18028 . -108) (undo-tree-id18029 . -108) (undo-tree-id18030 . -109) 870) nil (26418 23547 571474 195000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 761) (undo-tree-id17999 . -1) (undo-tree-id18000 . 1) (undo-tree-id18001 . -1) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1)) nil (26418 23547 571469 121000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 760) (undo-tree-id17966 . -1) (undo-tree-id17967 . -1) (undo-tree-id17968 . -1) (undo-tree-id17969 . -1) (undo-tree-id17970 . -1) (undo-tree-id17971 . -1) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (undo-tree-id17974 . -1) (undo-tree-id17975 . -1) (undo-tree-id17976 . -1) (undo-tree-id17977 . -1) (undo-tree-id17978 . -1) (undo-tree-id17979 . -1) (undo-tree-id17980 . -1) (undo-tree-id17981 . -1) (undo-tree-id17982 . -1) (undo-tree-id17983 . -1) (undo-tree-id17984 . -1) (undo-tree-id17985 . -1) (undo-tree-id17986 . -1) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) (undo-tree-id17989 . -1) (undo-tree-id17990 . -1) (undo-tree-id17991 . -1) (undo-tree-id17992 . -1) (undo-tree-id17993 . -1) (undo-tree-id17994 . -1) (undo-tree-id17995 . -1) (undo-tree-id17996 . -1) (undo-tree-id17997 . -1) (undo-tree-id17998 . -1)) nil (26418 23547 571453 507000) 0 nil])
([nil nil ((828 . 830) (826 . 828) (825 . 826) (810 . 825) (808 . 810) (#("
" 0 1 (fontified t)) . -808) (undo-tree-id19013 . -1) 809 (#(" " 0 1 (fontified t)) . -802) (undo-tree-id19014 . -1) (undo-tree-id19015 . -1) (undo-tree-id19016 . -1) (#(":" 0 1 (fontified t)) . -803) (undo-tree-id19017 . -1) (undo-tree-id19018 . -1) 804 (773 . 777) (#(" " 0 1 (fontified t)) . -773) (undo-tree-id19019 . -1) (undo-tree-id19020 . -1) 774 (764 . 774) (762 . 765) (#(" " 0 1 (fontified t)) . -761) (undo-tree-id19021 . -1) 762 (759 . 762) (748 . 759) (747 . 750) (#(" " 0 1 (fontified t)) . -772) (undo-tree-id19022 . -1) (undo-tree-id19023 . -1) (undo-tree-id19024 . -1) (undo-tree-id19025 . -1) (undo-tree-id19026 . -1) (undo-tree-id19027 . -1) 773 (#("Bool" 0 4 (fontified t)) . -773) (undo-tree-id19028 . -4) (undo-tree-id19029 . -4) (undo-tree-id19030 . -4) (undo-tree-id19031 . -4) 777 (770 . 777) (725 . 733) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -725) (undo-tree-id19032 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -726) (undo-tree-id19033 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -727) (undo-tree-id19034 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -728) (undo-tree-id19035 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -729) (undo-tree-id19036 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -730) (undo-tree-id19037 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -731) (undo-tree-id19038 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -732) (undo-tree-id19039 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -733) (undo-tree-id19040 . -1) (#("x" 0 1 (face font-lock-function-name-face fontified t)) . -734) (undo-tree-id19041 . -1) 735 (776 . 778) (776 . 777) (773 . 775) (#(";" 0 1 (fontified t)) . -773) (undo-tree-id19042 . -1) 774 (772 . 774) (755 . 756) (753 . 754) (750 . 758) (748 . 751) (#("
" 0 1 (fontified t)) . -760) (undo-tree-id19043 . -1) (#("
" 0 1 (fontified t)) . -761) (undo-tree-id19044 . -1) 762 (761 . 763) (760 . 761) (t 26418 23547 594606 517000) 760) nil (26418 24350 229301 442000) 0 nil])
([nil nil ((#("Hist σ α" 0 5 (fontified t) 5 6 (face lsp-face-semhl-variable fontified t) 6 7 (fontified t) 7 8 (face lsp-face-semhl-variable fontified t)) . 414) (undo-tree-id19000 . -7) (undo-tree-id19001 . -7) (undo-tree-id19002 . -7) (undo-tree-id19003 . -7) (undo-tree-id19004 . -7) (undo-tree-id19005 . -7) (undo-tree-id19006 . -7) (undo-tree-id19007 . -7) (undo-tree-id19008 . -7) (undo-tree-id19009 . -7) (undo-tree-id19010 . -7) (undo-tree-id19011 . -8) (undo-tree-id19012 . -8)) nil (26418 24350 229275 628000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -414) (undo-tree-id18963 . 1) (undo-tree-id18964 . 1) (undo-tree-id18965 . -1) (undo-tree-id18966 . -1) (undo-tree-id18967 . -1) (undo-tree-id18968 . -1) (undo-tree-id18969 . -1) (undo-tree-id18970 . -1) (undo-tree-id18971 . -1) (undo-tree-id18972 . -1) (undo-tree-id18973 . -1) (undo-tree-id18974 . -1) (undo-tree-id18975 . -1) (undo-tree-id18976 . -1) (undo-tree-id18977 . -1) 415 (#(" " 0 1 (fontified t)) . -414) (undo-tree-id18978 . 1) (undo-tree-id18979 . 1) (undo-tree-id18980 . -1) (undo-tree-id18981 . -1) (undo-tree-id18982 . -1) (undo-tree-id18983 . -1) (undo-tree-id18984 . -1) (undo-tree-id18985 . -1) (undo-tree-id18986 . -1) (undo-tree-id18987 . -1) (undo-tree-id18988 . -1) (undo-tree-id18989 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t)) . -415) (undo-tree-id18990 . -1) (undo-tree-id18991 . -1) (undo-tree-id18992 . -1) (undo-tree-id18993 . -1) (undo-tree-id18994 . -1) (undo-tree-id18995 . -1) (undo-tree-id18996 . -1) (undo-tree-id18997 . -1) (undo-tree-id18998 . -1) (undo-tree-id18999 . -1) 416) nil (26418 24350 229265 371000) 0 nil])
([nil nil ((nil rear-nonsticky nil 429 . 430) (nil fontified nil 422 . 430) (422 . 430) 421) nil (26418 24350 229242 340000) 0 nil])
([nil nil ((431 . 433) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -431) (undo-tree-id18952 . -1) (undo-tree-id18953 . -1) (undo-tree-id18954 . -1) (undo-tree-id18955 . -1) (undo-tree-id18956 . -1) (undo-tree-id18957 . -1) (undo-tree-id18958 . -1) (undo-tree-id18959 . -1) (undo-tree-id18960 . -1) (undo-tree-id18961 . -1) (undo-tree-id18962 . -1) 432 (430 . 432)) nil (26418 24350 229240 574000) 0 nil])
([nil nil ((#(" Hist σ α" 0 1 (fontified t) 1 6 (fontified t) 6 7 (face lsp-face-semhl-variable fontified t) 7 8 (fontified t) 8 9 (face lsp-face-semhl-variable rear-nonsticky t fontified t)) . 421) (undo-tree-id18903 . -8) (undo-tree-id18904 . 4) (undo-tree-id18905 . -8) (undo-tree-id18906 . -8) (undo-tree-id18907 . -8) (undo-tree-id18908 . -1) (undo-tree-id18909 . -1) (undo-tree-id18910 . -1) (undo-tree-id18911 . -1) (undo-tree-id18912 . -1) (undo-tree-id18913 . -1) (undo-tree-id18914 . -1) (undo-tree-id18915 . -1) (undo-tree-id18916 . -8) (undo-tree-id18917 . -8) (undo-tree-id18918 . -8) (undo-tree-id18919 . -8) (undo-tree-id18920 . -8) (undo-tree-id18921 . -8) (undo-tree-id18922 . -8) (undo-tree-id18923 . -8) (undo-tree-id18924 . -8) (undo-tree-id18925 . -8) (undo-tree-id18926 . -8) (undo-tree-id18927 . -8) (undo-tree-id18928 . -8) (undo-tree-id18929 . -8) (undo-tree-id18930 . -8) (undo-tree-id18931 . -8) (undo-tree-id18932 . -8) (undo-tree-id18933 . -8) (undo-tree-id18934 . -9) (undo-tree-id18935 . -9) (undo-tree-id18936 . -9) (undo-tree-id18937 . -9) (undo-tree-id18938 . -9) (undo-tree-id18939 . -9) (undo-tree-id18940 . -4) (undo-tree-id18941 . -4) (undo-tree-id18942 . -8) (undo-tree-id18943 . -8) (undo-tree-id18944 . -8) (undo-tree-id18945 . -8) (undo-tree-id18946 . -8) (undo-tree-id18947 . -8) (undo-tree-id18948 . -8) (undo-tree-id18949 . -8) (undo-tree-id18950 . -9) (undo-tree-id18951 . -9)) nil (26418 24350 229231 291000) 0 nil])
([nil nil ((#("→" 0 1 (face font-lock-constant-face fontified t)) . -422) (undo-tree-id18875 . -1) (undo-tree-id18876 . -1) (undo-tree-id18877 . -1) (undo-tree-id18878 . -1) (undo-tree-id18879 . -1) (undo-tree-id18880 . -1) (undo-tree-id18881 . -1) (undo-tree-id18882 . -1) (undo-tree-id18883 . -1) (undo-tree-id18884 . -1) (undo-tree-id18885 . -1) (undo-tree-id18886 . -1) (undo-tree-id18887 . -1) (undo-tree-id18888 . -1) (undo-tree-id18889 . -1) (#(" " 0 1 (fontified t)) . -423) (undo-tree-id18890 . -1) (undo-tree-id18891 . -1) (undo-tree-id18892 . -1) (undo-tree-id18893 . -1) (undo-tree-id18894 . -1) (undo-tree-id18895 . -1) (undo-tree-id18896 . -1) (undo-tree-id18897 . -1) (undo-tree-id18898 . -1) (undo-tree-id18899 . -1) (undo-tree-id18900 . -1) (undo-tree-id18901 . -1) (undo-tree-id18902 . -1) 424) nil (26418 24350 229199 604000) 0 nil])
([nil nil ((nil rear-nonsticky nil 432 . 433) (nil fontified nil 424 . 433) (424 . 433) 423) nil (26418 24350 229181 101000) 0 nil])
([nil nil ((868 . 879) (865 . 868) (863 . 865) (861 . 863) (860 . 861) (855 . 860) (849 . 855) (831 . 833) (845 . 847) (838 . 845) (#(" " 0 1 (fontified t)) . -838) (undo-tree-id18868 . -1) (#(" " 0 1 (fontified t)) . -839) (undo-tree-id18869 . -1) 840 (838 . 840) (831 . 838) (1193 . 1196) (#("h" 0 1 (fontified t match-data (0 0))) . -1187) (undo-tree-id18870 . -1) (undo-tree-id18871 . -1) (#("p" 0 1 (fontified t match-data (0 0))) . -1188) (undo-tree-id18872 . -1) (undo-tree-id18873 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1189) (undo-tree-id18874 . -1) 1190 (425 . 427) (433 . 434)) nil (26418 24350 229178 664000) 0 nil])
([nil nil ((616 . 620) (#("p" 0 1 (fontified t)) . -616) (undo-tree-id18857 . -1) (undo-tree-id18858 . -1) (#("r" 0 1 (fontified t)) . -617) (undo-tree-id18859 . -1) (undo-tree-id18860 . -1) (#("e" 0 1 (fontified t)) . -618) (undo-tree-id18861 . -1) (undo-tree-id18862 . -1) (#("v" 0 1 (fontified t)) . -619) (undo-tree-id18863 . -1) (undo-tree-id18864 . -1) 620 (407 . 411) (#("prev" 0 4 (fontified t)) . 407) (undo-tree-id18865 . -3) (undo-tree-id18866 . -4) (undo-tree-id18867 . -4)) nil (26418 24350 229169 832000) 0 nil])
([nil nil ((#("prev" 0 4 (fontified t match-data (0 0))) . 1230) (undo-tree-id18854 . -3) (undo-tree-id18855 . -4) (undo-tree-id18856 . -4)) nil (26418 24350 229161 549000) 0 nil])
([nil nil ((1230 . 1234)) nil (26418 24350 229158 499000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -621) (undo-tree-id18852 . -1) (#(" " 0 1 (fontified t)) . -622) (undo-tree-id18853 . -1) 623) nil (26418 24350 229157 609000) 0 nil])
([nil nil ((626 . 628)) nil (26418 24350 229155 460000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-preprocessor-face fontified t)) . -627) (undo-tree-id18851 . -1) 628) nil (26418 24350 229154 773000) 0 nil])
([nil nil ((627 . 628)) nil (26418 24350 229153 601000) 0 nil])
([nil nil ((879 . 898)) nil (26418 24350 229153 162000) 0 nil])
([nil nil ((891 . 898) (#("isFalse" 0 7 (fontified nil)) . -891) (891 . 898) (#("isFalse" 0 7 (fontified t)) . -891) (undo-tree-id18847 . -7) (undo-tree-id18848 . -7) (undo-tree-id18849 . -7) (undo-tree-id18850 . -7) 898) nil (26418 24350 229152 246000) 0 nil])
([nil nil ((898 . 899)) nil (26418 24350 229148 585000) 0 nil])
([nil nil ((899 . 901)) nil (26418 24350 229147 942000) 0 nil])
([nil nil ((901 . 903)) nil (26418 24350 229147 488000) 0 nil])
([nil nil ((903 . 910)) nil (26418 24350 229146 948000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -905) (undo-tree-id18842 . -1) (#("n" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -906) (undo-tree-id18843 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -907) (undo-tree-id18844 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -908) (undo-tree-id18845 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -909) (undo-tree-id18846 . -1) 910) nil (26418 24350 229145 692000) 0 nil])
([nil nil ((905 . 918)) nil (26418 24350 229141 485000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -917) (undo-tree-id18841 . -1) 918) nil (26418 24350 229140 505000) 0 nil])
([nil nil ((917 . 930)) nil (26418 24350 229139 104000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -929) (undo-tree-id18840 . -1) 930) nil (26418 24350 229138 443000) 0 nil])
([nil nil ((929 . 931)) nil (26418 24350 229136 991000) 0 nil])
([nil nil ((931 . 934)) nil (26418 24350 229136 397000) 0 nil])
([nil nil ((919 . 923) (#("init" 0 4 (fontified nil)) . -919) (919 . 923) (#("init => init" 0 8 (fontified nil match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 8 12 (fontified nil)) . -919) (undo-tree-id18831 . -8) (undo-tree-id18832 . -8) (undo-tree-id18833 . -8) (undo-tree-id18834 . -8) (undo-tree-id18835 . -8) (927 . 931) (#("isFalse" 0 7 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -927) (undo-tree-id18836 . -7) (undo-tree-id18837 . -7) (undo-tree-id18838 . -7) (undo-tree-id18839 . -7) 934) nil (26418 24350 229135 287000) 0 nil])
([nil nil ((923 . 930)) nil (26418 24350 229127 401000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -929) (undo-tree-id18827 . -1) (undo-tree-id18828 . -1) (undo-tree-id18829 . -1) (undo-tree-id18830 . -1) 930) nil (26418 24350 229126 602000) 0 nil])
([nil nil ((929 . 932)) nil (26418 24350 229123 421000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -931) (undo-tree-id18823 . -1) (undo-tree-id18824 . -1) (undo-tree-id18825 . -1) (undo-tree-id18826 . -1) 932) nil (26418 24350 229122 633000) 0 nil])
([nil nil ((927 . 934) (#("isFa" 0 4 (fontified nil)) . -927) (927 . 931) (#("isFalse" 0 7 (fontified nil)) . -927) (927 . 934) (#("isFa" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -927) (undo-tree-id18819 . -4) (undo-tree-id18820 . -4) (undo-tree-id18821 . -4) (undo-tree-id18822 . -4) 931) nil (26418 24350 229119 120000) 0 nil])
([nil nil ((923 . 925)) nil (26418 24350 229115 652000) 0 nil])
([nil nil ((936 . 937)) nil (26418 24350 229115 66000) 0 nil])
([nil nil ((937 . 939)) nil (26418 24350 229114 434000) 0 nil])
([nil nil ((939 . 941)) nil (26418 24350 229113 889000) 0 nil])
([nil nil ((941 . 950)) nil (26418 24350 229113 311000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -948) (undo-tree-id18807 . -1) (undo-tree-id18808 . -1) (undo-tree-id18809 . -1) (undo-tree-id18810 . -1) (undo-tree-id18811 . -1) (undo-tree-id18812 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -949) (undo-tree-id18813 . -1) (undo-tree-id18814 . -1) (undo-tree-id18815 . -1) (undo-tree-id18816 . -1) (undo-tree-id18817 . -1) (undo-tree-id18818 . -1) 950) nil (26418 24350 229112 94000) 0 nil])
([nil nil ((948 . 951)) nil (26418 24350 229103 26000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -950) (undo-tree-id18805 . -1) (undo-tree-id18806 . -1) 951) nil (26418 24350 229102 360000) 0 nil])
([nil nil ((950 . 957)) nil (26418 24350 229100 467000) 0 nil])
([nil nil ((957 . 959)) nil (26418 24350 229100 20000) 0 nil])
([nil nil ((957 . 960)) nil (26418 24350 229099 535000) 0 nil])
([nil nil ((961 . 967)) nil (26418 24350 229098 927000) 0 nil])
([nil nil ((967 . 973)) nil (26418 24350 229098 356000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -972) (undo-tree-id18803 . -1) (undo-tree-id18804 . -1) 973) nil (26418 24350 229097 563000) 0 nil])
([nil nil ((972 . 975)) nil (26418 24350 229095 443000) 0 nil])
([nil nil ((973 . 974) (#("⁻" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -973) (undo-tree-id18787 . -1) (undo-tree-id18788 . -1) (undo-tree-id18789 . -1) (undo-tree-id18790 . -1) (undo-tree-id18791 . -1) (undo-tree-id18792 . -1) (undo-tree-id18793 . -1) (undo-tree-id18794 . -1) (#("²" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -974) (undo-tree-id18795 . -1) (undo-tree-id18796 . -1) (undo-tree-id18797 . -1) (undo-tree-id18798 . -1) (undo-tree-id18799 . -1) (undo-tree-id18800 . -1) (undo-tree-id18801 . -1) (undo-tree-id18802 . -1) 975) nil (26418 24350 229093 452000) 0 nil])
([nil nil ((974 . 977)) nil (26418 24350 228648 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -975) (undo-tree-id18775 . -1) (undo-tree-id18776 . -1) (undo-tree-id18777 . -1) (undo-tree-id18778 . -1) (undo-tree-id18779 . -1) (undo-tree-id18780 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -976) (undo-tree-id18781 . -1) (undo-tree-id18782 . -1) (undo-tree-id18783 . -1) (undo-tree-id18784 . -1) (undo-tree-id18785 . -1) (undo-tree-id18786 . -1) 977) nil (26418 24350 228647 396000) 0 nil])
([nil nil ((975 . 980)) nil (26418 24350 228638 785000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -979) (undo-tree-id18767 . -1) (undo-tree-id18768 . -1) (undo-tree-id18769 . -1) (undo-tree-id18770 . -1) (undo-tree-id18771 . -1) (undo-tree-id18772 . -1) (undo-tree-id18773 . -1) (undo-tree-id18774 . -1) 980) nil (26418 24350 228636 923000) 0 nil])
([nil nil ((979 . 980)) nil (26418 24350 227924 398000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -979) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) 980) nil (26418 24350 227923 491000) 0 nil])
([nil nil ((979 . 980)) nil (26418 24350 227919 370000) 0 nil])
([nil nil ((980 . 985)) nil (26418 24350 227918 744000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -980) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -981) (undo-tree-id18751 . -1) (undo-tree-id18752 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -982) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -983) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -984) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) 985) nil (26418 24350 227917 609000) 0 nil])
([nil nil ((980 . 985)) nil (26418 24350 227911 562000) 0 nil])
([nil nil ((978 . 979)) nil (26418 24350 227911 48000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -986) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . 1) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) 987) nil (26418 24350 227910 169000) 0 nil])
([nil nil ((986 . 991)) nil (26418 24350 227902 477000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -988) (undo-tree-id18706 . -1) (undo-tree-id18707 . -1) (undo-tree-id18708 . -1) (undo-tree-id18709 . -1) (undo-tree-id18710 . -1) (undo-tree-id18711 . -1) (undo-tree-id18712 . -1) (undo-tree-id18713 . -1) (undo-tree-id18714 . -1) (undo-tree-id18715 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -989) (undo-tree-id18716 . -1) (undo-tree-id18717 . -1) (undo-tree-id18718 . -1) (undo-tree-id18719 . -1) (undo-tree-id18720 . -1) (undo-tree-id18721 . -1) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -990) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) 991) nil (26418 24350 227900 911000) 0 nil])
([nil nil ((988 . 992)) nil (26418 24350 227885 602000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -991) (undo-tree-id18698 . -1) (undo-tree-id18699 . -1) (undo-tree-id18700 . -1) (undo-tree-id18701 . -1) (undo-tree-id18702 . -1) (undo-tree-id18703 . -1) (undo-tree-id18704 . -1) (undo-tree-id18705 . -1) 992) nil (26418 24350 227884 626000) 0 nil])
([nil nil ((991 . 994)) nil (26418 24350 227880 188000) 0 nil])
([nil nil ((994 . 998)) nil (26418 24350 227879 630000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -997) (undo-tree-id18690 . -1) (undo-tree-id18691 . -1) (undo-tree-id18692 . -1) (undo-tree-id18693 . -1) (undo-tree-id18694 . -1) (undo-tree-id18695 . -1) (undo-tree-id18696 . -1) (undo-tree-id18697 . -1) 998) nil (26418 24350 227878 892000) 0 nil])
([nil nil ((997 . 1018)) nil (26418 24350 227874 873000) 0 nil])
([nil nil ((1017 . 1019)) nil (26418 24350 227874 428000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1016) (undo-tree-id18644 . -1) (undo-tree-id18645 . -1) (undo-tree-id18646 . -1) (undo-tree-id18647 . -1) (undo-tree-id18648 . -1) (undo-tree-id18649 . -1) (undo-tree-id18650 . -1) (undo-tree-id18651 . -1) (undo-tree-id18652 . -1) (undo-tree-id18653 . -1) (undo-tree-id18654 . -1) (undo-tree-id18655 . -1) (undo-tree-id18656 . -1) (undo-tree-id18657 . -1) (undo-tree-id18658 . -1) (undo-tree-id18659 . -1) (undo-tree-id18660 . -1) (undo-tree-id18661 . -1) (undo-tree-id18662 . -1) (undo-tree-id18663 . -1) (undo-tree-id18664 . -1) (undo-tree-id18665 . -1) (undo-tree-id18666 . -1) (undo-tree-id18667 . -1) (undo-tree-id18668 . -1) (undo-tree-id18669 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1017) (undo-tree-id18670 . -1) (undo-tree-id18671 . -1) (undo-tree-id18672 . -1) (undo-tree-id18673 . -1) (undo-tree-id18674 . -1) (undo-tree-id18675 . -1) (undo-tree-id18676 . -1) (undo-tree-id18677 . -1) (undo-tree-id18678 . -1) (undo-tree-id18679 . -1) (undo-tree-id18680 . -1) (undo-tree-id18681 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1018) (undo-tree-id18682 . -1) (undo-tree-id18683 . -1) (undo-tree-id18684 . -1) (undo-tree-id18685 . -1) (undo-tree-id18686 . -1) (undo-tree-id18687 . -1) (undo-tree-id18688 . -1) (undo-tree-id18689 . -1) 1019) nil (26418 24350 227872 594000) 0 nil])
([nil nil ((1016 . 1017)) nil (26418 24350 227848 240000) 0 nil])
([nil nil ((1017 . 1022)) nil (26418 24350 227847 572000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1021) (undo-tree-id18629 . -1) (undo-tree-id18630 . -1) (undo-tree-id18631 . -1) (undo-tree-id18632 . -1) (undo-tree-id18633 . -1) (undo-tree-id18634 . -1) (undo-tree-id18635 . -1) (undo-tree-id18636 . -1) (undo-tree-id18637 . -1) (undo-tree-id18638 . -1) (undo-tree-id18639 . -1) (undo-tree-id18640 . -1) (undo-tree-id18641 . -1) (undo-tree-id18642 . -1) (undo-tree-id18643 . -1) 1022) nil (26418 24350 227846 507000) 0 nil])
([nil nil ((1021 . 1030)) nil (26418 24350 227838 856000) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-function-name-face fontified t)) . -721) (undo-tree-id18619 . -1) (undo-tree-id18620 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -722) (undo-tree-id18621 . -1) (undo-tree-id18622 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -723) (undo-tree-id18623 . -1) (undo-tree-id18624 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -724) (undo-tree-id18625 . -1) (undo-tree-id18626 . -1) (#("." 0 1 (face font-lock-function-name-face fontified t)) . -725) (undo-tree-id18627 . -1) (undo-tree-id18628 . -1) 726) nil (26418 24350 227837 692000) 0 nil])
([nil nil ((786 . 790)) nil (26418 24350 227830 862000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -787) (undo-tree-id18574 . -1) (undo-tree-id18575 . -1) (undo-tree-id18576 . -1) (undo-tree-id18577 . -1) (undo-tree-id18578 . -1) (undo-tree-id18579 . -1) (undo-tree-id18580 . -1) (undo-tree-id18581 . -1) (undo-tree-id18582 . -1) (undo-tree-id18583 . -1) (undo-tree-id18584 . -1) (undo-tree-id18585 . -1) (undo-tree-id18586 . -1) (undo-tree-id18587 . -1) (undo-tree-id18588 . -1) (undo-tree-id18589 . -1) (#("s" 0 1 (fontified t)) . -788) (undo-tree-id18590 . -1) (undo-tree-id18591 . -1) (undo-tree-id18592 . -1) (undo-tree-id18593 . -1) (undo-tree-id18594 . -1) (undo-tree-id18595 . -1) (undo-tree-id18596 . -1) (undo-tree-id18597 . -1) (undo-tree-id18598 . -1) (undo-tree-id18599 . -1) (undo-tree-id18600 . -1) (undo-tree-id18601 . -1) (undo-tree-id18602 . -1) (undo-tree-id18603 . -1) (undo-tree-id18604 . -1) (undo-tree-id18605 . -1) (#(" " 0 1 (fontified t)) . -789) (undo-tree-id18606 . -1) (undo-tree-id18607 . -1) (undo-tree-id18608 . -1) (undo-tree-id18609 . -1) (undo-tree-id18610 . -1) (undo-tree-id18611 . -1) (undo-tree-id18612 . -1) (undo-tree-id18613 . -1) (undo-tree-id18614 . -1) (undo-tree-id18615 . -1) (undo-tree-id18616 . -1) (undo-tree-id18617 . -1) (undo-tree-id18618 . -1) 790) nil (26418 24350 227827 931000) 0 nil])
([nil nil ((787 . 790)) nil (26418 24350 226985 50000) 0 nil])
([nil nil ((801 . 805)) nil (26418 24350 226981 225000) 0 nil])
([nil nil ((893 . 898) (880 . 885) (850 . 855) (839 . 841) (#("r" 0 1 (fontified t)) . -839) (undo-tree-id19149 . -1) (undo-tree-id19150 . -1) (undo-tree-id19151 . -1) (undo-tree-id19152 . -1) (undo-tree-id19153 . -1) (undo-tree-id19154 . -1) (undo-tree-id19155 . -1) (undo-tree-id19156 . -1) (#("." 0 1 (fontified t)) . -840) (undo-tree-id19157 . -1) (undo-tree-id19158 . -1) (undo-tree-id19159 . -1) (undo-tree-id19160 . -1) 841 (836 . 841) (1033 . 1034) (#("|" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1033) (undo-tree-id19161 . -1) (undo-tree-id19162 . -1) (undo-tree-id19163 . -1) (undo-tree-id19164 . -1) (undo-tree-id19165 . -1) (undo-tree-id19166 . -1) (#("-" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1034) (undo-tree-id19167 . -1) (undo-tree-id19168 . -1) 1035 (1029 . 1035) (#("H" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1020) (undo-tree-id19169 . -1) (undo-tree-id19170 . -1) (undo-tree-id19171 . -1) (undo-tree-id19172 . -1) (undo-tree-id19173 . -1) (undo-tree-id19174 . -1) (undo-tree-id19175 . -1) (undo-tree-id19176 . -1) (undo-tree-id19177 . -1) (undo-tree-id19178 . -1) (undo-tree-id19179 . -1) (undo-tree-id19180 . -1) (undo-tree-id19181 . -1) (undo-tree-id19182 . -1) (undo-tree-id19183 . -1) (undo-tree-id19184 . -1) (undo-tree-id19185 . -1) (undo-tree-id19186 . -1) (undo-tree-id19187 . -1) (undo-tree-id19188 . -1) (undo-tree-id19189 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1021) (undo-tree-id19190 . -1) (undo-tree-id19191 . -1) (undo-tree-id19192 . -1) (undo-tree-id19193 . -1) (undo-tree-id19194 . -1) (undo-tree-id19195 . -1) (undo-tree-id19196 . -1) (undo-tree-id19197 . -1) (undo-tree-id19198 . -1) (undo-tree-id19199 . -1) (undo-tree-id19200 . -1) (undo-tree-id19201 . -1) (undo-tree-id19202 . -1) (undo-tree-id19203 . -1) (undo-tree-id19204 . -1) (undo-tree-id19205 . -1) (undo-tree-id19206 . -1) (undo-tree-id19207 . -1) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1) (undo-tree-id19210 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1022) (undo-tree-id19211 . -1) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (undo-tree-id19215 . -1) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) (undo-tree-id19220 . -1) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (undo-tree-id19231 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1023) (undo-tree-id19232 . -1) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) (undo-tree-id19235 . -1) (undo-tree-id19236 . -1) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (undo-tree-id19239 . -1) (undo-tree-id19240 . -1) (undo-tree-id19241 . -1) (undo-tree-id19242 . -1) (undo-tree-id19243 . -1) (undo-tree-id19244 . -1) (undo-tree-id19245 . -1) (undo-tree-id19246 . -1) (undo-tree-id19247 . -1) (undo-tree-id19248 . -1) (undo-tree-id19249 . -1) (undo-tree-id19250 . -1) (undo-tree-id19251 . -1) (undo-tree-id19252 . -1) (#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1024) (undo-tree-id19253 . -1) (undo-tree-id19254 . -1) (undo-tree-id19255 . -1) (undo-tree-id19256 . -1) (undo-tree-id19257 . -1) 1025 (1033 . 1034) (t 26418 24350 251560 342000)) nil (26418 24446 834040 723000) 0 nil])
([nil nil ((898 . 902) (#("p" 0 1 (fontified t)) . -898) (undo-tree-id19054 . 1) (undo-tree-id19055 . -1) (undo-tree-id19056 . -1) (undo-tree-id19057 . -1) (undo-tree-id19058 . -1) (undo-tree-id19059 . -1) (undo-tree-id19060 . -1) (undo-tree-id19061 . -1) (undo-tree-id19062 . -1) (undo-tree-id19063 . -1) (undo-tree-id19064 . -1) (undo-tree-id19065 . -1) (undo-tree-id19066 . -1) (undo-tree-id19067 . -1) (undo-tree-id19068 . -1) (undo-tree-id19069 . -1) (undo-tree-id19070 . -1) (undo-tree-id19071 . -1) (undo-tree-id19072 . -1) (undo-tree-id19073 . -1) (undo-tree-id19074 . -1) (undo-tree-id19075 . -1) (undo-tree-id19076 . -1) (#("r" 0 1 (fontified t)) . -899) (undo-tree-id19077 . -1) (undo-tree-id19078 . -1) (undo-tree-id19079 . -1) (undo-tree-id19080 . -1) (undo-tree-id19081 . -1) (undo-tree-id19082 . -1) (undo-tree-id19083 . -1) (undo-tree-id19084 . -1) (undo-tree-id19085 . -1) (undo-tree-id19086 . -1) (undo-tree-id19087 . -1) (undo-tree-id19088 . -1) (undo-tree-id19089 . -1) (undo-tree-id19090 . -1) (undo-tree-id19091 . -1) (undo-tree-id19092 . -1) (#("e" 0 1 (fontified t)) . -900) (undo-tree-id19093 . -1) (undo-tree-id19094 . -1) (undo-tree-id19095 . -1) (undo-tree-id19096 . -1) (undo-tree-id19097 . -1) (undo-tree-id19098 . -1) (undo-tree-id19099 . -1) (undo-tree-id19100 . -1) (#("v" 0 1 (fontified t)) . -901) (undo-tree-id19101 . -1) (undo-tree-id19102 . -1) (undo-tree-id19103 . -1) (undo-tree-id19104 . -1) 902 (947 . 952) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -947) (undo-tree-id19105 . -1) (undo-tree-id19106 . -1) (undo-tree-id19107 . -1) (undo-tree-id19108 . -1) (undo-tree-id19109 . -1) (undo-tree-id19110 . -1) (undo-tree-id19111 . -1) (undo-tree-id19112 . -1) (undo-tree-id19113 . -1) (undo-tree-id19114 . -1) (undo-tree-id19115 . -1) (undo-tree-id19116 . -1) (#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -948) (undo-tree-id19117 . -1) (undo-tree-id19118 . -1) (undo-tree-id19119 . -1) (undo-tree-id19120 . -1) (undo-tree-id19121 . -1) (undo-tree-id19122 . -1) (undo-tree-id19123 . -1) (undo-tree-id19124 . -1) (undo-tree-id19125 . -1) (undo-tree-id19126 . -1) (undo-tree-id19127 . -1) (undo-tree-id19128 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -949) (undo-tree-id19129 . -1) (undo-tree-id19130 . -1) (undo-tree-id19131 . -1) (undo-tree-id19132 . -1) (undo-tree-id19133 . -1) (undo-tree-id19134 . -1) (undo-tree-id19135 . -1) (undo-tree-id19136 . -1) (undo-tree-id19137 . -1) (undo-tree-id19138 . -1) (undo-tree-id19139 . -1) (undo-tree-id19140 . -1) (#("." 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -950) (undo-tree-id19141 . -1) (undo-tree-id19142 . -1) (undo-tree-id19143 . -1) (undo-tree-id19144 . -1) (undo-tree-id19145 . -1) (undo-tree-id19146 . -1) (undo-tree-id19147 . -1) (undo-tree-id19148 . -1) 951 (947 . 951) (928 . 933)) nil (26418 24446 833829 820000) 0 nil])
([nil nil ((#("prev" 0 4 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 933) (undo-tree-id19045 . -3) (undo-tree-id19046 . -2) (undo-tree-id19047 . -2) (undo-tree-id19048 . -1) (undo-tree-id19049 . -1) (undo-tree-id19050 . -1) (undo-tree-id19051 . -1) (undo-tree-id19052 . -4) (undo-tree-id19053 . -4)) nil (26418 24446 833774 871000) 0 nil])
([nil nil ((933 . 937)) nil (26418 24446 833757 160000) 0 nil])
([nil nil ((921 . 925) (897 . 898) (#("," 0 1 (fontified t)) . -897) (undo-tree-id19558 . -1) (undo-tree-id19559 . -1) (undo-tree-id19560 . -1) (undo-tree-id19561 . -1) (undo-tree-id19562 . -1) (undo-tree-id19563 . -1) (undo-tree-id19564 . -1) (undo-tree-id19565 . -1) (undo-tree-id19566 . -1) (undo-tree-id19567 . -1) (undo-tree-id19568 . -1) (undo-tree-id19569 . -1) (undo-tree-id19570 . -1) (undo-tree-id19571 . -1) (undo-tree-id19572 . -1) (undo-tree-id19573 . -1) (undo-tree-id19574 . -1) (undo-tree-id19575 . -1) (undo-tree-id19576 . -1) (undo-tree-id19577 . -1) (undo-tree-id19578 . -1) 898 (907 . 908) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -907) (undo-tree-id19579 . -1) (undo-tree-id19580 . -1) (undo-tree-id19581 . -1) (undo-tree-id19582 . -1) (undo-tree-id19583 . -1) (undo-tree-id19584 . -1) (undo-tree-id19585 . -1) (undo-tree-id19586 . -1) 908 (903 . 910) (#(" " 0 1 (fontified t)) . -902) (undo-tree-id19587 . -1) (undo-tree-id19588 . -1) (undo-tree-id19589 . -1) (undo-tree-id19590 . -1) (undo-tree-id19591 . -1) (undo-tree-id19592 . -1) (undo-tree-id19593 . -1) (undo-tree-id19594 . -1) (undo-tree-id19595 . -1) (undo-tree-id19596 . -1) (undo-tree-id19597 . -1) (undo-tree-id19598 . -1) (undo-tree-id19599 . -1) (undo-tree-id19600 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -903) (undo-tree-id19601 . -1) (undo-tree-id19602 . -1) (undo-tree-id19603 . -1) (undo-tree-id19604 . -1) (undo-tree-id19605 . -1) (undo-tree-id19606 . -1) (undo-tree-id19607 . -1) (undo-tree-id19608 . -1) (undo-tree-id19609 . -1) (undo-tree-id19610 . -1) (undo-tree-id19611 . -1) (undo-tree-id19612 . -1) (undo-tree-id19613 . -1) (undo-tree-id19614 . -1) (#(" " 0 1 (fontified t)) . -904) (undo-tree-id19615 . -1) (undo-tree-id19616 . -1) (undo-tree-id19617 . -1) (undo-tree-id19618 . -1) (undo-tree-id19619 . -1) (undo-tree-id19620 . -1) (undo-tree-id19621 . -1) (undo-tree-id19622 . -1) (undo-tree-id19623 . -1) (undo-tree-id19624 . -1) (undo-tree-id19625 . -1) (undo-tree-id19626 . -1) (undo-tree-id19627 . -1) (undo-tree-id19628 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -905) (undo-tree-id19629 . -1) (undo-tree-id19630 . -1) (undo-tree-id19631 . -1) (undo-tree-id19632 . -1) (undo-tree-id19633 . -1) (undo-tree-id19634 . -1) (undo-tree-id19635 . -1) (undo-tree-id19636 . -1) (undo-tree-id19637 . -1) (undo-tree-id19638 . -1) (undo-tree-id19639 . -1) (undo-tree-id19640 . -1) (undo-tree-id19641 . -1) (undo-tree-id19642 . -1) (#(" " 0 1 (fontified t)) . -906) (undo-tree-id19643 . -1) (undo-tree-id19644 . -1) (undo-tree-id19645 . -1) (undo-tree-id19646 . -1) (undo-tree-id19647 . -1) (undo-tree-id19648 . -1) (undo-tree-id19649 . -1) (undo-tree-id19650 . -1) (undo-tree-id19651 . -1) (undo-tree-id19652 . -1) (undo-tree-id19653 . -1) (undo-tree-id19654 . -1) (undo-tree-id19655 . -1) (undo-tree-id19656 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -907) (undo-tree-id19657 . -1) (undo-tree-id19658 . -1) (undo-tree-id19659 . -1) (undo-tree-id19660 . -1) (undo-tree-id19661 . -1) (undo-tree-id19662 . -1) (undo-tree-id19663 . -1) (undo-tree-id19664 . -1) (undo-tree-id19665 . -1) (undo-tree-id19666 . -1) (undo-tree-id19667 . -1) 908 (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -909) (undo-tree-id19668 . -1) (undo-tree-id19669 . -1) 910 (1004 . 1010) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1004) (undo-tree-id19670 . -1) (undo-tree-id19671 . -1) (undo-tree-id19672 . -1) (undo-tree-id19673 . -1) (undo-tree-id19674 . -1) (undo-tree-id19675 . -1) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1005) (undo-tree-id19676 . -1) (undo-tree-id19677 . -1) (undo-tree-id19678 . -1) (undo-tree-id19679 . -1) (undo-tree-id19680 . -1) (undo-tree-id19681 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1006) (undo-tree-id19682 . -1) (undo-tree-id19683 . -1) 1007 (1000 . 1007) (976 . 985) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -976) (undo-tree-id19684 . -1) (undo-tree-id19685 . -1) (undo-tree-id19686 . -1) (undo-tree-id19687 . -1) (undo-tree-id19688 . -1) (undo-tree-id19689 . -1) (undo-tree-id19690 . -1) (undo-tree-id19691 . -1) (undo-tree-id19692 . -1) (undo-tree-id19693 . -1) (undo-tree-id19694 . -1) (undo-tree-id19695 . -1) (undo-tree-id19696 . -1) (undo-tree-id19697 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -977) (undo-tree-id19698 . -1) (undo-tree-id19699 . -1) (undo-tree-id19700 . -1) (undo-tree-id19701 . -1) (undo-tree-id19702 . -1) (undo-tree-id19703 . -1) (undo-tree-id19704 . -1) (undo-tree-id19705 . -1) (undo-tree-id19706 . -1) (undo-tree-id19707 . -1) (undo-tree-id19708 . -1) (undo-tree-id19709 . -1) (undo-tree-id19710 . -1) (undo-tree-id19711 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -978) (undo-tree-id19712 . -1) (undo-tree-id19713 . -1) (undo-tree-id19714 . -1) (undo-tree-id19715 . -1) (undo-tree-id19716 . -1) (undo-tree-id19717 . -1) (undo-tree-id19718 . -1) (undo-tree-id19719 . -1) (undo-tree-id19720 . -1) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (#("v" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -979) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) 980 (t 26418 24446 886240 82000)) nil (26418 24670 540843 534000) 0 nil])
([nil nil ((806 . 813) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -922) (undo-tree-id19461 . -1) (undo-tree-id19462 . -1) (undo-tree-id19463 . -1) (undo-tree-id19464 . -1) (undo-tree-id19465 . -1) (undo-tree-id19466 . -1) (undo-tree-id19467 . -1) (undo-tree-id19468 . -1) (undo-tree-id19469 . -1) (undo-tree-id19470 . -1) (undo-tree-id19471 . -1) (undo-tree-id19472 . -1) (undo-tree-id19473 . -1) (undo-tree-id19474 . -1) (undo-tree-id19475 . -1) (undo-tree-id19476 . -1) (undo-tree-id19477 . -1) (undo-tree-id19478 . -1) (undo-tree-id19479 . -1) (undo-tree-id19480 . -1) (undo-tree-id19481 . -1) (undo-tree-id19482 . -1) (undo-tree-id19483 . -1) (undo-tree-id19484 . -1) (undo-tree-id19485 . -1) (undo-tree-id19486 . -1) (undo-tree-id19487 . -1) (undo-tree-id19488 . -1) (undo-tree-id19489 . -1) (undo-tree-id19490 . -1) (undo-tree-id19491 . -1) (undo-tree-id19492 . -1) (undo-tree-id19493 . -1) (undo-tree-id19494 . -1) (undo-tree-id19495 . -1) (undo-tree-id19496 . -1) (undo-tree-id19497 . -1) (undo-tree-id19498 . -1) (undo-tree-id19499 . -1) (undo-tree-id19500 . -1) (undo-tree-id19501 . -1) (undo-tree-id19502 . -1) (undo-tree-id19503 . -1) (undo-tree-id19504 . -1) (undo-tree-id19505 . -1) (undo-tree-id19506 . -1) (undo-tree-id19507 . -1) (#("f" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -923) (undo-tree-id19508 . -1) (undo-tree-id19509 . -1) (undo-tree-id19510 . -1) (undo-tree-id19511 . -1) (undo-tree-id19512 . -1) (undo-tree-id19513 . -1) (undo-tree-id19514 . -1) (undo-tree-id19515 . -1) (undo-tree-id19516 . -1) (undo-tree-id19517 . -1) (undo-tree-id19518 . -1) (undo-tree-id19519 . -1) (undo-tree-id19520 . -1) (undo-tree-id19521 . -1) (undo-tree-id19522 . -1) (undo-tree-id19523 . -1) (undo-tree-id19524 . -1) (undo-tree-id19525 . -1) (undo-tree-id19526 . -1) (undo-tree-id19527 . -1) (undo-tree-id19528 . -1) (undo-tree-id19529 . -1) (undo-tree-id19530 . -1) (undo-tree-id19531 . -1) (undo-tree-id19532 . -1) (undo-tree-id19533 . -1) (undo-tree-id19534 . -1) (undo-tree-id19535 . -1) (undo-tree-id19536 . -1) (undo-tree-id19537 . -1) (undo-tree-id19538 . -1) (undo-tree-id19539 . -1) (undo-tree-id19540 . -1) (#("l" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -924) (undo-tree-id19541 . -1) (undo-tree-id19542 . -1) (undo-tree-id19543 . -1) (undo-tree-id19544 . -1) (undo-tree-id19545 . -1) (undo-tree-id19546 . -1) (undo-tree-id19547 . -1) (undo-tree-id19548 . -1) (undo-tree-id19549 . -1) (undo-tree-id19550 . -1) (undo-tree-id19551 . -1) (undo-tree-id19552 . -1) (undo-tree-id19553 . -1) (undo-tree-id19554 . -1) (undo-tree-id19555 . -1) (undo-tree-id19556 . -1) (undo-tree-id19557 . -1) 925) nil (26418 24670 540569 842000) 0 nil])
([nil nil ((968 . 973) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -968) (undo-tree-id19258 . -1) (undo-tree-id19259 . -1) (undo-tree-id19260 . -1) (undo-tree-id19261 . -1) (undo-tree-id19262 . -1) (undo-tree-id19263 . -1) (undo-tree-id19264 . -1) (undo-tree-id19265 . -1) (undo-tree-id19266 . -1) (undo-tree-id19267 . -1) (undo-tree-id19268 . -1) (undo-tree-id19269 . -1) (undo-tree-id19270 . -1) (undo-tree-id19271 . -1) (undo-tree-id19272 . -1) (undo-tree-id19273 . -1) (undo-tree-id19274 . -1) (undo-tree-id19275 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -969) (undo-tree-id19276 . -1) (undo-tree-id19277 . -1) (undo-tree-id19278 . -1) (undo-tree-id19279 . -1) (undo-tree-id19280 . -1) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (#("F" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -970) (undo-tree-id19294 . -1) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1) (undo-tree-id19301 . -1) (undo-tree-id19302 . -1) (undo-tree-id19303 . -1) (undo-tree-id19304 . -1) (undo-tree-id19305 . -1) (undo-tree-id19306 . -1) (undo-tree-id19307 . -1) (undo-tree-id19308 . -1) (undo-tree-id19309 . -1) (undo-tree-id19310 . -1) (undo-tree-id19311 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -971) (undo-tree-id19312 . -1) (undo-tree-id19313 . -1) (undo-tree-id19314 . -1) (undo-tree-id19315 . -1) (#("l" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -972) (undo-tree-id19316 . -1) (undo-tree-id19317 . -1) (undo-tree-id19318 . -1) (undo-tree-id19319 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -973) (undo-tree-id19320 . -1) (undo-tree-id19321 . -1) (undo-tree-id19322 . -1) (undo-tree-id19323 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -974) (undo-tree-id19324 . -1) (undo-tree-id19325 . -1) (undo-tree-id19326 . -1) (undo-tree-id19327 . -1) 975 (921 . 926) (#("isFalse" 0 7 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 921) (undo-tree-id19328 . -4) (undo-tree-id19329 . -4) (undo-tree-id19330 . 4) (undo-tree-id19331 . -6) (undo-tree-id19332 . -3) (undo-tree-id19333 . -3) (undo-tree-id19334 . -3) (undo-tree-id19335 . -3) (undo-tree-id19336 . -5) (undo-tree-id19337 . -5) (undo-tree-id19338 . -5) (undo-tree-id19339 . -5) (undo-tree-id19340 . -5) (undo-tree-id19341 . -5) (undo-tree-id19342 . -5) (undo-tree-id19343 . -5) (undo-tree-id19344 . -5) (undo-tree-id19345 . -5) (undo-tree-id19346 . -5) (undo-tree-id19347 . -5) (undo-tree-id19348 . -5) (undo-tree-id19349 . -5) (undo-tree-id19350 . -6) (undo-tree-id19351 . -6) (undo-tree-id19352 . -6) (undo-tree-id19353 . -6) (undo-tree-id19354 . -7) (undo-tree-id19355 . -7) (undo-tree-id19356 . -7) (undo-tree-id19357 . -7) (undo-tree-id19358 . -7) (undo-tree-id19359 . -7) (undo-tree-id19360 . -7) (undo-tree-id19361 . -7) (undo-tree-id19362 . -3) (undo-tree-id19363 . -3) (undo-tree-id19364 . -3) (undo-tree-id19365 . -3) (undo-tree-id19366 . -3) (undo-tree-id19367 . -3) (undo-tree-id19368 . -3) (undo-tree-id19369 . -3) (undo-tree-id19370 . -3) (undo-tree-id19371 . -3) (undo-tree-id19372 . -3) (undo-tree-id19373 . -3) (undo-tree-id19374 . -3) (undo-tree-id19375 . -3) (undo-tree-id19376 . -3) (undo-tree-id19377 . -3) (undo-tree-id19378 . -3) (undo-tree-id19379 . -3) (undo-tree-id19380 . -3) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -2) (undo-tree-id19392 . -2) (undo-tree-id19393 . -2) (undo-tree-id19394 . -2) (undo-tree-id19395 . -4) (undo-tree-id19396 . -4) (undo-tree-id19397 . -4) (undo-tree-id19398 . -4) (undo-tree-id19399 . -1) (undo-tree-id19400 . -1) (undo-tree-id19401 . -1) (undo-tree-id19402 . -1) (undo-tree-id19403 . -1) (undo-tree-id19404 . -1) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (undo-tree-id19407 . -1) (undo-tree-id19408 . -1) (undo-tree-id19409 . -1) (undo-tree-id19410 . -1) (undo-tree-id19411 . -1) (undo-tree-id19412 . -1) (undo-tree-id19413 . -2) (undo-tree-id19414 . -2) (undo-tree-id19415 . -2) (undo-tree-id19416 . -2) (undo-tree-id19417 . -2) (undo-tree-id19418 . -2) (undo-tree-id19419 . -2) (undo-tree-id19420 . -2) (undo-tree-id19421 . -2) (undo-tree-id19422 . -2) (undo-tree-id19423 . -2) (undo-tree-id19424 . -2) (undo-tree-id19425 . -2) (undo-tree-id19426 . -2) (undo-tree-id19427 . -3) (undo-tree-id19428 . -3) (undo-tree-id19429 . -3) (undo-tree-id19430 . -3) (undo-tree-id19431 . -7) (undo-tree-id19432 . -7) (undo-tree-id19433 . -7) (undo-tree-id19434 . -7) (undo-tree-id19435 . -7) (undo-tree-id19436 . -7) (undo-tree-id19437 . -7) (undo-tree-id19438 . -7) (undo-tree-id19439 . -7) (undo-tree-id19440 . -7) (undo-tree-id19441 . -7) (undo-tree-id19442 . -7) (undo-tree-id19443 . -4) (undo-tree-id19444 . -4) (undo-tree-id19445 . -4) (undo-tree-id19446 . -4) (undo-tree-id19447 . -4) (undo-tree-id19448 . -4) (undo-tree-id19449 . -3) (undo-tree-id19450 . -4) (undo-tree-id19451 . -4) (undo-tree-id19452 . -4) (undo-tree-id19453 . -4) (undo-tree-id19454 . -4) (undo-tree-id19455 . -4) (undo-tree-id19456 . -4) (undo-tree-id19457 . -2) (undo-tree-id19458 . -2) (undo-tree-id19459 . -7) (undo-tree-id19460 . -7)) nil (26418 24670 540300 346000) 0 nil])
([nil nil ((1212 . 1213) (t 26418 24670 564820 967000) 1212) nil (26418 24677 483594 736000) 0 nil])
([nil nil ((1213 . 1216)) nil (26418 24677 483590 316000) 0 nil])
([nil nil ((1214 . 1216) (t 26418 24677 504670 758000)) nil (26418 24980 358414 153000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -1214) (undo-tree-id19732 . -1) (#("}" 0 1 (fontified t)) . -1215) (undo-tree-id19733 . -1) 1216) nil (26418 24980 358412 896000) 0 nil])
([nil nil ((1214 . 1220)) nil (26418 24980 358411 23000) 0 nil])
([nil nil ((1220 . 1239)) nil (26418 24980 358410 474000) 0 nil])
([nil nil ((1239 . 1241)) nil (26418 24980 358410 121000) 0 nil])
([nil nil ((1240 . 1245)) nil (26418 24980 358409 768000) 0 nil])
([nil nil ((#("∈" 0 1 (fontified t)) . -1243) (undo-tree-id19730 . -1) (#(" " 0 1 (fontified t)) . -1244) (undo-tree-id19731 . -1) 1245) nil (26418 24980 358408 842000) 0 nil])
([nil nil ((1243 . 1245)) nil (26418 24980 358406 928000) 0 nil])
([nil nil ((129 . 130)) nil (26418 24980 358406 352000) 0 nil])
([nil nil ((129 . 145)) nil (26418 24980 358405 803000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -144) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) 145) nil (26418 24980 358404 287000) 0 nil])
([nil nil ((144 . 152)) nil (26418 24980 358390 425000) 0 nil])
([nil nil ((357 . 359) (t 26418 24980 416675 631000)) nil (26418 25108 824603 813000) 0 nil])
([nil nil ((359 . 380)) nil (26418 25108 824603 105000) 0 nil])
([nil nil ((380 . 391)) nil (26418 25108 824602 598000) 0 nil])
([nil nil ((152 . 157)) nil (26418 25108 824601 982000) 0 nil])
([nil nil ((157 . 158)) nil (26418 25108 824601 388000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -384) (undo-tree-id19972 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -385) (undo-tree-id19973 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -386) (undo-tree-id19974 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -387) (undo-tree-id19975 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -388) (undo-tree-id19976 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -389) (undo-tree-id19977 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -390) (undo-tree-id19978 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -391) (undo-tree-id19979 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -392) (undo-tree-id19980 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -393) (undo-tree-id19981 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -394) (undo-tree-id19982 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -395) (undo-tree-id19983 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -396) (undo-tree-id19984 . -1) 397) nil (26418 25108 824599 146000) 0 nil])
([nil nil ((384 . 402)) nil (26418 25108 824588 381000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -400) (undo-tree-id19970 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -401) (undo-tree-id19971 . -1) 402) nil (26418 25108 824587 461000) 0 nil])
([nil nil ((400 . 407)) nil (26418 25108 824584 888000) 0 nil])
([nil nil ((407 . 411)) nil (26418 25108 824584 196000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -409) (undo-tree-id19968 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -410) (undo-tree-id19969 . -1) 411) nil (26418 25108 824582 956000) 0 nil])
([nil nil ((409 . 418)) nil (26418 25108 824289 55000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -409) (undo-tree-id19941 . -1) (undo-tree-id19942 . -1) (undo-tree-id19943 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -410) (undo-tree-id19944 . -1) (undo-tree-id19945 . -1) (undo-tree-id19946 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -411) (undo-tree-id19947 . -1) (undo-tree-id19948 . -1) (undo-tree-id19949 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -412) (undo-tree-id19950 . -1) (undo-tree-id19951 . -1) (undo-tree-id19952 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -413) (undo-tree-id19953 . -1) (undo-tree-id19954 . -1) (undo-tree-id19955 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -414) (undo-tree-id19956 . -1) (undo-tree-id19957 . -1) (undo-tree-id19958 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -415) (undo-tree-id19959 . -1) (undo-tree-id19960 . -1) (undo-tree-id19961 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -416) (undo-tree-id19962 . -1) (undo-tree-id19963 . -1) (undo-tree-id19964 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -417) (undo-tree-id19965 . -1) (undo-tree-id19966 . -1) (undo-tree-id19967 . -1) 418) nil (26418 25108 824286 826000) 0 nil])
([nil nil ((409 . 430)) nil (26418 25108 824269 323000) 0 nil])
([nil nil ((430 . 435)) nil (26418 25108 824268 797000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -432) (undo-tree-id19938 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -433) (undo-tree-id19939 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -434) (undo-tree-id19940 . -1) 435) nil (26418 25108 824267 840000) 0 nil])
([nil nil ((432 . 433)) nil (26418 25108 824265 344000) 0 nil])
([nil nil ((433 . 451)) nil (26418 25108 824264 887000) 0 nil])
([nil nil ((451 . 452)) nil (26418 25108 824264 350000) 0 nil])
([nil nil ((452 . 473)) nil (26418 25108 824263 799000) 0 nil])
([nil nil ((473 . 486)) nil (26418 25108 824263 245000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t)) . -484) (undo-tree-id19932 . -1) (undo-tree-id19933 . -1) (undo-tree-id19934 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -485) (undo-tree-id19935 . -1) (undo-tree-id19936 . -1) (undo-tree-id19937 . -1) 486) nil (26418 25108 824262 427000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -480) (undo-tree-id19920 . -1) (undo-tree-id19921 . -1) (undo-tree-id19922 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -481) (undo-tree-id19923 . -1) (undo-tree-id19924 . -1) (undo-tree-id19925 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -482) (undo-tree-id19926 . -1) (undo-tree-id19927 . -1) (undo-tree-id19928 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -483) (undo-tree-id19929 . -1) (undo-tree-id19930 . -1) (undo-tree-id19931 . -1) 484) nil (26418 25108 824258 13000) 0 nil])
([nil nil ((480 . 501)) nil (26418 25108 824249 962000) 0 nil])
([nil nil ((501 . 509)) nil (26418 25108 824249 436000) 0 nil])
([nil nil ((1389 . 1410)) nil (26418 25108 824248 830000) 0 nil])
([nil nil ((1410 . 1412)) nil (26418 25108 824248 130000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -1411) (undo-tree-id19910 . -1) (undo-tree-id19911 . -1) (undo-tree-id19912 . -1) (undo-tree-id19913 . -1) (undo-tree-id19914 . -1) (undo-tree-id19915 . -1) (undo-tree-id19916 . -1) (undo-tree-id19917 . -1) (undo-tree-id19918 . -1) (undo-tree-id19919 . -1) 1412) nil (26418 25108 824247 110000) 0 nil])
([nil nil ((1411 . 1415)) nil (26418 25108 824240 736000) 0 nil])
([nil nil ((1408 . 1417) (#("histori" 0 7 (face font-lock-comment-face fontified t)) . -1408) (undo-tree-id19888 . -7) (undo-tree-id19889 . -3) (undo-tree-id19890 . -3) (undo-tree-id19891 . -3) (undo-tree-id19892 . -3) (undo-tree-id19893 . -3) (undo-tree-id19894 . -3) (undo-tree-id19895 . -3) (undo-tree-id19896 . -3) (undo-tree-id19897 . -3) (undo-tree-id19898 . -3) (undo-tree-id19899 . -3) (undo-tree-id19900 . -5) (undo-tree-id19901 . -5) (undo-tree-id19902 . -5) (undo-tree-id19903 . -6) (undo-tree-id19904 . -7) (undo-tree-id19905 . -7) (undo-tree-id19906 . -7) (undo-tree-id19907 . -7) (undo-tree-id19908 . -7) (undo-tree-id19909 . -7) 1415) nil (26418 25108 824239 470000) 0 nil])
([nil nil ((1417 . 1425)) nil (26418 25108 824226 229000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -1423) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) (undo-tree-id19869 . -1) (undo-tree-id19870 . -1) (undo-tree-id19871 . -1) (undo-tree-id19872 . -1) (undo-tree-id19873 . -1) (undo-tree-id19874 . -1) (undo-tree-id19875 . -1) (undo-tree-id19876 . -1) (undo-tree-id19877 . -1) (undo-tree-id19878 . -1) (undo-tree-id19879 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -1424) (undo-tree-id19880 . -1) (undo-tree-id19881 . -1) (undo-tree-id19882 . -1) (undo-tree-id19883 . -1) (undo-tree-id19884 . -1) (undo-tree-id19885 . -1) (undo-tree-id19886 . -1) (undo-tree-id19887 . -1) 1425) nil (26418 25108 824224 946000) 0 nil])
([nil nil ((1423 . 1433)) nil (26418 25108 824210 315000) 0 nil])
([nil nil ((#(">" 0 1 (face font-lock-comment-face fontified t)) . -1432) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) 1433) nil (26418 25108 824209 591000) 0 nil])
([nil nil ((1432 . 1433)) nil (26418 25108 824203 45000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1430) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) 1431) nil (26418 25108 824202 307000) 0 nil])
([nil nil ((1446 . 1449)) nil (26418 25108 824199 884000) 0 nil])
([nil nil ((1448 . 1451)) nil (26418 25108 824199 376000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -1448) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) (#("s" 0 1 (fontified t)) . -1449) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (#(" " 0 1 (fontified t)) . -1450) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) 1451) nil (26418 25108 824198 402000) 0 nil])
([nil nil ((1448 . 1456)) nil (26418 25108 824193 488000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1454) (undo-tree-id19821 . -1) (undo-tree-id19822 . -1) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) (undo-tree-id19825 . -1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) (#("y" 0 1 (fontified t)) . -1455) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) 1456) nil (26418 25108 824191 875000) 0 nil])
([nil nil ((1454 . 1458)) nil (26418 25108 824173 513000) 0 nil])
([nil nil ((1476 . 1478)) nil (26418 25108 824172 816000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1477) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) 1478) nil (26418 25108 824171 853000) 0 nil])
([nil nil ((1477 . 1494)) nil (26418 25108 824165 865000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1488) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (#("e" 0 1 (fontified t)) . -1489) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (#("n" 0 1 (fontified t)) . -1490) (undo-tree-id19772 . -1) (undo-tree-id19773 . -1) (undo-tree-id19774 . -1) (undo-tree-id19775 . -1) (undo-tree-id19776 . -1) (undo-tree-id19777 . -1) (undo-tree-id19778 . -1) (undo-tree-id19779 . -1) (undo-tree-id19780 . -1) (undo-tree-id19781 . -1) (undo-tree-id19782 . -1) (undo-tree-id19783 . -1) (undo-tree-id19784 . -1) (#("g" 0 1 (fontified t)) . -1491) (undo-tree-id19785 . -1) (undo-tree-id19786 . -1) (undo-tree-id19787 . -1) (undo-tree-id19788 . -1) (undo-tree-id19789 . -1) (undo-tree-id19790 . -1) (undo-tree-id19791 . -1) (undo-tree-id19792 . -1) (undo-tree-id19793 . -1) (undo-tree-id19794 . -1) (undo-tree-id19795 . -1) (#("t" 0 1 (fontified t)) . -1492) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (#("h" 0 1 (fontified t)) . -1493) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) 1494) nil (26418 25108 824162 444000) 0 nil])
([nil nil ((1488 . 1498)) nil (26418 25108 824118 359000) 0 nil])
([nil nil ((1497 . 1500) (#("=" 0 1 (face font-lock-constant-face fontified t)) . -1497) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) 1498) nil (26418 25108 824114 107000) 0 nil])
([nil nil ((583 . 587) (#("n" 0 1 (fontified t)) . -583) (undo-tree-id20917 . -1) (undo-tree-id20918 . -1) (undo-tree-id20919 . -1) (undo-tree-id20920 . -1) (undo-tree-id20921 . -1) (undo-tree-id20922 . -1) (undo-tree-id20923 . -1) (undo-tree-id20924 . -1) (undo-tree-id20925 . -1) (undo-tree-id20926 . -1) (undo-tree-id20927 . -1) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (#("e" 0 1 (fontified t)) . -584) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (#("x" 0 1 (fontified t)) . -585) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (#("t" 0 1 (fontified t)) . -586) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) 587 (1625 . 1655) (#("                  " 0 18 (fontified t)) . 1625) (undo-tree-id20965 . -18) (undo-tree-id20966 . -18) (undo-tree-id20967 . -18) (undo-tree-id20968 . -18) 1643 (1625 . 1643) (#("              " 0 14 (fontified t)) . 1625) (undo-tree-id20969 . -14) (undo-tree-id20970 . -14) (undo-tree-id20971 . -14) (undo-tree-id20972 . -14) 1639 (1625 . 1639) (#("  " 0 2 (fontified t)) . 1625) (undo-tree-id20973 . -2) (undo-tree-id20974 . -2) (undo-tree-id20975 . -2) (undo-tree-id20976 . -2) (undo-tree-id20977 . -2) (undo-tree-id20978 . -2) (undo-tree-id20979 . -2) 1627 (1625 . 1627) (1624 . 1625) (1640 . 1643) (1638 . 1640) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -1638) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (#(">" 0 1 (face font-lock-constant-face fontified t)) . -1639) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) 1640 (1629 . 1640) (1625 . 1629) (1623 . 1626) (1503 . 1504) (t 26418 25108 849165 352000)) nil (26418 25667 158053 840000) 0 nil])
([nil nil ((446 . 454) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -446) (undo-tree-id20691 . -1) (undo-tree-id20692 . -1) (undo-tree-id20693 . -1) (undo-tree-id20694 . -1) (undo-tree-id20695 . -1) (undo-tree-id20696 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -447) (undo-tree-id20697 . -1) (undo-tree-id20698 . -1) (undo-tree-id20699 . -1) (undo-tree-id20700 . -1) (undo-tree-id20701 . -1) (undo-tree-id20702 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -448) (undo-tree-id20703 . -1) (undo-tree-id20704 . -1) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -1) (undo-tree-id20708 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -449) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) 450 (431 . 450) (430 . 431) (423 . 430) (411 . 423) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -411) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -412) (undo-tree-id20713 . -1) (undo-tree-id20714 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -413) (undo-tree-id20715 . -1) (undo-tree-id20716 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -414) (undo-tree-id20717 . -1) (undo-tree-id20718 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -415) (undo-tree-id20719 . -1) (undo-tree-id20720 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -416) (undo-tree-id20721 . -1) (undo-tree-id20722 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -417) (undo-tree-id20723 . -1) (undo-tree-id20724 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -418) (undo-tree-id20725 . -1) (undo-tree-id20726 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -419) (undo-tree-id20727 . -1) (undo-tree-id20728 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -420) (undo-tree-id20729 . -1) (undo-tree-id20730 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -421) (undo-tree-id20731 . -1) (undo-tree-id20732 . -1) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -422) (undo-tree-id20733 . -1) (undo-tree-id20734 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -423) (undo-tree-id20735 . -1) (undo-tree-id20736 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -424) (undo-tree-id20737 . -1) (undo-tree-id20738 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -425) (undo-tree-id20739 . -1) (undo-tree-id20740 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -426) (undo-tree-id20741 . -1) (undo-tree-id20742 . -1) 427 (#("n" 0 1 (fontified t face font-lock-comment-face)) . -427) (undo-tree-id20743 . -1) (undo-tree-id20744 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -428) (undo-tree-id20745 . -1) (undo-tree-id20746 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -429) (undo-tree-id20747 . -1) (undo-tree-id20748 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -430) (undo-tree-id20749 . -1) (undo-tree-id20750 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -431) (undo-tree-id20751 . -1) (undo-tree-id20752 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -432) (undo-tree-id20753 . -1) (undo-tree-id20754 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -433) (undo-tree-id20755 . -1) (undo-tree-id20756 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -434) (undo-tree-id20757 . -1) (undo-tree-id20758 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -435) (undo-tree-id20759 . -1) (undo-tree-id20760 . -1) (#("." 0 1 (fontified t face font-lock-comment-face)) . -436) (undo-tree-id20761 . -1) (undo-tree-id20762 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -437) (undo-tree-id20763 . -1) (undo-tree-id20764 . -1) (#("T" 0 1 (fontified t face font-lock-comment-face)) . -438) (undo-tree-id20765 . -1) (undo-tree-id20766 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -439) (undo-tree-id20767 . -1) (undo-tree-id20768 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -440) (undo-tree-id20769 . -1) (undo-tree-id20770 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -441) (undo-tree-id20771 . -1) (undo-tree-id20772 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -442) (undo-tree-id20773 . -1) (undo-tree-id20774 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -443) (undo-tree-id20775 . -1) (undo-tree-id20776 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -444) (undo-tree-id20777 . -1) (undo-tree-id20778 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -445) (undo-tree-id20779 . -1) (undo-tree-id20780 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -446) (undo-tree-id20781 . -1) (undo-tree-id20782 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -447) (undo-tree-id20783 . -1) (undo-tree-id20784 . -1) 448 (#("c" 0 1 (fontified t face font-lock-comment-face)) . -448) (undo-tree-id20785 . -1) (undo-tree-id20786 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -449) (undo-tree-id20787 . -1) (undo-tree-id20788 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -450) (undo-tree-id20789 . -1) (undo-tree-id20790 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -451) (undo-tree-id20791 . -1) (undo-tree-id20792 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -452) (undo-tree-id20793 . -1) (undo-tree-id20794 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -453) (undo-tree-id20795 . -1) (undo-tree-id20796 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -454) (undo-tree-id20797 . -1) (undo-tree-id20798 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -455) (undo-tree-id20799 . -1) (undo-tree-id20800 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -456) (undo-tree-id20801 . -1) (undo-tree-id20802 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -457) (undo-tree-id20803 . -1) (undo-tree-id20804 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -458) (undo-tree-id20805 . -1) (undo-tree-id20806 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -459) (undo-tree-id20807 . -1) (undo-tree-id20808 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -460) (undo-tree-id20809 . -1) (undo-tree-id20810 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -461) (undo-tree-id20811 . -1) (undo-tree-id20812 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -462) (undo-tree-id20813 . -1) (undo-tree-id20814 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -463) (undo-tree-id20815 . -1) (undo-tree-id20816 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -464) (undo-tree-id20817 . -1) (undo-tree-id20818 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -465) (undo-tree-id20819 . -1) (undo-tree-id20820 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -466) (undo-tree-id20821 . -1) (undo-tree-id20822 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -467) (undo-tree-id20823 . -1) (undo-tree-id20824 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -468) (undo-tree-id20825 . -1) (undo-tree-id20826 . -1) 469 (#("i" 0 1 (face font-lock-comment-face fontified t)) . -469) (undo-tree-id20827 . -1) (undo-tree-id20828 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -470) (undo-tree-id20829 . -1) (undo-tree-id20830 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -471) (undo-tree-id20831 . -1) (undo-tree-id20832 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -472) (undo-tree-id20833 . -1) (undo-tree-id20834 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -473) (undo-tree-id20835 . -1) (undo-tree-id20836 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -474) (undo-tree-id20837 . -1) (undo-tree-id20838 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -475) (undo-tree-id20839 . -1) (undo-tree-id20840 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -476) (undo-tree-id20841 . -1) (undo-tree-id20842 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -477) (undo-tree-id20843 . -1) (undo-tree-id20844 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -478) (undo-tree-id20845 . -1) (undo-tree-id20846 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -479) (undo-tree-id20847 . -1) (undo-tree-id20848 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -480) (undo-tree-id20849 . -1) (undo-tree-id20850 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -481) (undo-tree-id20851 . -1) (undo-tree-id20852 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -482) (undo-tree-id20853 . -1) (undo-tree-id20854 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -483) (undo-tree-id20855 . -1) (undo-tree-id20856 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -484) (undo-tree-id20857 . -1) (undo-tree-id20858 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -485) (undo-tree-id20859 . -1) (undo-tree-id20860 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -486) (undo-tree-id20861 . -1) (undo-tree-id20862 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -487) (undo-tree-id20863 . -1) (undo-tree-id20864 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -488) (undo-tree-id20865 . -1) (undo-tree-id20866 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -489) (undo-tree-id20867 . -1) (undo-tree-id20868 . -1) 490 (#("p" 0 1 (face font-lock-comment-face fontified t)) . -490) (undo-tree-id20869 . -1) (undo-tree-id20870 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -491) (undo-tree-id20871 . -1) (undo-tree-id20872 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -492) (undo-tree-id20873 . -1) (undo-tree-id20874 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -493) (undo-tree-id20875 . -1) (undo-tree-id20876 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -494) (undo-tree-id20877 . -1) (undo-tree-id20878 . -1) (#("x" 0 1 (face font-lock-comment-face fontified t)) . -495) (undo-tree-id20879 . -1) (undo-tree-id20880 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -496) (undo-tree-id20881 . -1) (undo-tree-id20882 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -497) (undo-tree-id20883 . -1) (undo-tree-id20884 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -498) (undo-tree-id20885 . -1) (undo-tree-id20886 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -499) (undo-tree-id20887 . -1) (undo-tree-id20888 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -500) (undo-tree-id20889 . -1) (undo-tree-id20890 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -501) (undo-tree-id20891 . -1) (undo-tree-id20892 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -502) (undo-tree-id20893 . -1) (undo-tree-id20894 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -503) (undo-tree-id20895 . -1) (undo-tree-id20896 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -504) (undo-tree-id20897 . -1) (undo-tree-id20898 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -505) (undo-tree-id20899 . -1) (undo-tree-id20900 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -506) (undo-tree-id20901 . -1) (undo-tree-id20902 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -507) (undo-tree-id20903 . -1) (undo-tree-id20904 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -508) (undo-tree-id20905 . -1) (undo-tree-id20906 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -509) (undo-tree-id20907 . -1) (undo-tree-id20908 . -1) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -510) (undo-tree-id20909 . -1) 511 (402 . 411) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -402) (undo-tree-id20910 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -403) (undo-tree-id20911 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -404) (undo-tree-id20912 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -405) (undo-tree-id20913 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -406) (undo-tree-id20914 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -407) (undo-tree-id20915 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -408) (undo-tree-id20916 . -1) 409) nil (26418 25667 157988 964000) 0 nil])
([nil nil ((#("Hist σ α" 0 5 (fontified t) 5 6 (face lsp-face-semhl-variable fontified t) 6 7 (fontified t) 7 8 (face lsp-face-semhl-variable fontified t rear-nonsticky t)) . 548) (undo-tree-id20674 . -7) (undo-tree-id20675 . 8) (undo-tree-id20676 . -7) (undo-tree-id20677 . -7) (undo-tree-id20678 . -7) (undo-tree-id20679 . -7) (undo-tree-id20680 . -7) (undo-tree-id20681 . -7) (undo-tree-id20682 . -7) (undo-tree-id20683 . -7) (undo-tree-id20684 . -7) (undo-tree-id20685 . -7) (undo-tree-id20686 . -7) (undo-tree-id20687 . -7) (undo-tree-id20688 . -7) (undo-tree-id20689 . -8) (undo-tree-id20690 . -8) 555) nil (26418 25667 157869 331000) 0 nil])
([nil nil ((nil rear-nonsticky nil 542 . 543) (nil fontified nil 535 . 543) (535 . 543)) nil (26418 25667 157860 348000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1111) (undo-tree-id20485 . -1) (undo-tree-id20486 . -1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (#("₁" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1112) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1113) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) 1114 (1158 . 1161) (#("i" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1158) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (#("f" 0 1 (face lsp-face-semhl-keyword fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1159) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1160) (undo-tree-id20547 . -1) (undo-tree-id20548 . -1) (undo-tree-id20549 . -1) (undo-tree-id20550 . -1) (undo-tree-id20551 . -1) (undo-tree-id20552 . -1) (undo-tree-id20553 . -1) (undo-tree-id20554 . -1) (undo-tree-id20555 . -1) (undo-tree-id20556 . -1) (undo-tree-id20557 . -1) (undo-tree-id20558 . -1) (undo-tree-id20559 . -1) (undo-tree-id20560 . -1) (undo-tree-id20561 . -1) (undo-tree-id20562 . -1) (undo-tree-id20563 . -1) (undo-tree-id20564 . -1) (undo-tree-id20565 . -1) (undo-tree-id20566 . -1) (undo-tree-id20567 . -1) 1161 (1158 . 1161) (1156 . 1158) (1154 . 1156) (1152 . 1154) (1151 . 1153) (1034 . 1049) (#("F" 0 1 (fontified t)) . -1034) (undo-tree-id20568 . -1) (undo-tree-id20569 . -1) (#("a" 0 1 (fontified t)) . -1035) (undo-tree-id20570 . -1) (undo-tree-id20571 . -1) (#("l" 0 1 (fontified t)) . -1036) (undo-tree-id20572 . -1) (undo-tree-id20573 . -1) (#("s" 0 1 (fontified t)) . -1037) (undo-tree-id20574 . -1) (undo-tree-id20575 . -1) (#("e" 0 1 (fontified t)) . -1038) (undo-tree-id20576 . -1) 1039 (1024 . 1026) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -1024) (undo-tree-id20577 . -1) 1025 (1051 . 1061) (#("n" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1051) (undo-tree-id20578 . -1) (#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1052) (undo-tree-id20579 . -1) (#("x" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1053) (undo-tree-id20580 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1054) (undo-tree-id20581 . -1) 1055 (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1055) (undo-tree-id20582 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1056) (undo-tree-id20583 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1057) (undo-tree-id20584 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1058) (undo-tree-id20585 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1059) (undo-tree-id20586 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1060) (undo-tree-id20587 . -1) (#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1061) (undo-tree-id20588 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1062) (undo-tree-id20589 . -1) 1063 (1024 . 1029) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -1024) (undo-tree-id20590 . -1) (#(" " 0 1 (fontified t)) . -1025) (undo-tree-id20591 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -1026) (undo-tree-id20592 . -1) 1027 (#(" " 0 1 (fontified t)) . -1027) (undo-tree-id20593 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -1028) (undo-tree-id20594 . -1) (#(" " 0 1 (fontified t)) . -1029) (undo-tree-id20595 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -1030) (undo-tree-id20596 . -1) 1031 (1022 . 1023) (#("c" 0 1 (fontified t)) . -1022) (undo-tree-id20597 . -1) 1023 (1022 . 1023) (#("f" 0 1 (fontified t)) . -1022) (undo-tree-id20598 . -1) 1023 (1019 . 1023) (#("n" 0 1 (fontified t)) . -1019) (undo-tree-id20599 . -1) (#("e" 0 1 (fontified t)) . -1020) (undo-tree-id20600 . -1) (#("x" 0 1 (fontified t)) . -1021) (undo-tree-id20601 . -1) (#("t" 0 1 (fontified t)) . -1022) (undo-tree-id20602 . -1) 1023 (738 . 742) (#(" " 0 1 (fontified t)) . -736) (undo-tree-id20603 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -737) (undo-tree-id20604 . -1) (#(" " 0 1 (fontified t)) . -738) (undo-tree-id20605 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -739) (undo-tree-id20606 . -1) (#(" " 0 1 (fontified t)) . -740) (undo-tree-id20607 . -1) (#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -741) (undo-tree-id20608 . -1) 742 (732 . 736) (#("n" 0 1 (fontified t)) . -732) (undo-tree-id20609 . -1) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id20610 . -1) (#("x" 0 1 (fontified t)) . -734) (undo-tree-id20611 . -1) (#("t" 0 1 (fontified t)) . -735) (undo-tree-id20612 . -1) 736 (552 . 553) (#(" " 0 1 (fontified t)) . -552) (undo-tree-id20613 . -1) (undo-tree-id20614 . -1) (undo-tree-id20615 . -1) (undo-tree-id20616 . -1) (undo-tree-id20617 . -1) (undo-tree-id20618 . -1) (undo-tree-id20619 . -1) (undo-tree-id20620 . -1) (undo-tree-id20621 . -1) (undo-tree-id20622 . -1) (undo-tree-id20623 . -1) (undo-tree-id20624 . -1) (undo-tree-id20625 . -1) (undo-tree-id20626 . -1) (undo-tree-id20627 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t)) . -553) (undo-tree-id20628 . -1) (undo-tree-id20629 . -1) (undo-tree-id20630 . -1) (undo-tree-id20631 . -1) (undo-tree-id20632 . -1) (undo-tree-id20633 . -1) (undo-tree-id20634 . -1) (undo-tree-id20635 . -1) (undo-tree-id20636 . -1) (undo-tree-id20637 . -1) (undo-tree-id20638 . -1) (undo-tree-id20639 . -1) (undo-tree-id20640 . -1) (undo-tree-id20641 . -1) (undo-tree-id20642 . -1) (#(" " 0 1 (fontified t)) . -554) (undo-tree-id20643 . -1) (undo-tree-id20644 . -1) (undo-tree-id20645 . -1) (undo-tree-id20646 . -1) (undo-tree-id20647 . -1) (undo-tree-id20648 . -1) (undo-tree-id20649 . -1) (undo-tree-id20650 . -1) (undo-tree-id20651 . -1) (undo-tree-id20652 . -1) (undo-tree-id20653 . -1) (undo-tree-id20654 . -1) (undo-tree-id20655 . -1) (undo-tree-id20656 . -1) (undo-tree-id20657 . -1) (#(" " 0 1 (fontified t)) . -555) (undo-tree-id20658 . 1) (undo-tree-id20659 . 1) (undo-tree-id20660 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t)) . -556) (undo-tree-id20661 . -1) 557 (#(" " 0 1 (fontified t)) . -545) (undo-tree-id20662 . -1) (undo-tree-id20663 . -1) (#("σ" 0 1 (face lsp-face-semhl-variable fontified t)) . -546) (undo-tree-id20664 . -1) (undo-tree-id20665 . -1) (#(" " 0 1 (fontified t)) . -547) (undo-tree-id20666 . -1) (undo-tree-id20667 . -1) (#("→" 0 1 (face font-lock-constant-face fontified t)) . -548) (undo-tree-id20668 . -1) 549 (544 . 546) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -544) (undo-tree-id20669 . -1) (undo-tree-id20670 . -1) (#("r" 0 1 (fontified t)) . -545) (undo-tree-id20671 . -1) (undo-tree-id20672 . -1) (#(" " 0 1 (fontified t)) . -546) (undo-tree-id20673 . -1) 547 (543 . 547)) nil (26418 25667 157849 856000) 0 nil])
([nil nil ((#(" h₁" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1117) (undo-tree-id20475 . -2) (undo-tree-id20476 . 1) (undo-tree-id20477 . -2) (undo-tree-id20478 . -2) (undo-tree-id20479 . -1) (undo-tree-id20480 . -1) (undo-tree-id20481 . -2) (undo-tree-id20482 . -2) (undo-tree-id20483 . -3) (undo-tree-id20484 . -3)) nil (26418 25667 157749 479000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1113 . 1114) (nil fontified nil 1111 . 1114) (1111 . 1114)) nil (26418 25667 157744 166000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1110) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) (undo-tree-id20454 . -1) (undo-tree-id20455 . -1) (undo-tree-id20456 . -1) (undo-tree-id20457 . -1) (undo-tree-id20458 . -1) (undo-tree-id20459 . -1) (undo-tree-id20460 . -1) (undo-tree-id20461 . -1) (undo-tree-id20462 . -1) (undo-tree-id20463 . -1) (undo-tree-id20464 . -1) (undo-tree-id20465 . -1) (undo-tree-id20466 . -1) (undo-tree-id20467 . -1) (undo-tree-id20468 . -1) (undo-tree-id20469 . -1) (undo-tree-id20470 . -1) (undo-tree-id20471 . -1) (undo-tree-id20472 . -1) (undo-tree-id20473 . -1) (undo-tree-id20474 . -1) 1111 (1114 . 1115)) nil (26418 25667 157742 702000) 0 nil])
([nil nil ((#(" h₂" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1141) (undo-tree-id20439 . -2) (undo-tree-id20440 . -2) (undo-tree-id20441 . -2) (undo-tree-id20442 . -2) (undo-tree-id20443 . -2) (undo-tree-id20444 . -3) (undo-tree-id20445 . -3)) nil (26418 25667 157727 138000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1134 . 1135) (nil fontified nil 1132 . 1135) (1132 . 1135)) nil (26418 25667 157723 458000) 0 nil])
([nil nil ((1224 . 1225) (1220 . 1224) (1218 . 1220) (1216 . 1218) (1214 . 1216) (1213 . 1214) (1200 . 1213) (1196 . 1200) (#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1196) (undo-tree-id20326 . -1) (undo-tree-id20327 . -1) 1197 (1188 . 1197) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1188) (undo-tree-id20328 . -1) (undo-tree-id20329 . -1) (undo-tree-id20330 . -1) (undo-tree-id20331 . -1) (undo-tree-id20332 . -1) (undo-tree-id20333 . -1) (undo-tree-id20334 . -1) (undo-tree-id20335 . -1) (undo-tree-id20336 . -1) (undo-tree-id20337 . -1) (undo-tree-id20338 . -1) (undo-tree-id20339 . -1) (undo-tree-id20340 . -1) (undo-tree-id20341 . -1) (undo-tree-id20342 . -1) (undo-tree-id20343 . -1) (undo-tree-id20344 . -1) (#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1189) (undo-tree-id20345 . -1) (undo-tree-id20346 . -1) (undo-tree-id20347 . -1) (undo-tree-id20348 . -1) (undo-tree-id20349 . -1) (undo-tree-id20350 . -1) (undo-tree-id20351 . -1) (undo-tree-id20352 . -1) (undo-tree-id20353 . -1) (undo-tree-id20354 . -1) (undo-tree-id20355 . -1) (undo-tree-id20356 . -1) (undo-tree-id20357 . -1) (undo-tree-id20358 . -1) (undo-tree-id20359 . -1) (undo-tree-id20360 . -1) (undo-tree-id20361 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1190) (undo-tree-id20362 . -1) (undo-tree-id20363 . -1) (undo-tree-id20364 . -1) (undo-tree-id20365 . -1) (undo-tree-id20366 . -1) (undo-tree-id20367 . -1) (undo-tree-id20368 . -1) (undo-tree-id20369 . -1) (undo-tree-id20370 . -1) (undo-tree-id20371 . -1) (undo-tree-id20372 . -1) (undo-tree-id20373 . -1) (undo-tree-id20374 . -1) (undo-tree-id20375 . -1) (undo-tree-id20376 . -1) (undo-tree-id20377 . -1) (undo-tree-id20378 . -1) 1191 (1184 . 1191) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1184) (undo-tree-id20379 . -1) (undo-tree-id20380 . -1) (undo-tree-id20381 . -1) (undo-tree-id20382 . -1) (undo-tree-id20383 . -1) (undo-tree-id20384 . -1) (undo-tree-id20385 . -1) (undo-tree-id20386 . -1) (undo-tree-id20387 . -1) (undo-tree-id20388 . -1) (undo-tree-id20389 . -1) (undo-tree-id20390 . -1) (undo-tree-id20391 . -1) (undo-tree-id20392 . -1) (undo-tree-id20393 . -1) (undo-tree-id20394 . -1) (undo-tree-id20395 . -1) (undo-tree-id20396 . -1) (undo-tree-id20397 . -1) (undo-tree-id20398 . -1) (undo-tree-id20399 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1185) (undo-tree-id20400 . -1) (undo-tree-id20401 . -1) (undo-tree-id20402 . -1) (undo-tree-id20403 . -1) (undo-tree-id20404 . -1) (undo-tree-id20405 . -1) (undo-tree-id20406 . -1) (undo-tree-id20407 . -1) (undo-tree-id20408 . -1) (undo-tree-id20409 . -1) (undo-tree-id20410 . -1) (undo-tree-id20411 . -1) (undo-tree-id20412 . -1) (undo-tree-id20413 . -1) (undo-tree-id20414 . -1) (undo-tree-id20415 . -1) (undo-tree-id20416 . -1) (undo-tree-id20417 . -1) (undo-tree-id20418 . -1) (undo-tree-id20419 . -1) (undo-tree-id20420 . -1) 1186 (1178 . 1186) (#("      " 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1178) (undo-tree-id20421 . -2) (undo-tree-id20422 . -6) (undo-tree-id20423 . 6) (undo-tree-id20424 . -2) (undo-tree-id20425 . -2) (undo-tree-id20426 . -2) (undo-tree-id20427 . -4) (undo-tree-id20428 . -6) (undo-tree-id20429 . -6) (undo-tree-id20430 . -6) 1184 (1182 . 1184) (1180 . 1182) (1179 . 1180) 1178 (1177 . 1178) (1171 . 1177) (#("3" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1171) (undo-tree-id20431 . -1) 1172 (1164 . 1172) (1157 . 1164) (#("q" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1157) (undo-tree-id20432 . -1) 1158 (1155 . 1158) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1136) (undo-tree-id20433 . -1) (undo-tree-id20434 . -1) (#("₂" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1137) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1138) (undo-tree-id20437 . -1) (undo-tree-id20438 . -1) 1139 (1135 . 1136)) nil (26418 25667 157718 957000) 0 nil])
([nil nil ((#("(s₁ = s₂) ∧ (a₁ = a₂) ∧ (s₁' = s₂') ∧ (isprefix h₁ h₂)
" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 3 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 4 5 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 5 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 6 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 8 10 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 10 11 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 11 13 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 13 15 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 15 16 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 16 17 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 17 18 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 18 20 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 20 22 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 22 23 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 23 25 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 25 28 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 28 29 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 29 30 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 30 31 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 31 34 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 34 36 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 36 37 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 37 48 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 48 50 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 50 51 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 51 53 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 53 54 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 54 55 (fontified t)) . 1226) (undo-tree-id20323 . 54) (undo-tree-id20324 . -54) (undo-tree-id20325 . -55)) nil (26418 25667 157659 45000) 0 nil])
([nil nil ((1186 . 1191) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1186) (undo-tree-id20034 . -1) (undo-tree-id20035 . -1) (undo-tree-id20036 . -1) (undo-tree-id20037 . -1) (undo-tree-id20038 . -1) (undo-tree-id20039 . -1) (undo-tree-id20040 . -1) (undo-tree-id20041 . -1) (undo-tree-id20042 . -1) (undo-tree-id20043 . -1) (undo-tree-id20044 . -1) (undo-tree-id20045 . -1) (undo-tree-id20046 . -1) (undo-tree-id20047 . -1) (undo-tree-id20048 . -1) (undo-tree-id20049 . -1) (undo-tree-id20050 . -1) (undo-tree-id20051 . -1) (undo-tree-id20052 . -1) (undo-tree-id20053 . -1) (undo-tree-id20054 . -1) (undo-tree-id20055 . -1) (undo-tree-id20056 . -1) (undo-tree-id20057 . -1) (undo-tree-id20058 . -1) (undo-tree-id20059 . -1) (undo-tree-id20060 . -1) (undo-tree-id20061 . -1) (undo-tree-id20062 . -1) (undo-tree-id20063 . -1) (undo-tree-id20064 . -1) (undo-tree-id20065 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1187) (undo-tree-id20066 . -1) (undo-tree-id20067 . -1) (undo-tree-id20068 . -1) (undo-tree-id20069 . -1) (undo-tree-id20070 . -1) (undo-tree-id20071 . -1) (undo-tree-id20072 . -1) (undo-tree-id20073 . -1) (undo-tree-id20074 . -1) (undo-tree-id20075 . -1) (undo-tree-id20076 . -1) (undo-tree-id20077 . -1) (undo-tree-id20078 . -1) (undo-tree-id20079 . -1) (undo-tree-id20080 . -1) (undo-tree-id20081 . -1) (undo-tree-id20082 . -1) (undo-tree-id20083 . -1) (undo-tree-id20084 . -1) (undo-tree-id20085 . -1) (undo-tree-id20086 . -1) (undo-tree-id20087 . -1) (undo-tree-id20088 . -1) (undo-tree-id20089 . -1) (undo-tree-id20090 . -1) (undo-tree-id20091 . -1) (undo-tree-id20092 . -1) (undo-tree-id20093 . -1) (undo-tree-id20094 . -1) (undo-tree-id20095 . -1) (undo-tree-id20096 . -1) (undo-tree-id20097 . -1) (#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1188) (undo-tree-id20098 . -1) (undo-tree-id20099 . -1) (undo-tree-id20100 . -1) (undo-tree-id20101 . -1) (undo-tree-id20102 . -1) (undo-tree-id20103 . -1) (undo-tree-id20104 . -1) (undo-tree-id20105 . -1) (undo-tree-id20106 . -1) (undo-tree-id20107 . -1) (undo-tree-id20108 . -1) (undo-tree-id20109 . -1) (undo-tree-id20110 . -1) (undo-tree-id20111 . -1) (undo-tree-id20112 . -1) (undo-tree-id20113 . -1) (undo-tree-id20114 . -1) (undo-tree-id20115 . -1) (undo-tree-id20116 . -1) (undo-tree-id20117 . -1) (undo-tree-id20118 . -1) (undo-tree-id20119 . -1) (undo-tree-id20120 . -1) (undo-tree-id20121 . -1) (undo-tree-id20122 . -1) (undo-tree-id20123 . -1) (undo-tree-id20124 . -1) (undo-tree-id20125 . -1) (undo-tree-id20126 . -1) (undo-tree-id20127 . -1) (undo-tree-id20128 . -1) (undo-tree-id20129 . -1) (#("r" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1189) (undo-tree-id20130 . -1) (undo-tree-id20131 . -1) (undo-tree-id20132 . -1) (undo-tree-id20133 . -1) (undo-tree-id20134 . -1) (undo-tree-id20135 . -1) (undo-tree-id20136 . -1) (undo-tree-id20137 . -1) (undo-tree-id20138 . -1) (undo-tree-id20139 . -1) (undo-tree-id20140 . -1) (undo-tree-id20141 . -1) (undo-tree-id20142 . -1) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1190) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (#("f" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1191) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -1) (undo-tree-id20202 . -1) (undo-tree-id20203 . -1) (undo-tree-id20204 . -1) (undo-tree-id20205 . -1) (undo-tree-id20206 . -1) (undo-tree-id20207 . -1) (undo-tree-id20208 . -1) (undo-tree-id20209 . -1) (undo-tree-id20210 . -1) (undo-tree-id20211 . -1) (undo-tree-id20212 . -1) (undo-tree-id20213 . -1) (undo-tree-id20214 . -1) (undo-tree-id20215 . -1) (undo-tree-id20216 . -1) (undo-tree-id20217 . -1) (undo-tree-id20218 . -1) (undo-tree-id20219 . -1) (undo-tree-id20220 . -1) (undo-tree-id20221 . -1) (undo-tree-id20222 . -1) (undo-tree-id20223 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1192) (undo-tree-id20224 . -1) (undo-tree-id20225 . -1) (undo-tree-id20226 . -1) (undo-tree-id20227 . -1) (undo-tree-id20228 . -1) (undo-tree-id20229 . -1) (undo-tree-id20230 . -1) (undo-tree-id20231 . -1) (undo-tree-id20232 . -1) (undo-tree-id20233 . -1) (undo-tree-id20234 . -1) (undo-tree-id20235 . -1) (undo-tree-id20236 . -1) (undo-tree-id20237 . -1) (undo-tree-id20238 . -1) (undo-tree-id20239 . -1) (undo-tree-id20240 . -1) (undo-tree-id20241 . -1) (undo-tree-id20242 . -1) (undo-tree-id20243 . -1) (undo-tree-id20244 . -1) (undo-tree-id20245 . -1) (undo-tree-id20246 . -1) (undo-tree-id20247 . -1) (undo-tree-id20248 . -1) (undo-tree-id20249 . -1) (undo-tree-id20250 . -1) (undo-tree-id20251 . -1) (undo-tree-id20252 . -1) (#("x" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1193) (undo-tree-id20253 . -1) (undo-tree-id20254 . -1) (undo-tree-id20255 . -1) (undo-tree-id20256 . -1) (undo-tree-id20257 . -1) (undo-tree-id20258 . -1) (undo-tree-id20259 . -1) (undo-tree-id20260 . -1) (undo-tree-id20261 . -1) (undo-tree-id20262 . -1) (undo-tree-id20263 . -1) (undo-tree-id20264 . -1) (undo-tree-id20265 . -1) (undo-tree-id20266 . -1) (undo-tree-id20267 . -1) (undo-tree-id20268 . -1) (undo-tree-id20269 . -1) (undo-tree-id20270 . -1) (undo-tree-id20271 . -1) (undo-tree-id20272 . -1) (undo-tree-id20273 . -1) (undo-tree-id20274 . -1) (undo-tree-id20275 . -1) (undo-tree-id20276 . -1) (undo-tree-id20277 . -1) (undo-tree-id20278 . -1) (undo-tree-id20279 . -1) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1194) (undo-tree-id20280 . -1) (undo-tree-id20281 . -1) (undo-tree-id20282 . -1) (undo-tree-id20283 . -1) (undo-tree-id20284 . -1) (undo-tree-id20285 . -1) (undo-tree-id20286 . -1) (undo-tree-id20287 . -1) (undo-tree-id20288 . -1) (undo-tree-id20289 . -1) (undo-tree-id20290 . -1) (undo-tree-id20291 . -1) (undo-tree-id20292 . -1) (undo-tree-id20293 . -1) (undo-tree-id20294 . -1) (undo-tree-id20295 . -1) (undo-tree-id20296 . -1) (undo-tree-id20297 . -1) (undo-tree-id20298 . -1) (undo-tree-id20299 . -1) (undo-tree-id20300 . -1) (undo-tree-id20301 . -1) 1195 (1186 . 1195) (1178 . 1186) (#("      " 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1178) (undo-tree-id20302 . -6) (undo-tree-id20303 . -6) (undo-tree-id20304 . -6) (undo-tree-id20305 . -6) (undo-tree-id20306 . -6) (undo-tree-id20307 . -6) (undo-tree-id20308 . -6) (undo-tree-id20309 . -6) (undo-tree-id20310 . -6) (undo-tree-id20311 . -6) (undo-tree-id20312 . -6) (undo-tree-id20313 . -6) (undo-tree-id20314 . -6) (undo-tree-id20315 . -6) (undo-tree-id20316 . -6) (undo-tree-id20317 . -6) (undo-tree-id20318 . -6) (undo-tree-id20319 . -6) (undo-tree-id20320 . -6) (undo-tree-id20321 . -6) (undo-tree-id20322 . -6) 1184 (1178 . 1184) (1178 . 1179) 1184) nil (26418 25667 157647 662000) 0 nil])
([nil nil ((1262 . 1263) (1207 . 1208) (#("1" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1207) (undo-tree-id20003 . -1) (undo-tree-id20004 . -1) 1208 (1219 . 1220) (#("2" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1219) (undo-tree-id20005 . -1) (undo-tree-id20006 . -1) 1220 (1243 . 1251) (#("c" 0 1 (fontified t)) . -1243) (undo-tree-id20007 . -1) (undo-tree-id20008 . -1) (undo-tree-id20009 . -1) (undo-tree-id20010 . -1) (undo-tree-id20011 . -1) (undo-tree-id20012 . -1) (undo-tree-id20013 . -1) (undo-tree-id20014 . -1) 1244 (#("x" 0 1 (fontified t)) . -1244) (undo-tree-id20015 . -1) (undo-tree-id20016 . -1) 1245 (1244 . 1245) (#("x" 0 1 (fontified t)) . -1244) (undo-tree-id20017 . -1) (undo-tree-id20018 . -1) (#(" " 0 1 (fontified t)) . -1245) (undo-tree-id20019 . -1) (undo-tree-id20020 . -1) 1246 (1244 . 1246) (#(" " 0 1 (fontified t)) . -1244) (undo-tree-id20021 . -1) (undo-tree-id20022 . -1) (undo-tree-id20023 . -1) (undo-tree-id20024 . -1) (undo-tree-id20025 . -1) (undo-tree-id20026 . -1) (undo-tree-id20027 . -1) (undo-tree-id20028 . -1) 1245 (1236 . 1245) (1228 . 1236) (#("      " 0 6 (fontified t)) . 1228) (undo-tree-id20029 . -6) (undo-tree-id20030 . -6) (undo-tree-id20031 . -6) (undo-tree-id20032 . -6) (undo-tree-id20033 . -6) 1234 (1227 . 1234) 1204) nil (26418 25667 155805 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1263 . 1264) (#("
" 0 1 (fontified nil)) . -1318) (1263 . 1319)) nil (26418 25667 155787 833000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1263) (undo-tree-id19996 . -1) (undo-tree-id19997 . -1) (undo-tree-id19998 . -1) (undo-tree-id19999 . -1) (undo-tree-id20000 . -1) (undo-tree-id20001 . -1) (undo-tree-id20002 . -1)) nil (26418 25667 155786 885000) 0 nil])
([nil nil ((1263 . 1267)) nil (26418 25667 155782 736000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1271) (1263 . 1271)) nil (26418 25667 155781 679000) 0 nil])
([nil nil ((#("(s₁ = s₂) ∧" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 1 3 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 3 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 4 5 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 5 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 6 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 8 10 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 10 11 (face font-lock-constant-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1271) (undo-tree-id19985 . -10) (undo-tree-id19986 . -10) (undo-tree-id19987 . -10) (undo-tree-id19988 . -10) (undo-tree-id19989 . -10) (undo-tree-id19990 . -10) (undo-tree-id19991 . -10) (undo-tree-id19992 . -10) (undo-tree-id19993 . -10) (undo-tree-id19994 . -11) (undo-tree-id19995 . -11) 1281) nil (26418 25667 155777 833000) 0 nil])
([nil nil ((1231 . 1236) (1206 . 1207) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1206) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) 1207 (1177 . 1181) (t 26418 25667 182993 861000)) nil (26418 25717 86133 405000) 0 nil])
([nil nil ((#("         " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4)) 8 9 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1298) (undo-tree-id21046 . -8) (undo-tree-id21047 . -8) (undo-tree-id21048 . -8) (undo-tree-id21049 . -8) (undo-tree-id21050 . -8) (undo-tree-id21051 . -8) (undo-tree-id21052 . -8) (undo-tree-id21053 . -8) (1286 . 1298) (#("      " 0 6 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1281) (1273 . 1281) (#("        " 0 8 (fontified nil)) . -1257) (1245 . 1257) (#("      " 0 6 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1210) (undo-tree-id21054 . -6) (undo-tree-id21055 . -6) (undo-tree-id21056 . -6) (undo-tree-id21057 . -6) (undo-tree-id21058 . -6) (undo-tree-id21059 . -6) (undo-tree-id21060 . -6) (undo-tree-id21061 . -6) (undo-tree-id21062 . -6) (undo-tree-id21063 . -6) (undo-tree-id21064 . -6) (undo-tree-id21065 . -6) (undo-tree-id21066 . -6) (undo-tree-id21067 . -6) (undo-tree-id21068 . -6) (undo-tree-id21069 . -6) (undo-tree-id21070 . -6) (undo-tree-id21071 . -6) (undo-tree-id21072 . -6) (1202 . 1210) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1196) (undo-tree-id21073 . -8) (undo-tree-id21074 . -8) (undo-tree-id21075 . -8) (undo-tree-id21076 . -8) (undo-tree-id21077 . -8) (undo-tree-id21078 . -8) (undo-tree-id21079 . -8) (undo-tree-id21080 . -8) (undo-tree-id21081 . -8) (undo-tree-id21082 . -8) (undo-tree-id21083 . -8) (undo-tree-id21084 . -8) (undo-tree-id21085 . -8) (undo-tree-id21086 . -8) (undo-tree-id21087 . -8) (undo-tree-id21088 . -8) (undo-tree-id21089 . -8) (undo-tree-id21090 . -8) (undo-tree-id21091 . -8) (undo-tree-id21092 . -8) (undo-tree-id21093 . -8) (undo-tree-id21094 . -8) (undo-tree-id21095 . -8) (undo-tree-id21096 . -8) (undo-tree-id21097 . -8) (undo-tree-id21098 . -8) (undo-tree-id21099 . -8) (undo-tree-id21100 . -8) (1184 . 1196) (#("      " 0 6 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . -1155) (undo-tree-id21101 . -6) (undo-tree-id21102 . -6) (undo-tree-id21103 . -6) (undo-tree-id21104 . -6) (undo-tree-id21105 . -6) (undo-tree-id21106 . -6) (undo-tree-id21107 . -6) (undo-tree-id21108 . -6) (undo-tree-id21109 . -6) (undo-tree-id21110 . -6) (undo-tree-id21111 . -6) (undo-tree-id21112 . -6) (undo-tree-id21113 . -6) (undo-tree-id21114 . -6) (undo-tree-id21115 . -6) (undo-tree-id21116 . -6) (undo-tree-id21117 . -6) (undo-tree-id21118 . -6) (undo-tree-id21119 . -6) (undo-tree-id21120 . -6) (undo-tree-id21121 . -6) (1147 . 1155) 1291) nil (26418 25717 86128 68000) 0 nil])
([nil nil ((1106 . 1110) (#("next" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1106) (undo-tree-id21018 . -3) (undo-tree-id21019 . -4) (undo-tree-id21020 . -4) (undo-tree-id21021 . -4) (undo-tree-id21022 . -4) (undo-tree-id21023 . -4) (undo-tree-id21024 . -4) (undo-tree-id21025 . -4) (undo-tree-id21026 . -4) (undo-tree-id21027 . -4) (undo-tree-id21028 . -4) (undo-tree-id21029 . -4) (undo-tree-id21030 . -4) (undo-tree-id21031 . -4) (undo-tree-id21032 . -4) (undo-tree-id21033 . -4) (undo-tree-id21034 . -4) (undo-tree-id21035 . -4) (undo-tree-id21036 . -4) (undo-tree-id21037 . -4) (undo-tree-id21038 . -4) (undo-tree-id21039 . -4) (undo-tree-id21040 . -4) (undo-tree-id21041 . -4) (undo-tree-id21042 . -4) (undo-tree-id21043 . -4) (undo-tree-id21044 . -4) (undo-tree-id21045 . -4)) nil (26418 25717 85346 330000) 0 nil])
([nil nil ((#("next" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1127) (undo-tree-id21014 . 4) (undo-tree-id21015 . -3) (undo-tree-id21016 . -4) (undo-tree-id21017 . -4)) nil (26418 25717 85331 812000) 0 nil])
([nil nil ((1127 . 1131)) nil (26418 25717 85329 326000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1159) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) 1160) nil (26418 25717 85328 860000) 0 nil])
([nil nil ((1159 . 1160)) nil (26418 25717 85327 473000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1170) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) 1171) nil (26418 25717 85326 922000) 0 nil])
([nil nil ((1170 . 1171)) nil (26418 25717 85325 471000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1160) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) 1161) nil (26418 25717 85323 425000) 0 nil])
([nil nil ((1160 . 1161)) nil (26418 25717 85306 523000) 0 nil])
([nil nil ((1165 . 1166) (t 26418 25717 133207 884000)) nil (26418 25722 379242 874000) 0 nil])
([nil nil ((830 . 831) (t 26418 25722 426559 392000)) nil (26418 25737 772756 294000) 0 nil])
([nil nil ((831 . 834)) nil (26418 25737 772755 724000) 0 nil])
([nil nil ((834 . 835)) nil (26418 25737 772755 262000) 0 nil])
([nil nil ((835 . 848)) nil (26418 25737 772754 867000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . -845) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -846) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -847) (undo-tree-id21144 . -1) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) 848) nil (26418 25737 772753 575000) 0 nil])
([nil nil ((845 . 866)) nil (26418 25737 772741 369000) 0 nil])
([nil nil ((866 . 867)) nil (26418 25737 772740 994000) 0 nil])
([nil nil ((867 . 868)) nil (26418 25737 772740 570000) 0 nil])
([nil nil ((868 . 870)) nil (26418 25737 772740 77000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -869) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) 870) nil (26418 25737 772738 502000) 0 nil])
([nil nil ((869 . 870)) nil (26418 25737 772725 197000) 0 nil])
([nil nil ((1963 . 1964) (#("?" 0 1 (fontified t match-data (0 0))) . -1963) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) 1964 (1950 . 1964) (#("i" 0 1 (fontified t match-data (0 0))) . -1950) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (#("n" 0 1 (fontified t match-data (0 0))) . -1951) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1952) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (#("r" 0 1 (fontified t match-data (0 0))) . -1953) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) (undo-tree-id21253 . -1) (undo-tree-id21254 . -1) (undo-tree-id21255 . -1) (undo-tree-id21256 . -1) (undo-tree-id21257 . -1) (undo-tree-id21258 . -1) (undo-tree-id21259 . -1) (undo-tree-id21260 . -1) (undo-tree-id21261 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1954) (undo-tree-id21262 . -1) (undo-tree-id21263 . -1) (undo-tree-id21264 . -1) (undo-tree-id21265 . -1) (undo-tree-id21266 . -1) (undo-tree-id21267 . -1) (undo-tree-id21268 . -1) (undo-tree-id21269 . -1) (undo-tree-id21270 . -1) (undo-tree-id21271 . -1) (undo-tree-id21272 . -1) (undo-tree-id21273 . -1) (undo-tree-id21274 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1955) (undo-tree-id21275 . -1) (undo-tree-id21276 . -1) (undo-tree-id21277 . -1) (undo-tree-id21278 . -1) (undo-tree-id21279 . -1) (undo-tree-id21280 . -1) (undo-tree-id21281 . -1) (undo-tree-id21282 . -1) (undo-tree-id21283 . -1) (undo-tree-id21284 . -1) 1956 (1952 . 1956) (#("r" 0 1 (fontified t match-data (0 0))) . -1952) (undo-tree-id21285 . -1) (undo-tree-id21286 . -1) (undo-tree-id21287 . -1) (undo-tree-id21288 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1953) (undo-tree-id21289 . -1) (undo-tree-id21290 . -1) (undo-tree-id21291 . -1) (undo-tree-id21292 . -1) 1954 (1952 . 1954) (#("t" 0 1 (fontified t match-data (0 0))) . -1952) (undo-tree-id21293 . -1) (#("o" 0 1 (fontified t match-data (0 0))) . -1953) (undo-tree-id21294 . -1) 1954 (1948 . 1954) (1940 . 1948) (#("      " 0 6 (fontified t match-data (0 0))) . 1940) (undo-tree-id21295 . -6) 1946 (1942 . 1946) (1940 . 1942) (1939 . 1940) (1926 . 1939) (1918 . 1926) (#("      " 0 6 (fontified t match-data (0 0))) . 1918) (undo-tree-id21296 . -6) 1924 (1920 . 1924) (1918 . 1920) (1917 . 1918) (1911 . 1913) (#("s" 0 1 (fontified t match-data (0 0))) . -1911) (undo-tree-id21297 . -1) (undo-tree-id21298 . -1) (undo-tree-id21299 . -1) (undo-tree-id21300 . -1) (#("'" 0 1 (fontified t match-data (0 0))) . -1912) (undo-tree-id21301 . -1) (undo-tree-id21302 . -1) (undo-tree-id21303 . -1) (undo-tree-id21304 . -1) (#("'" 0 1 (fontified t match-data (0 0))) . -1913) (undo-tree-id21305 . -1) (undo-tree-id21306 . -1) (undo-tree-id21307 . -1) (undo-tree-id21308 . -1) 1914 (1909 . 1914) (#("s" 0 1 (fontified t match-data (0 0))) . -1909) (undo-tree-id21309 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1910) (undo-tree-id21310 . -1) 1911 (1906 . 1911) (#("s" 0 1 (fontified t match-data (0 0))) . -1906) (undo-tree-id21311 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1907) (undo-tree-id21312 . -1) (#("a" 0 1 (fontified t match-data (0 0))) . -1908) (undo-tree-id21313 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1909) (undo-tree-id21314 . -1) (#("s" 0 1 (fontified t match-data (0 0))) . -1910) (undo-tree-id21315 . -1) (#("'" 0 1 (fontified t match-data (0 0))) . -1911) (undo-tree-id21316 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -1912) (undo-tree-id21317 . -1) (#("h" 0 1 (fontified t match-data (0 0))) . -1913) (undo-tree-id21318 . -1) (#("p" 0 1 (fontified t match-data (0 0))) . -1914) (undo-tree-id21319 . -1) 1915 (1902 . 1905) (#("p" 0 1 (fontified t match-data (0 0))) . -1902) (undo-tree-id21320 . -1) (#("r" 0 1 (fontified t match-data (0 0))) . -1903) (undo-tree-id21321 . -1) 1904 (1902 . 1904) (#("n" 0 1 (fontified t match-data (0 0))) . -1902) (undo-tree-id21322 . -1) (#("e" 0 1 (fontified t match-data (0 0))) . -1903) (undo-tree-id21323 . -1) (#("x" 0 1 (fontified t match-data (0 0))) . -1904) (undo-tree-id21324 . -1) (#("t" 0 1 (fontified t match-data (0 0))) . -1905) (undo-tree-id21325 . -1) 1906 (t 26418 25737 793274 156000)) nil (26418 25941 119252 238000) 0 nil])
([nil nil ((1964 . 1965) (#("        " 0 8 (fontified nil match-data (0 0))) . 1964) (undo-tree-id21191 . 8) (undo-tree-id21192 . 8) (#("
" 0 1 (fontified t match-data (0 0))) . -1964) (undo-tree-id21193 . 1) (undo-tree-id21194 . -1) (undo-tree-id21195 . 1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) 1963) nil (26418 25941 119188 73000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil match-data (0 0))) . -1956) (undo-tree-id21180 . -8) (undo-tree-id21181 . -8) (undo-tree-id21182 . -8) (undo-tree-id21183 . -8) (1944 . 1956) (#("        " 0 8 (fontified nil match-data (0 0))) . -1930) (undo-tree-id21184 . -8) (undo-tree-id21185 . -8) (undo-tree-id21186 . -8) (undo-tree-id21187 . -8) (undo-tree-id21188 . -8) (undo-tree-id21189 . -8) (undo-tree-id21190 . -8) (1918 . 1930) 1948) nil (26418 25941 119181 650000) 0 nil])
([nil nil ((1987 . 1990)) nil (26418 25941 119175 135000) 0 nil])
([nil nil ((1990 . 1992)) nil (26418 25941 119174 686000) 0 nil])
([nil nil ((1790 . 1794)) nil (26418 25941 119174 193000) 0 nil])
([nil nil ((1996 . 2000)) nil (26418 25941 119173 790000) 0 nil])
([nil nil ((1998 . 1999)) nil (26418 25941 119173 405000) 0 nil])
([nil nil ((1992 . 1993)) nil (26418 25941 119173 18000) 0 nil])
([nil nil ((2023 . 2024)) nil (26418 25941 119172 628000) 0 nil])
([nil nil ((2024 . 2026)) nil (26418 25941 119172 241000) 0 nil])
([nil nil ((2026 . 2030)) nil (26418 25941 119171 864000) 0 nil])
([nil nil ((2024 . 2032) (#("      " 0 6 (fontified t match-data (0 0))) . 2024) (undo-tree-id21179 . -6) 2030) nil (26418 25941 119171 366000) 0 nil])
([nil nil ((2032 . 2036)) nil (26418 25941 119170 423000) 0 nil])
([nil nil ((2036 . 2037)) nil (26418 25941 119170 42000) 0 nil])
([nil nil ((2037 . 2044)) nil (26418 25941 119169 655000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 0))) . -2043) (undo-tree-id21178 . -1) 2044) nil (26418 25941 119169 135000) 0 nil])
([nil nil ((2043 . 2046)) nil (26418 25941 119168 159000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 0))) . -2043) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (#("n" 0 1 (fontified t match-data (0 0))) . -2044) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (#("i" 0 1 (fontified t match-data (0 0))) . -2045) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) 2046) nil (26418 25941 119167 210000) 0 nil])
([nil nil ((2043 . 2054)) nil (26418 25941 119163 864000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t match-data (0 0))) . -2052) (undo-tree-id21170 . -1) (#(" " 0 1 (fontified t match-data (0 0))) . -2053) (undo-tree-id21171 . -1) 2054) nil (26418 25941 119163 227000) 0 nil])
([nil nil ((2052 . 2056)) nil (26418 25941 119161 762000) 0 nil])
([nil nil ((769 . 772)) nil (26418 25941 119161 393000) 0 nil])
([nil nil ((770 . 792)) nil (26418 25941 119160 908000) 0 nil])
([nil nil ((792 . 798)) nil (26418 25941 119160 542000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -796) (undo-tree-id21168 . -1) (#("y" 0 1 (fontified t)) . -797) (undo-tree-id21169 . -1) 798) nil (26418 25941 119159 789000) 0 nil])
([nil nil ((796 . 809)) nil (26418 25941 119157 897000) 0 nil])
([nil nil ((809 . 812)) nil (26418 25941 119157 526000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -809) (undo-tree-id21165 . -1) (#("s" 0 1 (fontified t)) . -810) (undo-tree-id21166 . -1) (#(" " 0 1 (fontified t)) . -811) (undo-tree-id21167 . -1) 812) nil (26418 25941 119156 597000) 0 nil])
([nil nil ((809 . 816)) nil (26418 25941 119154 518000) 0 nil])
([nil nil ((816 . 817)) nil (26418 25941 119154 71000) 0 nil])
([nil nil ((817 . 819)) nil (26418 25941 119153 651000) 0 nil])
([nil nil ((819 . 830)) nil (26418 25941 119153 237000) 0 nil])
([nil nil ((830 . 832)) nil (26418 25941 119152 828000) 0 nil])
([nil nil ((832 . 833)) nil (26418 25941 119152 453000) 0 nil])
([nil nil ((833 . 835)) nil (26418 25941 119152 61000) 0 nil])
([nil nil ((835 . 846)) nil (26418 25941 119151 682000) 0 nil])
([nil nil ((843 . 847)) nil (26418 25941 119151 375000) 0 nil])
([nil nil ((#("h" 0 1 (face lsp-face-semhl-variable fontified t)) . -842) (undo-tree-id21164 . -1) 843) nil (26418 25941 119150 945000) 0 nil])
([nil nil ((842 . 843)) nil (26418 25941 119149 924000) 0 nil])
([nil nil ((850 . 851)) nil (26418 25941 119149 536000) 0 nil])
([nil nil ((850 . 851)) nil (26418 25941 119148 894000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-constant-face fontified t)) . -831) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) 832) nil (26418 25941 119148 312000) 0 nil])
([nil nil ((831 . 832)) nil (26418 25941 119146 293000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-preprocessor-face fontified t)) . -826) (undo-tree-id21161 . -1) 827) nil (26418 25941 119145 626000) 0 nil])
([nil nil ((826 . 827)) nil (26418 25941 119144 602000) 0 nil])
([nil nil ((#("ℕ" 0 1 (face font-lock-constant-face fontified t)) . -815) (undo-tree-id21160 . -1) 816) nil (26418 25941 119144 20000) 0 nil])
([nil nil ((815 . 816)) nil (26418 25941 119142 669000) 0 nil])
([nil nil ((769 . 770)) nil (26418 25941 119142 262000) 0 nil])
([nil nil ((770 . 774)) nil (26418 25941 119141 840000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -773) (undo-tree-id21159 . -1) 774) nil (26418 25941 119141 183000) 0 nil])
([nil nil ((773 . 793)) nil (26418 25941 119140 110000) 0 nil])
([nil nil ((793 . 809)) nil (26418 25941 119139 307000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -808) (undo-tree-id21151 . -1) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) 809) nil (26418 25941 119137 640000) 0 nil])
([nil current ((808 . 814)) nil (26418 25941 119120 872000) 0 nil])
nil
